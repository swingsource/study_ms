{
  "name": "CSS 教程",
  "author": "admin",
  "type": "前端入门",
  "introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\n通过使用 CSS 来提升工作效率！",
  "data": [{
    "teach_name": "CSS 教程",
    "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
    "sort_index": 1,
    "parent_sort_index": 1,
    "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
    "chapter_level_one_parent_id": "0",
    "chapter_level_one_name": "CSS 教程",
    "chapter_level_one_url": "",
    "chapter_level_two_id": "2705fc9276f3f33d9d2f906b4e0752f9",
    "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
    "chapter_level_two_name": "CSS 教程导读",
    "chapter_level_two_url": "/css/css-tutorial.html",
    "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\"> 教程导读</span> </h2><p>通过使用 CSS 来我们可以大大提升网页开发的工作效率！</p><p>在我们的 CSS 教程中，您会学到如何使用 CSS 同时控制多重网页的样式和布局。</p><h2 class=\"tutheader\">各章节实例</h2><p>本 CSS 教程包含了数百个 CSS 在线实例</p><p>通过本站的在线编辑器，你可以在线编辑 CSS ,并且可以在线查看修改后的效果。</p><div class=\"example\"><h2 class=\"example_head\">CSS 实例</h2><div class=\"example_code notranslate\">body<br> {background-color:#d0e4fe;}<br> h1<br> {color:orange;<br>text-align:center;}<br> p<br> {font-family:\"Times New Roman\";<br>font-size:20px;}</div><br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_default\" class=\"tryitbtn\">尝试一下 »</a> </div><p><strong>点击 \"尝试一下\" 按钮查看 CSS 是如何工作的。</strong></p><p><strong style=\"line-height: 1.7;\"></strong><br></p><h2 style=\"display: inline !important;\">CSS 实战闯关</h2><p><strong><span>我们为学习者准备了大量的 CSS 编程实战练习，供大家通过亲自编程实验来熟练编程操作</span></strong></p><p></p><p><a href=\"//www.w3cschool.cn/codecamp/list?ccid=2\" target=\"_blank\">开始CSS编程闯关</a></p><p><span style=\"font-family: 微软雅黑; font-size: 16px; line-height: 1.7;\"><br>CSS 实例</span><br></p><p>CSS 在线 150 个实例，通过本站编辑器，你可以学习在线查看修改后 CSS 的运行效果。</p><p><a href=\"/css/css-examples.html\" target=\"_blank\">尝试一下!</a></p><h2 class=\"tutheader\">CSS 参考手册</h2><p>在 W3CSchool 中你可以找到更完整的 CSS 属性、选择器的语法，浏览器支持等资料.</p><p><a href=\"//www.w3cschool.cn/search?w=CSS+%E5%B1%9E%E6%80%A7\" target=\"_blank\" textvalue=\"CSS 属性\">CSS 属性</a> </p><p><a href=\"//www.w3cschool.cn/explore?search=CSS+%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C\" target=\"_blank\" textvalue=\"CSS 选择器参考手册\">CSS 选择器参考手册</a></p><p><a href=\"//www.w3cschool.cn/explore?search=CSS+%E5%A3%B0%E9%9F%B3%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C\" target=\"_blank\">CSS 声音参考手册</a></p><p><a href=\"//www.w3cschool.cn/cssref/css-units.html\" target=\"_blank\" textvalue=\"CSS 单位\">CSS 单位</a></p><p><a href=\"//www.w3cschool.cn/explore?search=CSS+%E9%A2%9C%E8%89%B2%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C\" target=\"_blank\">CSS 颜色参考手册</a></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
  },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 19,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "5eef5e27203f19c006da7a519c9bc06f",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Display (显示) 与 Visibility（可见性）",
      "chapter_level_two_url": "/css/css-display-visibility.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Display(显示)</span> 与 <span class=\"color_h1\">Visibility（可见性）</span> </h2><p> CSS display 属性和 visibility 属性都可以用来隐藏某个元素，但是这两个属性有不同的定义，请详细阅读以下内容。</p><hr><p class=\"intro\">display 属性设置一个元素应如何显示，visibility 属性指定一个元素应可见还是隐藏。</p><div style=\"text-align:center\">    <div style=\"height:150px;margin-left:auto;margin-right:auto;text-align:left;border:1px solid gray;\">        <div class=\"imgbox\" id=\"imgbox1\" style=\"display: inline-block;\">Box 1            <br>            <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis_small.jpg\" width=\"107\" height=\"90\" alt=\"\">            <br>            <input class=\"hideimg\" value=\"移除\" type=\"button\">        </div>        <div class=\"imgbox\" id=\"imgbox2\" style=\"display: inline-block;\">Box 2            <br>            <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis2_small.jpg\" width=\"107\" height=\"80\" alt=\"\">            <input class=\"hiddenimg\" value=\"隐藏\" type=\"button\">        </div>        <div class=\"imgbox\" style=\"display: inline-block;\">Box 3            <br>            <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis3_small.jpg\" width=\"116\" height=\"90\" alt=\"\">            <input class=\"showall\" value=\"显示所有\" type=\"button\">        </div>    </div></div><hr> <h2>隐藏元素 - display:none 或 visibility:hidden</h2> <p>隐藏一个元素可以通过把 display 属性设置为\"none\"，或把 visibility 属性设置为\"hidden\"。但是请注意，这两种方法会产生不同的结果。</p><p>visibility:hidden 可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。</p><div class=\"example\">     <h2 class=\"example\">实例</h2>     <div class=\"example_code notranslate\">h1.hidden {visibility:hidden;}</div>    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_hidden\" class=\"tryitbtn\">尝试一下 »</a> </div><p>display:none 可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。</p><div class=\"example\">     <h2 class=\"example\">实例</h2>     <div class=\"example_code notranslate\">h1.hidden {display:none;}</div>    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_none\" class=\"tryitbtn\">尝试一下 »</a></div><hr> <h2>CSS Display - 块和内联元素</h2> <p>块元素是一个元素，占用了全部宽度，在前后都是换行符。</p><p>块元素的例子：</p><ul>    <li>&lt;h1&gt;</li>    <li>&lt;p&gt;</li>    <li>&lt;div&gt;</li></ul><p class=\"elem_d11\">内联元素只需要必要的宽度，不强制换行。</p><p>内联元素的例子：</p><ul class=\"dd\">    <li>&lt;span&gt;</li>    <li>&lt;a&gt;</li></ul><hr> <h2>如何改变一个元素显示</h2> <p>可以更改内联元素为块元素，反之亦然，可以使页面看起来是以一种特定的方式组合，并仍然遵循 web 标准。</p><p>下面的示例把列表项显示为内联元素：</p><div class=\"example\">     <h2 class=\"example\">实例</h2>     <div class=\"example_code notranslate\">li {display:inline;}</div>    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_inline_list\" class=\"tryitbtn\">尝试一下 »</a> </div><p>下面的示例把 span 元素作为块元素：</p><div class=\"example\">     <h2 class=\"example\">实例</h2>     <div class=\"example_code notranslate\">span {display:block;}</div>    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_block2\" class=\"tryitbtn\">尝试一下 »</a> </div><p><strong>注意：</strong>变更元素的显示类型看该元素是如何显示，它是什么样的元素。例如：一个内联元素设置为 display:block 是不允许有它内部的嵌套块元素。    <br></p><hr><div class=\"tryit_ex\">    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">    <h2>更多实例</h2> </div><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display\" target=\"_blank\">如何显示元素的内联元素。</a></p><p>这个例子演示了如何显示一个元素的内联元素。</p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_block\" target=\"_blank\">如何显示元素的块元素。</a></p><p>这个例子演示了如何显示一个元素的块元素。</p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_collapse\" target=\"_blank\">如何使用一个表的collapse属性。</a></p><p>这个例子演示了如何使用表的collapse属性。</p></div>\r\n<script>\r\n$(function(){\r\n $(\".hideimg\").on('click', function(){\r\n\r\n    $(this).parent().find(\"img\").hide();\r\n });\r\n\r\n$(\".hiddenimg\").on(\"click\",function(){\r\n\r\n    $(this).parent().find(\"img\").css({'visibility': 'hidden'});\r\n});\r\n\r\n$(\".showall\").on(\"click\",function(){\r\n    console.log('showall');\r\n\r\n    $(this).parent().parent().find(\"img\").show().css({'visibility': 'visible'});\r\n});\r\n\r\n});\r\n</script><div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 18,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "bda897264d188d5739dfc18f1e525016",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 尺寸 (Dimension)",
      "chapter_level_two_url": "/css/css-dimension.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">尺寸 (Dimension)</span> </h2> <hr> <p class=\"intro\">CSS 尺寸 (Dimension) 属性允许你控制元素的高度和宽度。同样，它允许你增加行间距。</p> <hr> <div class=\"tryit_ex\"> <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\"><h2>更多实例</h2> </div> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height\" target=\"_blank\">设置元素的高度</a></p> <p>这个例子演示了如何设置不同元素的高度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height_percent\" target=\"_blank\">使用百分比设置图像的高度</a></p> <p>这个例子演示了如何使用百分比值设置元素的高度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_width\" target=\"_blank\">使用像素值来设置元素的宽度</a></p> <p>本例演示如何使用像素值来设置元素的宽度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max_height\" target=\"_blank\">设置元素的最大高度</a></p> <p>此示例演示如何设置元素的最大高度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-width_percent\" target=\"_blank\">使用百分比来设置元素的最大宽度</a></p> <p>本例演示如何使用百分比值来设置元素的最大宽度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-height\" target=\"_blank\">设置元素的最低高度</a></p> <p>此示例演示如何设置元素的最小高度。</p> <p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-width\" target=\"_blank\">使用像素值设置元素的最小宽度</a></p> <p>这个例子演示了如何使用像素值设置元素的最小宽度。</p> <hr> <h2>所有CSS 尺寸 (Dimension)属性</h2> <table class=\"reference\"> <tbody><tr> <th>属性</th> <th>描述</th> </tr> <tr> <td><a href=\"/cssref/pr-dim-height.html\">height</a></td> <td>设置元素的高度。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-line-height.html\">line-height</a></td> <td>设置行高。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-max-height.html\">max-height</a></td> <td>设置元素的最大高度。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-max-width.html\">max-width</a></td> <td>设置元素的最大宽度。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-min-height.html\">min-height</a></td> <td>设置元素的最小高度。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-min-width.html\">min-width</a></td> <td>设置元素的最小宽度。</td> </tr> <tr> <td><a href=\"/cssref/pr-dim-width.html\">width</a></td> <td>设置元素的宽度。</td> </tr> </tbody></table></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 17,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f6af355d32b12c7d44fe4fd98fbb323b",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 分组和嵌套",
      "chapter_level_two_url": "/css/css-grouping-nesting.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">分组</span> 和 <span class=\"color_h1\">嵌套</span> 选择器</h2> \n<p>CSS 分组可以将具有相同样式的选择器进行分组，减少代码量。</p>\n<p>CSS 嵌套适用于选择器内部的选择器的样式。</p>\n<hr>\n <h2>Grouping Selectors</h2> \n<p>在样式表中有很多具有相同样式的元素。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">h1{\n        <br>    color:green;\n        <br>}\n        <br>h2{\n        <br>    color:green;\n        <br>}\n        <br>p{\n        <br>    color:green;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_first\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>为了尽量减少代码，你可以使用分组选择器。</p>\n<p>每个选择器用逗号分隔.</p>\n<p>在下面的例子中，我们对以上代码使用分组选择器：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h1,h2,p{\n        <br>color:green;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_grouping\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b> 提示：</b>您可以对任意多个选择器进行分组，CSS 对此没有任何限制。</p>\n<hr>\n <h2>嵌套选择器</h2> \n<p>它可能适用于选择器内部的选择器的样式。</p>\n<p>在下面的例子，为所有 p 元素指定一个样式，为所有元素指定一个 class=\"marked\"的样式，并仅用于class=\"标记\"，类内的 p 元素指定第三个样式：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p{\n        <br>color:blue;\n        <br>text-align:center;\n        <br>}\n        <br>.marked{\n        <br>background-color:red;\n        <br>}\n        <br>.marked p{\n        <br>color:white;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_nesting\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 16,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "d1b712d148cceaae06912b0e103e9af3",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Padding（填充）",
      "chapter_level_two_url": "/css/css-padding.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Padding（填充）</span> </h2> \n<hr>\n<p class=\"intro\">CSS Padding（填充）属性定义元素边框与元素内容之间的空间。</p>\n<hr>\n <h2>Padding（填充）</h2> \n<p>当元素的 Padding（填充）（内边距）被清除时，所\"释放\"的区域将会受到元素背景颜色的填充。</p>\n<p>单独使用填充属性可以改变上下左右的填充。缩写填充属性也可以使用，一旦改变一切都改变。</p>\n <h2>可能的值</h2> \n<table class=\"reference\">\n    <tbody>\n        <tr>\n            <th align=\"left\">值</th>\n            <th align=\"left\">说明</th>\n        </tr>\n        <tr>\n            <td>length</td>\n            <td>定义一个固定的填充(像素, pt, em,等)</td>\n        </tr>\n        <tr>\n            <td>%</td>\n            <td>使用百分比值定义一个填充</td>\n        </tr>\n    </tbody>\n</table>\n<p><b> 提示：</b>CSS padding 属性可以使用长度值或百分比值，但与 margin 属性不同，它不允许使用负值。</p>\n<hr>\n\n<h2>内边距的百分比数值</h2>\n\n<p>CSS padding 属性的百分比数值是相对于其父元素的 width 计算的，如果改变了父元素的 width，则它们也会改变。</p>\n<p>以下是将段落的内边距设置为父元素 width 的 20% 的示例：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p {padding: 20%;}</p>\n    </div>\n</div>\n<p>假设一个段落的父元素是 div 元素，那么它的 padding 的 width 计算是根据 div 进行的：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;div style=\"width: 200px;\"&gt;        </p>\n        <p>&lt;p&gt;这个段落包含在一个宽度为200像素的DIV中。&lt;/p&gt;    </p>\n        <p>&lt;/div&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_padding_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br>点击“尝试一下”按钮查看在线实例</div>\n<p><b>注意：</b>上下内边距与左右内边距一致，即上下内边距的百分数会相对于父元素宽度设置，而不是相对于高度。</p>\n<hr>\n <h2>填充- 单边内边距属性</h2> \n<p>在CSS中，它可以指定不同的侧面不同的填充：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">padding-top:25px;\n        <br>padding-bottom:25px;\n        <br>padding-right:50px;\n        <br>padding-left:50px;</div>\n    <br><a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding_sides\" target=\"_blank\">尝试一下 »</a></div>\n<hr>\n <h2>填充 - 简写属性</h2> \n<p>为了缩短代码，它可以在一个属性中指定的所有填充属性。</p>\n<p>这就是所谓的缩写属性。所有的填充属性的缩写属性是\"padding\":</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">padding:25px 50px;</div>\n    <br><a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding_shorthand\" target=\"_blank\">尝试一下 »</a> \n</div>\n<p>Padding 属性，可以有一到四个值。</p>\n<p><strong>padding:25px 50px 75px 100px;</strong>\n\n</p>\n<ul>\n    <li>上填充为25px</li>\n    <li>右填充为50px</li>\n    <li>下填充为75px</li>\n    <li>左填充为100px</li>\n</ul>\n<p><strong>  padding:25px 50px 75px;</strong>\n\n</p>\n<ul>\n    <li>上填充为25px</li>\n    <li>左右填充为50px</li>\n    <li>下填充为75px</li>\n</ul>\n<p><strong>  padding:25px 50px;</strong>\n\n</p>\n<ul>\n    <li>上下填充为25px</li>\n    <li>左右填充为50px</li>\n</ul>\n<p><strong>  padding:25px;</strong>\n\n</p>\n<ul>\n    <li>所有的填充都是25px</li>\n</ul>\n<hr>\n<div class=\"tryit_ex\">\n    <img width=\"40\" height=\"46\" alt=\"Examples\" src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\">\n     <h2>更多实例</h2> \n</div>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding\" target=\"_blank\">在一个声明中的所有填充属性</a>\n\n    <br>这个例子演示了使用缩写属性设置在一个声明中的所有填充属性，可以有一到四个值。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-left\" target=\"_blank\">设置左部填充</a>\n\n    <br>这个例子演示了如何设置元素左填充。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-right\" target=\"_blank\">设置右部填充</a>\n\n    <br>这个例子演示了如何设置元素右填充。.</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-top\" target=\"_blank\">设置上部填充</a>\n\n    <br>这个例子演示了如何设置元素上填充。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-bottom\" target=\"_blank\">设置下部填充</a>\n\n    <br>这个例子演示了如何设置元素下填充。</p>\n<hr>\n <h2>所有的CSS填充属性</h2> \n<table width=\"100%\" class=\"reference\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n    <tbody>\n        <tr>\n            <th width=\"20%\" align=\"left\">属性</th>\n            <th width=\"80%\" align=\"left\">说明</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-padding.html\">padding</a>\n\n            </td>\n            <td>使用缩写属性设置在一个声明中的所有填充属性</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-padding-bottom.html\">padding-bottom</a>\n\n            </td>\n            <td>设置元素的底部填充</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-padding-left.html\">padding-left</a>\n\n            </td>\n            <td>设置元素的左部填充</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-padding-right.html\">padding-right</a>\n\n            </td>\n            <td>设置元素的右部填充</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-padding-top.html\">padding-top</a>\n\n            </td>\n            <td>设置元素的顶部填充</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 15,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "852d30320f645b023de83bea183e30c9",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Margin(外边距)",
      "chapter_level_two_url": "/css/css-margin.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Margin(外边距)</span> </h2> <hr> <p class=\"intro\">CSS Margin (外边距)属性定义元素周围的空间。</p><p class=\"intro\">CSS Margin 属性接受任何长度单位、百分数值甚至负值。</p> <hr> <h2>Margin</h2> <p>margin 清除周围的元素（外边框）的区域。margin 没有背景颜色，是完全透明的</p> <p>margin 可以单独改变元素的上，下，左，右边距。也可以一次改变所有的属性。</p> <h2>可能的值</h2> <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" class=\"reference\"> <tbody><tr> <th align=\"left\">值</th> <th align=\"left\">说明</th> </tr> <tr> <td>auto</td> <td>设置浏览器边距。<br>这样做的结果会依赖于浏览器</td> </tr> <tr> <td><i>length</i></td> <td>定义一个固定的margin（使用像素，pt，em等） </td> </tr> <tr> <td><i>%</i></td> <td>定义一个使用百分比的边距</td> </tr> </tbody></table> <p><img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> Margin 可以使用负值，重叠的内容。</p> <hr></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 14,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c30c0ad71e420fca94331b8e073c2b32",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 轮廓（outline）属性",
      "chapter_level_two_url": "/css/css-outline.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Outlines</span> </h2> <hr> <p class=\"intro\">轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p> <p class=\"intro\">轮廓（outline）属性指定了样式，颜色和外边框的宽度。</p><p class=\"intro\">轮廓（outline）属性的位置让它不像边框那样参与到文档流中，因此轮廓出现或消失时不会影响文档流，即不会导致文档的重新显示。<br></p> <hr> <h2>轮廓（outline）实例</h2> <p> <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline\">在元素周围画线</a><br> 本例演示使用outline属性在元素周围画一条线。.</p> <p> <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-style\">设置轮廓的样式</a><br> 本例演示如何设置轮廓的样式。</p> <p> <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-color\">设置轮廓的颜色</a><br> 本例演示如何设置轮廓的颜色。</p> <p> <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-width\">设置轮廓的宽度</a><br> 本例演示如何设置轮廓的宽度。</p> <hr> <h2>CSS 轮廓（outline）</h2> <p>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p> <p>CSS outline 属性规定元素轮廓的样式、颜色和宽度。</p> <p style=\"text-align: center; \"><img src=\"https://7n.w3cschool.cn/statics/images/course/box_outline.gif\" alt=\"Outline\" width=\"536\" height=\"289\"></p><p><b><br></b></p><p><b>提示：</b>你可以在本站的《CSS参考手册》中了解更多关于 <a href=\"https://www.w3cschool.cn/cssref/pr-outline.html\" target=\"_blank\" style=\"background-color: rgb(255, 255, 255);\">CSS outline属性</a> 的信息。</p><hr> <h2>所有 CSS 轮廓（outline）属性</h2> <p>\"CSS\" 列中的数字表示哪个 CSS 版本定义了该属性 ( CSS1 或者 CSS2 )。 </p> <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" class=\"reference\"> <tbody><tr> <th width=\"20%\" align=\"left\">属性</th> <th width=\"53%\" align=\"left\">说明</th> <th width=\"20%\" align=\"left\">值</th> <th width=\"7%\" align=\"left\">CSS</th> </tr> <tr> <td><a href=\"/cssref/pr-outline.html\">outline</a> </td> <td>在一个声明中设置所有的外边框属性</td> <td><i>outline-color<br> outline-style<br> outline-width<br> </i>inherit</td> <td>2</td> </tr> <tr> <td> <a href=\"/cssref/pr-outline-color.html\"> outline-color</a> </td> <td>设置外边框的颜色</td> <td><i>color-name<br> hex-number<br> rgb-number<br> </i>invert<br> inherit</td> <td>2</td> </tr> <tr> <td> <a href=\"/cssref/pr-outline-style.html\"> outline-style</a> </td> <td>设置外边框的样式</td> <td>none<br> dotted<br> dashed<br> solid<br> double<br> groove<br> ridge<br> inset<br> outset<br> inherit</td> <td>2</td> </tr> <tr> <td> <a href=\"/cssref/pr-outline-width.html\"> outline-width</a> </td> <td>设置外边框的宽度</td> <td>thin<br> medium<br> thick<br> <i>length<br> </i>inherit</td> <td>2</td></tr></tbody></table></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 13,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "8323ff711342bd7a569625200539189c",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Border (边框)",
      "chapter_level_two_url": "/css/css-border.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">边框</span> </h2> \n<p>CSS 边框 (border) 可以是围绕元素内容和内边距的一条或多条线，对于这些线条，您可以自定义它们的样式、宽度以及颜色。使用 CSS 边框属性，我们可以创建出比 HTML 中更加优秀的效果。</p>\n<div style=\"width:93%;border:10px groove #98bf21;padding:8px\">\n     <h2>CSS 边框属性</h2> \n    <p>CSS边框属性允许你指定一个元素边框的样式和颜色。</p>\n</div>\n <h2>边框样式</h2> \n<p>边框样式属性指定要显示什么样的边界。</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> <b>border-style</b>属性用来定义边框的样式</p>\n <h2>border-style 值:</h2> \n<p style=\"border: 1px none #000000;padding:3px\">none: 默认无边框</p>\n<p style=\"border: 1px dotted #000000;padding:3px\">dotted: 定义一个点线框</p>\n<p style=\"border: 1px dashed #000000;padding:3px\">dashed: 定义一个虚线框</p>\n<p style=\"border: 1px solid #000000;padding:3px\">solid: 定义实线边界</p>\n<p style=\"border: 3px double #000000;padding:3px\">double: 定义两个边界。 两个边界的宽度和border-width的值相同</p>\n<p style=\"border: 5px groove #98bf21;padding:3px\">groove: 定义3D沟槽边界。效果取决于边界的颜色值</p>\n<p style=\"border: 5px ridge #98bf21;padding:3px\">ridge: 定义3D脊边界。效果取决于边界的颜色值</p>\n<p style=\"border: 5px inset #98bf21;padding:3px\">inset:定义一个3D的嵌入边框。效果取决于边界的颜色值</p>\n<p style=\"border: 5px outset #98bf21;padding:3px\">outset: 定义一个3D突出边框。 效果取决于边界的颜色值</p>\n<p>尝试一下: <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-style\">设置边框样式</a>\n\n</p>\n<hr>\n <h2>边框宽度</h2> \n<p>您可以通过 border-width 属性为边框指定宽度。</p>\n<p>为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em；或者使用 3 个关键字之一，它们分别是 thin 、medium（默认值） 和 thick。</p>\n<p><b>注意：</b>CSS 没有定义 3 个关键字的具体宽度，所以一个用户代理可能把 thin 、medium 和 thick 分别设置为等于 5px、3px 和 2px，而另一个用户代理则分别设置为 3px、2px 和 1px。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p.one\n        <br>{\n        <br>border-style:solid;\n        <br>border-width:5px;\n        <br>}\n        <br>p.two\n        <br>{\n        <br>border-style:solid;\n        <br>border-width:medium;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-width\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>边框颜色</h2> \n<p>border-color 属性用于设置边框的颜色，它一次可以接受最多 4 个颜色值。可以设置的颜色：</p>\n<ul>\n    <li>name - 指定颜色的名称，如 \"red\"</li>\n    <li>RGB - 指定 RGB 值, 如 \"rgb(255,0,0)\"</li>\n    <li>Hex - 指定16进制值, 如 \"#ff0000\"</li>\n</ul>\n<p>您还可以设置边框的颜色为\"transparent\"。</p>\n<p><b>注意：</b> border-color 单独使用是不起作用的，必须得先使用 border-style 来设置边框样式。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">p.one\n        <br>{\n        <br>border-style:solid;\n        <br>border-color:red;\n        <br>}\n        <br>p.two\n        <br>{\n        <br>border-style:solid;\n        <br>border-color:#98bf21;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-color1\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>边框-单独设置各边</h2> \n<p>在 CSS 中，可以指定不同的侧面不同的边框：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p\n        <br>{\n        <br>border-top-style:dotted;\n        <br>border-right-style:solid;\n        <br>border-bottom-style:dotted;\n        <br>border-left-style:solid;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-side\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>上面的例子也可以设置一个单一属性：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">border-style:dotted solid;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-side2\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>border-style 属性可以有 1-4 个值：</p>\n<ul>\n    <li> <b>border-style:dotted solid double dashed; </b> \n        <ul>\n            <li>上边框是 dotted</li>\n            <li>右边框是 solid</li>\n            <li>底边框是 double</li>\n            <li>左边框是 dashed</li>\n        </ul>\n        <br>\n    </li>\n    <li> <b>border-style:dotted solid double;</b> \n        <ul>\n            <li>上边框是 dotted</li>\n            <li>左、右边框是 solid</li>\n            <li>底边框是 double</li>\n        </ul>\n        <br>\n    </li>\n    <li> <b>border-style:dotted solid;</b> \n        <ul>\n            <li>上、底边框是 dotted</li>\n            <li>左、右边框是 solid</li>\n        </ul>\n        <br>\n    </li>\n    <li> <b>border-style:dotted;</b>\n\n        <ul>\n            <li>四面边框是 dotted</li>\n        </ul>\n    </li>\n</ul>\n<p>上面的例子用了 border-style。然而，它也可以和 border-width 、 border-color 一起使用。</p>\n<hr>\n\n<h2>透明边框</h2>\n\n<p>CSS2 引入了边框颜色值 transparent，这个值用于创建有宽度的不可见边框。</p>\n<p>透明样式的定义如下：</p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\"><p>a:link, a:visited {    </p><p>border-style: solid; border-width: 5px; border-color: transparent;\n</p><p>} a:hover {border-color: gray;}</p></div></div>\n<p>利用 transparent，使用边框就像是额外的内边距一样；此外还有一个好处，就是能在你需要的时候使其可见。这种透明边框相当于内边距，因为元素的背景会延伸到边框区域（如果有可见背景的话）。 </p>\n<hr>\n <h2>边框-简写属性</h2> \n<p>上面的例子用了很多属性来设置边框。</p>\n<p>你也可以在一个属性中设置边框。</p>\n<p>你可以在\"border\"属性中设置：</p>\n<ul>\n    <li>border-width</li>\n    <li>border-style (required)</li>\n    <li>border-color</li>\n</ul>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">border:5px solid red;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top\">所有边框属性在一个声明之中</a>\n\n    <br>本例演示用简写属性来将所有四个边框属性设置于同一声明中。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-style\">设置下边框的样式</a>\n\n    <br>本例演示如何设置下边框的样式。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-width\">设置左边框的宽度</a>\n\n    <br>本例演示如何设置左边框的宽度。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-color\">设置四个边框的颜色</a>\n\n    <br>本例演示如何设置四个边框的颜色。可以设置一到四个颜色。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-color\">设置右边框的颜色</a>\n\n    <br>本例演示如何设置右边框的颜色。</p>\n<hr>\n <h2>CSS 边框属性</h2> \n<table class=\"reference\">\n    <tbody>\n        <tr>\n            <th>属性</th>\n            <th>描述</th>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border 属性\" href=\"/cssref/pr-border.html\">border</a>\n\n            </td>\n            <td>简写属性，用于把针对四个边的属性设置在一个声明。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-style 属性\" href=\"/cssref/pr-border-style.html\">border-style</a>\n\n            </td>\n            <td>用于设置元素所有边框的样式，或者单独地为各边设置边框样式。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-width 属性\" href=\"/cssref/pr-border-width.html\">border-width</a>\n\n            </td>\n            <td>简写属性，用于为元素的所有边框设置宽度，或者单独地为各边边框设置宽度。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-color 属性\" href=\"/cssref/pr-border-color.html\">border-color</a>\n\n            </td>\n            <td>简写属性，设置元素的所有边框中可见部分的颜色，或为 4 个边分别设置颜色。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-bottom 属性\" href=\"/cssref/pr-border-bottom.html\">border-bottom</a>\n\n            </td>\n            <td>简写属性，用于把下边框的所有属性设置到一个声明中。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-bottom-color 属性\" href=\"/cssref/pr-border-bottom-color.html\">border-bottom-color</a>\n\n            </td>\n            <td>设置元素的下边框的颜色。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-bottom-style 属性\" href=\"/cssref/pr-border-bottom-style.html\">border-bottom-style</a>\n\n            </td>\n            <td>设置元素的下边框的样式。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-bottom-width 属性\" href=\"/cssref/pr-border-bottom-width.html\">border-bottom-width</a>\n\n            </td>\n            <td>设置元素的下边框的宽度。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-left 属性\" href=\"/cssref/pr-border-left.html\">border-left</a>\n\n            </td>\n            <td>简写属性，用于把左边框的所有属性设置到一个声明中。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-left-color 属性\" href=\"/cssref/pr-border-left-color.html\">border-left-color</a>\n\n            </td>\n            <td>设置元素的左边框的颜色。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-left-style 属性\" href=\"/cssref/pr-border-left-style.html\">border-left-style</a>\n\n            </td>\n            <td>设置元素的左边框的样式。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-left-width 属性\" href=\"/cssref/pr-border-left-width.html\">border-left-width</a>\n\n            </td>\n            <td>设置元素的左边框的宽度。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-right 属性\" href=\"/cssref/pr-border-right.html\">border-right</a>\n\n            </td>\n            <td>简写属性，用于把右边框的所有属性设置到一个声明中。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-right-color 属性\" href=\"/cssref/pr-border-right-color.html\">border-right-color</a>\n\n            </td>\n            <td>设置元素的右边框的颜色。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-right-style 属性\" href=\"/cssref/pr-border-right-style.html\">border-right-style</a>\n\n            </td>\n            <td>设置元素的右边框的样式。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-right-width 属性\" href=\"/cssref/pr-border-right-width.html\">border-right-width</a>\n\n            </td>\n            <td>设置元素的右边框的宽度。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-top 属性\" href=\"/cssref/pr-border-top.html\">border-top</a>\n\n            </td>\n            <td>简写属性，用于把上边框的所有属性设置到一个声明中。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-top-color 属性\" href=\"/cssref/pr-border-top-color.html\">border-top-color</a>\n\n            </td>\n            <td>设置元素的上边框的颜色。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-top-style 属性\" href=\"/cssref/pr-border-top-style.html\">border-top-style</a>\n\n            </td>\n            <td>设置元素的上边框的样式。</td>\n        </tr>\n        <tr>\n            <td><a title=\"CSS border-top-width 属性\" href=\"/cssref/pr-border-top-width.html\">border-top-width</a>\n\n            </td>\n            <td>设置元素的上边框的宽度。</td>\n        </tr>\n    </tbody>\n</table><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 12,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a5d5b7311e6748a7e0c9a0ada16e4d63",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Box Model (盒子模型)",
      "chapter_level_two_url": "/css/css-boxmodel.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2></h2><p>CSS Box Model (盒子模型)</p> \n<hr>\n <h2><span style=\"font-size: 15px;\">所有 HTML 元素可以看作盒子，在 CSS 中，\"box model \"这一术语是用来设计和布局时使用。</span><br></h2>\n\n<p>CSS 盒模型本质上是一个盒子，封装周围的 HTML 元素，它包括：边距，边框，填充，和实际内容。</p>\n<p>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p>\n<p>下面的图片说明了盒子模型 (Box Model)：</p>\n<br>\n<div style=\"text-align: center;\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/box-model.gif\" alt=\"CSS box-model\" width=\"536\" height=\"289\">\n</div>\n<p>不同部分的说明：</p>\n<ul>\n    <li><strong>Margin（外边距）</strong> - 清除边框区域。Margin 没有背景颜色，它是完全透明</li>\n    <li><strong>Border（边框）</strong> - 边框周围的填充和内容。边框是受到盒子的背景颜色影响</li>\n    <li><strong>Padding（内边距）</strong> - 清除内容周围的区域。会受到框中填充的背景颜色影响</li>\n    <li><strong>Content（内容）</strong> - 盒子的内容，显示文本和图像</li>\n</ul>\n<p>为了在所有浏览器中的元素的宽度和高度设置正确的话，你需要知道的盒模型是如何工作的。</p>\n<p><b>提示：</b>在盒模型中，外边距可以是负值，而且在很多情况下都要使用负值的外边距。</p>\n<p><b>提示：</b>参考 <a href=\"https://www.w3cschool.cn/eyv2f3/cibp1r4y.html\" target=\"_blank\">CSS盒子模型的内部结构</a> 可以了解更多的信息。</p>\n<hr>\n <h2>元素的宽度和高度</h2> \n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"><strong>重要:</strong> 当您指定一个 CSS 元素的宽度和高度属性时，你只是设置内容区域的宽度和高度。要知道，完全大小的元素，你还必须添加填充，边框和边距。.</p>\n<p>下面的例子中的元素的总宽度为 300px：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>width:250px;        </p>\n        <p>padding:10px;        </p>\n        <p>border:5px solid gray;        </p>\n        <p>margin:10px;</p>\n    </div>\n</div>\n<p>让我们自己算算：\n    <br>250px (宽)\n    <br>+ 20px (左 + 右填充)\n    <br>+ 10px (左 + 右边框)\n    <br>+ 20px (左 + 右边距)\n    <br>= 300px</p>\n<p>试想一下，你只有 250 像素的空间。让我们设置总宽度为 250 像素的元素：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">width:220px;\n        <br>padding:10px;\n        <br>border:5px solid gray;\n        <br>margin:0px;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_boxmodel_width\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>最终元素的总宽度计算公式是这样的：</p>\n<p>总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距</p>\n<p>元素的总高度最终计算公式是这样的：</p>\n<p>总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距</p>\n<hr>\n <h2>浏览器的兼容性问题</h2> \n<p>一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 <code>width</code> 属性设置的，而内容周围的 <code>padding</code> 和 <code>border</code> 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 <code>width</code> 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。</p>\n<p>虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。</p>\n<p>IE8 及更早IE版本不支持 填充的宽度和边框的宽度属性设。</p>\n<p>解决 IE8 及更早版本不兼容问题可以在 HTML 页面声明 <code>&lt;!DOCTYPE html&gt;</code>即可。</p>\n<hr>\n\n<h2>相关阅读</h2>\n\n<p>CSS 拾遗系列：<a href=\"https://www.w3cschool.cn/css_series/css_series-6tza24q1.html\" target=\"_blank\">CSS盒模型科普</a>\n\n</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 11,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "9319bf46372f97cc29d952fe0fbd96e9",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Table (表格)",
      "chapter_level_two_url": "/css/css-table.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">表格</span></h2> \n<hr>\n<p class=\"intro\">使用 CSS 可以大大提高 HTML 表格的外观。</p>\n<table class=\"reference\">\n    <tbody>\n        <tr>\n            <th>2020年11月</th>\n            <th>2019年11月</th>\n            <th>程序语言</th>\n            <th>等级</th>\n            <th>更改</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>2</td>\n            <td><a href=\"https://www.w3cschool.cn/c/\" target=\"_blank\">C</a>\n\n            </td>\n            <td>16.21%</td>\n            <td>+0.17%</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>3</td>\n            <td><a href=\"https://www.w3cschool.cn/python3/\" target=\"_blank\">Python</a>\n\n            </td>\n            <td>12.12%</td>\n            <td>+2.27%</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>1</td>\n            <td><a href=\"https://www.w3cschool.cn/java/\" target=\"_blank\">Java</a>\n\n            </td>\n            <td>11.68%</td>\n            <td>-4.57%</td>\n        </tr>\n        <tr>\n            <td>4</td>\n            <td>5</td>\n            <td><a href=\"https://www.w3cschool.cn/cpp/\" target=\"_blank\">C++</a>\n\n            </td>\n            <td>7.60%</td>\n            <td>+1.99%</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>5</td>\n            <td><a href=\"https://www.w3cschool.cn/csharp/\" target=\"_blank\">C#</a>\n\n            </td>\n            <td>4.67%</td>\n            <td>+0.36%</td>\n        </tr>\n        <tr>\n            <td>6</td>\n            <td>6</td>\n            <td><a href=\"https://www.w3cschool.cn/vb_net/\" target=\"_blank\">Visual Basic</a></td>\n            <td>4.01%</td>\n            <td>-0.22%</td>\n        </tr>\n        <tr>\n            <td>7</td>\n            <td>7</td>\n            <td><a href=\"https://www.w3cschool.cn/javascript/\" target=\"_blank\">JavaScript</a>\n\n            </td>\n            <td>2.03%</td>\n            <td>+0.10%</td>\n        </tr>\n        <tr>\n            <td>8</td>\n            <td>8</td>\n            <td><a href=\"https://www.w3cschool.cn/php/\" target=\"_blank\">PHP</a>\n\n            </td>\n            <td>1.79%</td>\n            <td>0.07%</td>\n        </tr>\n        <tr>\n            <td>9</td>\n            <td>16</td>\n            <td><a href=\"https://www.w3cschool.cn/r/\" target=\"_blank\">R</a>\n\n            </td>\n            <td>1.64%</td>\n            <td>+0.66%</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>9</td>\n            <td><a href=\"https://www.w3cschool.cn/sql/\" target=\"_blank\">SQL</a>\n\n            </td>\n            <td>1.54%</td>\n            <td>+0.15%</td>\n        </tr>\n    </tbody>\n</table>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>#customers tr:nth-child(even){background-color: #f2f2f2;}   <br></p><p>#customers tr:hover {background-color: #ddd;}</p></div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_1\">尝试一下 »</a> \n</div>\n<hr>\n <h2>表格边框</h2> \n<p>指定 CSS 表格边框，使用 <code>border</code> 属性。</p>\n<p>下面的例子指定了一个表格的 <code>th</code> 和 <code>td</code> 元素的黑色边框：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">table, th, td\n        <br>{ border: 1px solid black; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>请注意，在上面的例子中的表格有双边框。这是因为表和 <code>th / td</code> 元素有独立的边界。</p>\n<p>为了显示一个表的单个边框，使用 <code>border-collapse</code>属性。</p>\n <h2>折叠边框</h2> \n<p><code>border-collapse</code> 属性设置表格的边框是否被折叠成一个单一的边框或隔开：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">table\n        <br>{ border-collapse:collapse; }\n        <br>table,th, td { border: 1px solid black; }</div>\n    <br> <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border-collapse\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>表格宽度和高度</h2> \n<p><code>width</code> 和<code> height</code> 属性定义表格的宽度和高度。</p>\n<p>下面的例子是设置 100％ 的宽度，50 像素的 th 元素的高度的表格：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">table\n        <br>{ width:100%; }\n        <br>th { height:50px; }</div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_width\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>表格文字对齐</h2> \n<p>表格中的文本对齐和垂直对齐属性。</p>\n<p>text-align 属性设置水平对齐方式，像左，右，或中心：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">td\n        <br>{ text-align:right; }</div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_align\">尝试一下 »</a> \n</div>\n<p>垂直对齐属性设置垂直对齐，比如顶部，底部或中间：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">td\n        <br>{ height:50px; vertical-align:bottom; }</div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_vertical-align\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>表格填充</h2> \n<p>如果在表的内容中控制空格之间的边框，应使用 td 和 th 元素的填充属性：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">td\n        <br>{ padding:15px; }</div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_padding\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>表格颜色</h2> \n<p>下面的例子指定边框的颜色，和 th 元素的文本和背景颜色：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">table, td, th\n        <br>{ border:1px solid green; }\n        <br>th\n        <br>{ background-color:green; color:white; }</div>\n    <br> <a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_color\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_fancy\">制作一个个性表格</a>\n\n    <br>这个例子演示了如何创建一个个性的表格。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_caption-side\">设置表格标题的位置</a>\n\n    <br>这个例子演示了如何定位表格标题。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_width\" target=\"_blank\">指定表格的宽度和高度</a>\n\n    <br>\n</p>\n<p>这个例子演示了如何指定表格的高度与宽度。</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 10,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a09450e2752da6d74ceb1c320c15b136",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 列表样式 (ul)",
      "chapter_level_two_url": "/css/css-list.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">列表</span> </h2> \n<hr>\n<p class=\"intro\">CSS 列表属性作用如下：</p>\n<ul>\n    <li>设置不同的列表项标记为有序列表</li>\n    <li>设置不同的列表项标记为无序列表</li>\n    <li>设置列表项标记为图像</li>\n</ul>\n<hr>\n <h2>列表</h2> \n<p>在 HTML 中，有两种类型的 <a href=\"https://www.w3cschool.cn/html/html-lists.html\" target=\"_blank\">HTML列表</a>：</p>\n<ul>\n    <li>无序列表 - 列表项的标记使用特殊图形（如小黑点、小方框等）</li>\n    <li>有序列表 - 列表项的标记使用数字或字母</li>\n</ul>\n<p>使用CSS，可以列出进一步的样式，并可用图像作列表项标记。</p>\n<hr>\n <h2>不同的列表项标记</h2> \n<p><code>list-style-type</code> 属性指定列表项标记的类型是：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">ul.a {list-style-type: circle;}\n        <br>ul.b {list-style-type: square;}\n        <br>\n        <br>ol.c {list-style-type: upper-roman;}\n        <br>ol.d {list-style-type: lower-alpha;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-type_ex\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>一些值是无序列表，以及有些是有序列表。</p>\n<p>下列是对 <code>list-style-type</code> 属性的常见属性值的描述：</p>\n<ul>\n    <li><code>none</code>：不使用项目符号\n        <br>\n    </li>\n    <li><code>disc</code>：实心圆\n        <br>\n    </li>\n    <li><code>circle</code>：空心圆\n        <br>\n    </li>\n    <li><code>square</code>：实心方块\n        <br>\n    </li>\n    <li><code>decimal</code>：阿拉伯数字 \n        <br>\n    </li>\n    <li><code>lower-alpha</code>：小写英文字母 \n        <br>\n    </li>\n    <li><code>upper-alpha</code>：大写英文字母 \n        <br>\n    </li>\n    <li><code>lower-roman</code>：小写罗马数字 \n        <br>\n    </li>\n    <li><code>upper-roman</code>：大写罗马数字\n        <br>\n    </li>\n</ul>\n<hr>\n <h2>作为列表项标记的图像</h2> \n<p>要指定列表项标记的图像，使用列表样式图像属性：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">ul\n        <br>{\n        <br>list-style-image: url('sqpurple.gif');\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>上面的例子在各大主流浏览器中的显示有所差异，IE 和 Opera 显示图像标记比火狐（ Firefox ），Chrome 和 Safari 更高一点点。</p>\n<p>\n    <br>\n</p>\n<blockquote><b>提示：<br><ul><li>利用 <code>list-style-position</code> 可以确定标志出现在列表项内容之外还是内容内部。</li><li>如果你想在所有的浏览器放置同样的形象标志，就应使用浏览器兼容性解决方案，方法如下。</li></ul></b>\n\n</blockquote>\n <h2>浏览器兼容性解决方案</h2> \n<p>同样在所有的浏览器，下面的例子会显示的图像标记：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">ul {\n        <br>  list-style-type: none;\n        <br>  padding: 0px;\n        <br>  margin: 0px;\n        <br>}\n        <br>ul li {\n        <br>  background-image: url(sqpurple.gif);\n        <br>  background-repeat: no-repeat;\n        <br>  background-position: 0px 5px;\n        <br>  padding-left: 14px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image_crossbrow\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>例子解释：</p>\n<ul>\n    <li>ul :\n        <ul>\n            <li>设置列表样式类型为没有列表项标记</li>\n            <li>设置填充和边距 0px（浏览器兼容性）</li>\n        </ul>\n    </li>\n    <li>ul 中所有 li :\n        <ul>\n            <li>设置图像的 URL ，并设置它只显示一次（无重复）</li>\n            <li>您需要的定位图像位置（左 0px 和上下 5px ）</li>\n            <li>用 <code>padding-left</code> 属性把文本置于列表中</li>\n        </ul>\n    </li>\n</ul>\n<hr>\n <h2>列表 -简写属性</h2> \n<p>在单个属性中可以指定所有的列表属性。这就是所谓的简写属性。</p>\n<p>为列表使用简写属性，列表样式属性设置如下：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">ul {\n        <br>  list-style: square url(\"sqpurple.gif\");\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>如果使用缩写属性值的顺序是：</p>\n<ol>\n    <li><code>list-style-type</code>\n\n    </li>\n    <li><code>list-style-position</code> (有关说明，请参见下面的CSS属性表)</li>\n    <li><code>list-style-image</code>\n\n    </li>\n\n</ol>\n<p>在简写属性时，如果上述值丢失一个，其余仍在指定的顺序，就没关系。</p>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-type_all\">所有不同的列表项标记</a>\n\n    <br>这个例子演示了所有不同的 CSS 列表项标记。</p>\n<hr>\n <h2>所有的CSS列表属性</h2> \n<table class=\"reference  \">\n    <tbody>\n        <tr>\n            <th width=\"20%\" align=\"left\">属性</th>\n            <th width=\"80%\" align=\"left\">描述</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-list-style.html\">list-style</a>\n\n            </td>\n            <td>简写属性。用于把所有用于列表的属性设置于一个声明中</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-list-style-image.html\">list-style-image</a>\n\n            </td>\n            <td>将图象设置为列表项标志。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-list-style-position.html\">list-style-position</a>\n\n            </td>\n            <td>设置列表中列表项标志的位置。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-list-style-type.html\">list-style-type</a>\n\n            </td>\n            <td>设置列表项标志的类型。</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 9,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b21abe71215626b9fbe633b8a8bce03f",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 链接 (link)",
      "chapter_level_two_url": "/css/css-link.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">链接</span> </h2> \n<hr>\n<p class=\"intro\">不同的链接可以有不同的样式。</p>\n<hr>\n <h2>链接样式</h2> \n<p>链接的样式，可以用任何 CSS 属性（如颜色，字体，背景等）。</p>\n<p>特别的链接，可以有不同的样式，这取决于他们是什么状态。</p>\n<p>这四个链接状态是：</p>\n<ul>\n    <li><code>a:link</code> - 正常，未访问过的链接</li>\n    <li><code>a:visited</code> - 用户已访问过的链接</li>\n    <li><code>a:hover</code> - 当用户鼠标放在链接上时</li>\n    <li><code>a:active</code> - 链接被点击的那一刻</li>\n</ul>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">a:link {color:#FF0000;}      /* 未访问链接*/\n        <br>a:visited {color:#00FF00;}  /* visited link */\n        <br>a:hover {color:#FF00FF;}  /* mouse over link */\n        <br>a:active {color:#0000FF;}  /* selected link */</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>当设置为若干链路状态的样式，也有一些顺序规则：</p>\n<ul>\n    <li><code>a:hover</code> 必须跟在<code> a:link</code> 和 <code>a:visited</code> 后面</li>\n    <li><code>a:active</code> 必须跟在 <code>a:hover</code> 后面</li>\n</ul>\n<p><b>提示：</b>在本站的 CSS 参考手册中，我们对 <a href=\"https://www.w3cschool.cn/cssref/sel-link.html\" target=\"_blank\">CSS:link 选择器</a> 做了详细的介绍。</p>\n<hr>\n <h2>常见的链接样式</h2> \n<p>根据上述链接的颜色变化的例子，看它是在什么状态。</p>\n<p>让我们通过一些其他常见的方式转到链接样式：</p>\n <h2>文本修饰</h2> \n<p><code>text-decoration</code> 属性主要用于删除链接中的下划线：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">a:link {text-decoration:none;}\n        <br>a:visited {text-decoration:none;}\n        <br>a:hover {text-decoration:underline;}\n        <br>a:active {text-decoration:underline;}</div>\n    <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_decoration\">尝试一下 »</a> \n</div>\n <h2>背景颜色</h2> \n<p>背景颜色属性指定链接背景色：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">a:link {background-color:#B2FF99;}\n        <br>a:visited {background-color:#FFFF85;}\n        <br>a:hover {background-color:#FF704D;}\n        <br>a:active {background-color:#FF704D;}</div>\n    <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_background\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>More Examples</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\">添加不同样式的超链接</a>\n\n    <br>这个例子演示了如何为超链接添加其他样式。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_advanced\">高级 - 创建链接框</a>\n\n    <br>这个例子演示了一个更高级的例子，我们结合若干CSS属性显示为方框。</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 8,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "99aab893491294d32e73464fce5c09ed",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Fonts (字体)",
      "chapter_level_two_url": "/css/css-font.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">字体</span> </h2>\n\n<hr>\n<p class=\"intro\">CSS字体属性定义字体，加粗，大小，文字样式。</p>\n<hr>\n\n<h2>serif 和 sans-serif 字体之间的区别</h2>\n\n<p>\n    <img alt=\"Serif vs. Sans-serif\" src=\"https://7n.w3cschool.cn/statics/images/course/serif.gif\" width=\"398\" height=\"142\">\n</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\">在计算机屏幕上，sans-serif 字体被认为是比 serif 字体容易阅读</p>\n<hr>\n\n<h2>CSS字型</h2>\n\n<p>在CSS中，有两种类型的字体系列名称：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p><strong>通用字体系列</strong> - 拥有相似外观的字体系统组合（如 \"Serif\" 或 \"Monospace\"）</p>\n    </li>\n    <li>\n        <p><strong>特定字体系列</strong> - 一个特定的字体系列（如 \"Times\" 或 \"Courier\"）</p>\n    </li>\n</ul>\n<table class=\"reference\">\n    <tbody>\n        <tr class=\"firstRow\">\n            <th width=\"22%\" align=\"left\">Generic family</th>\n            <th width=\"31%\" align=\"left\">字体系列</th>\n            <th width=\"47%\" align=\"left\">说明</th>\n        </tr>\n        <tr>\n            <td>Serif</td>\n            <td><span style=\"font-family:Times New Roman;font-size:150%;\">Times New Roman</span>\n\n                <br> <span style=\"font-family:Georgia;font-size:150%;\">Georgia</span>\n\n            </td>\n            <td>Serif字体中字符在行的末端拥有额外的装饰</td>\n        </tr>\n        <tr>\n            <td>Sans-serif</td>\n            <td><span style=\"font-family:Arial;font-size:150%;\">Arial</span>\n\n                <br> <span style=\"font-family:Verdana;font-size:150%;\">Verdana</span>\n\n            </td>\n            <td>\"Sans\"是指无 - 这些字体在末端没有额外的装饰</td>\n        </tr>\n        <tr>\n            <td>Monospace</td>\n            <td><span style=\"font-family:Courier New;font-size:150%;\">Courier New</span>\n\n                <br> <span style=\"font-family:Lucida Console;font-size:150%;\">Lucida Console</span>\n\n            </td>\n            <td>所有的等宽字符具有相同的宽度</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n    <img src=\"https://www.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> 除了各种特定的字体系列外，CSS 定义了 5 种通用字体系列：</p>\n<ul>\n    <li>Serif 字体</li>\n    <li>Sans-serif 字体</li>\n    <li>Monospace 字体</li>\n    <li>Cursive 字体</li>\n    <li>Fantasy 字体</li>\n</ul>\n<hr>\n\n<h2>字体系列</h2>\n\n<p>font-family 属性设置文本的字体系列。</p>\n<p>font-family 属性应该设置几个字体名称作为一种\"后备\"机制，如果浏览器不支持第一种字体，他将尝试下一种字体。</p>\n<p><strong>注意</strong>: 如果字体系列的名称超过一个字，它必须用引号，如 Font Family：\"宋体\"。</p>\n<p>多个字体系列是用一个逗号分隔指明：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">p{font-family:\"Times New Roman\", Times, serif;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-family\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>对于较常用的字体组合，看看我们的 <a href=\"//www.w3cschool.cn/cssref/css-websafe-fonts.html\" target=\"_self\" textvalue=\"Web安全字体组合\">Web安全字体组合</a>。</p>\n<hr>\n\n<h2>字体样式</h2>\n\n<p>主要是用于指定斜体文字的字体样式属性。</p>\n<p>这个属性有三个值：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>正常 - 正常显示文本</p>\n    </li>\n    <li>\n        <p>斜体 - 以斜体字显示的文字</p>\n    </li>\n    <li>\n        <p>倾斜的文字 - 文字向一边倾斜（和斜体非常类似，但不太支持）</p>\n    </li>\n</ul>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">p.normal {font-style:normal;}\n        <br>p.italic {font-style:italic;}\n        <br>p.oblique {font-style:oblique;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-style\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n\n<h3>italic 和 oblique 的区别</h3>\n\n<p></p>\n<ul>\n    <li>斜体（italic）是一种简单的字体风格，对每个字母的结构有一些小改动，来反映变化的外观。\n        <br>\n    </li>\n    <li>倾斜（oblique）文本是正常竖直文本的一个倾斜版本。\n        <br>\n    </li>\n</ul>\n<p></p>\n<p>通常情况下，italic 和 oblique 文本在 web 浏览器中看上去完全一样。</p>\n<hr>\n\n<h2>字体大小</h2>\n\n<p>font-size 属性设置文本的大小。</p>\n<p>能否管理文字的大小，在网页设计中是非常重要的。但是，你不能通过调整字体大小使段落看上去像标题，或者使标题看上去像段落。</p>\n<p>请务必使用正确的HTML标签，就&lt;h1&gt; - &lt;h6&gt;表示标题和&lt;p&gt;表示段落：</p>\n<p>字体大小的值可以是绝对或相对的大小。</p>\n<p>绝对大小：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>设置一个指定大小的文本</p>\n    </li>\n    <li>\n        <p>不允许用户在所有浏览器中改变文本大小</p>\n    </li>\n    <li>\n        <p>确定了输出的物理尺寸时绝对大小很有用</p>\n    </li>\n</ul>\n<p>相对大小：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>相对于周围的元素来设置大小</p>\n    </li>\n    <li>\n        <p>允许用户在浏览器中改变文字大小</p>\n    </li>\n</ul>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\">如果你不指定一个字体的大小，默认大小和普通文本段落一样，是16像素（16px=1em）。</p>\n<hr>\n\n<h2>设置字体大小像素</h2>\n\n<p>设置文字的大小与像素，让您完全控制文字大小：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">h1 {font-size:40px;}\n        <br>h2 {font-size:30px;}\n        <br>p {font-size:14px;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_px\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>上面的例子可以在 Internet Explorer 9, Firefox, Chrome, Opera, 和 Safari 调整文本大小。</p>\n<p><strong>注意：</strong>以上实例不能在IE9以前的版本运行。</p>\n<p>虽然可以通过浏览器的缩放工具调整文本大小，但是，这种调整是整个页面，而不仅仅是文本</p>\n<hr>\n\n<h2>用em来设置字体大小</h2>\n\n<p>为了避免 Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替像素。</p>\n<p>em 的尺寸单位由W3C建议。</p>\n<p>1em 和当前字体大小相等。在浏览器中默认的文字大小是16px。</p>\n<p>因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em</p>\n<p>（注：16 等于父元素的默认字体大小，假设父元素的 font-size 为 30px，那么公式需改为：<i>pixels</i>/30=<i>em</i>）\n    <br>\n</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">h1 {font-size:2.5em;} /* 40px/16=2.5em */\n        <br>h2 {font-size:1.875em;} /* 30px/16=1.875em */\n        <br>p {font-size:0.875em;} /* 14px/16=0.875em */</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_em\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>在上面的例子，em 的文字大小是与前面的例子中像素一样。不过，如果使用 em 单位，则可以在所有浏览器中调整文本大小。</p>\n<p>不幸的是，仍然是 IE 浏览器的问题。调整文本的大小时，会比正常的尺寸更大或更小。</p>\n<hr>\n\n<h2>使用百分比和EM组合</h2>\n\n<p>在所有浏览器的解决方案中，设置 &lt;body&gt;元素的默认字体大小的是百分比：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">body {font-size:100%;}\n        <br>h1 {font-size:2.5em;}\n        <br>h2 {font-size:1.875em;}\n        <br>p {font-size:0.875em;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_percent_em\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>我们的代码非常有效。在所有浏览器中，可以显示相同的文本大小，并允许所有浏览器缩放文本的大小。</p>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2>\n\n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-weight\">设置字体加粗</a>\n\n    <br>这个例子演示了如何设置字体的加粗。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-variant\">可以设置字体的转变</a>\n\n    <br>这个例子演示了如何设置字体的转变。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_font\">在一个声明中的所有字体属性</a>\n\n    <br>本例演示如何使用简写属性将字体属性设置在一个声明之内。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-style\" target=\"_blank\">设置字体风格</a>\n</p>\n<p>本例演示如何设置字体风格。</p>\n<hr>\n\n<h2>在线生成字体CSS样式工具</h2><p>\n   使用<a href=\"https://www.w3cschool.cn/tools/index?name=csscreate\" style=\"background-color: rgb(255, 255, 255);\">在线生成字体CSS样式工具</a>可以快速生成 CSS 字体样式</p><p><img src=\"//atts.w3cschool.cn/attachments/image/20180801/1533115646238771.png\" alt=\"\" class=\"\"><br> \n</p><hr>\n\n<h2>所有CSS字体属性</h2>\n\n<table class=\"reference notranslate \">\n    <tbody>\n        <tr class=\"firstRow\">\n            <th width=\"25%\" align=\"left\">Property</th>\n            <th width=\"75%\" align=\"left\">描述</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-font.html\">font</a>\n\n            </td>\n            <td>在一个声明中设置所有的字体属性</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-font-family.html\">font-family</a>\n\n            </td>\n            <td>指定文本的字体系列</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-font-size.html\">font-size</a>\n\n            </td>\n            <td>指定文本的字体大小</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-font-style.html\">font-style</a>\n\n            </td>\n            <td>指定文本的字体样式</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-font-variant.html\">font-variant</a>\n\n            </td>\n            <td>以小型大写字体或者正常字体显示文本。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-font-weight.html\">font-weight</a>\n\n            </td>\n            <td>指定字体的粗细。</td>\n        </tr>\n    </tbody>\n</table><p></p><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 7,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c0195476781c73095deb7c2c5226dcaa",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Text(文本)",
      "chapter_level_two_url": "/css/css-text.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Text </span>文本格式</h2>\n\n<p>通过 CSS 的 Text 属性，你可以改变页面中文本的颜色、字符间距、对齐文本、装饰文本、对文本进行缩进等等，你可以观察下述的一段简单的应用了 CSS 文本格式的段落。\n    <br>\n</p>\n<div style=\"width:96.5%;border:1px solid gray;padding:8px\">\n     <h1 style=\"text-align:center;color:#A7C942\">文本格式</h1>\n\n    <p>       此文本使用一些文本格式属性设置样式。标题使用文本对齐、文本转换和颜色属性。段落缩进、对齐，并指定字符之间的间距。下划线将从“尝试一下”链接中删除。</p>\n</div>\n\n<h2>Text Color</h2>\n\n<p>颜色属性被用来设置文字的颜色。</p>\n<p>颜色是通过CSS最经常的指定：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>十六进制值 - 如\"＃FF0000\"</p>\n    </li>\n    <li>\n        <p>一个RGB值 - \"RGB（255,0,0）\"</p>\n    </li>\n    <li>\n        <p>颜色的名称 - 如\"红\"</p>\n    </li>\n</ul>\n<p>参阅 <a href=\"//www.w3cschool.cn/cssref/css-colornames.html\" target=\"_self\" textvalue=\"CSS 颜色值\">CSS 颜色值</a> 查看完整的颜色值。</p>\n<p>一个网页的背景颜色是指在主体内的选择：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">body {color:blue;}\n        <br>h1 {color:#00ff00;}\n        <br>h2 {color:rgb(255,0,0);}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_color\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> 对于 W3C 标准的 CSS：如果你定义了颜色属性，你还必须定义背景色属性。</p>\n<hr>\n\n<h2>文本的对齐方式</h2>\n\n<p>文本排列属性是用来设置文本的水平对齐方式。</p>\n<p>文本可居中或对齐到左或右,两端对齐.</p>\n<p>当 <code>text-align </code>设置为<code>justify</code>，每一行被展开为宽度相等，左，右外边距是对齐（如杂志和报纸）。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">h1 {text-align:center;}\n        <br>p.date {text-align:right;}\n        <br>p.main {text-align:justify;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-align_all\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b>\n    提示：</b>如果想把一个行内元素的第一行“缩进”，可以用左内边距或外边距创造这种效果。\n    <br>\n</p>\n<hr>\n\n<h2>文本修饰</h2>\n\n<p><code>text-decoration</code>属性用来设置或删除文本的装饰。</p>\n<p>从设计的角度看 <code>text-decoration</code> 属性主要是用来删除链接的下划线：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">a {text-decoration:none;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration_link\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>也可以这样装饰文字：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">h1 {text-decoration:overline;}\n        <br>h2 {text-decoration:line-through;}\n        <br>h3 {text-decoration:underline;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\">我们不建议强调指出不是链接的文本，因为这常常混淆用户。</p>\n<hr>\n\n<h2>文本转换</h2>\n\n<p>文本转换属性是用来指定在一个文本中的大写和小写字母。</p>\n<p>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">p.uppercase {text-transform:uppercase;}\n        <br>p.lowercase {text-transform:lowercase;}\n        <br>p.capitalize {text-transform:capitalize;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-transform\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n\n<h2>文本缩进</h2>\n\n<p>文本缩进属性是用来指定文本的第一行的缩进。</p>\n<p>CSS 提供了 <code>text-indent</code> 属性，该属性可以方便地实现文本缩进。</p>\n<p>通过使用 <code>text-indent</code> 属性，所有元素的第一行都可以缩进一个给定的长度。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <div class=\"example_code notranslate\">p {text-indent:50px;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-indent\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n\n<h2>文本间隔</h2>\n\n<p><code>word-spacing</code> 属性可以改变字（单词）之间的标准间隔。其默认值 <code>normal </code>与设置值为 0 是一样的。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2>\n\n    <p>指定段字之间的空间，应该是30像素：</p>\n    <div class=\"example_code notranslate\">p\n        <br>{\n        <br>word-spacing:30px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text_word-spacing\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2>\n\n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_letter-spacing\">指定字符之间的空间</a>\n\n    <br>这个例子演示了如何增加或减少字符之间的空间。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line-height\">指定行与行之间的空间</a>\n\n    <br>这个例子演示了如何指定在一个段落中行之间的空间</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-direction\">设置元素的文本方向</a>\n\n    <br>这个例子演示了如何改变元素的文本方向。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-word-spacing\"> 增加单词之间的空白空间</a>\n\n    <br>这个例子演示了如何增加一个段落中的单词之间的空白空间。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-white-space\">在元素内禁用文字环绕</a>\n\n    <br>这个例子演示了如何禁用一个元素内的文字环绕。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_vertical-align\">垂直对齐图像</a>\n\n    <br>这个例子演示了如何设置文本的垂直对齐图像。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-shadow\">添加文本阴影</a>\n\n    <br>这个例子演示了如何设置文本阴影。</p>\n<hr>\n\n<h2>所有CSS文本属性。</h2>\n\n<table class=\"reference\">\n    <tbody>\n        <tr class=\"firstRow\">\n            <th width=\"20%\" align=\"left\">属性</th>\n            <th width=\"80%\" align=\"left\">描述</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-color.html\">color</a>\n\n            </td>\n            <td>设置文本颜色</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-direction.html\">direction</a>\n\n            </td>\n            <td>设置文本方向。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-letter-spacing.html\">letter-spacing</a>\n\n            </td>\n            <td>设置字符间距</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-dim-line-height.html\">line-height</a>\n\n            </td>\n            <td>设置行高</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-text-align.html\">text-align</a>\n\n            </td>\n            <td>对齐元素中的文本</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-text-decoration.html\">text-decoration</a>\n\n            </td>\n            <td>向文本添加修饰</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-text-indent.html\">text-indent</a>\n\n            </td>\n            <td>缩进元素中文本的首行</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/css3-pr-text-shadow.html\">text-shadow</a>\n\n            </td>\n            <td>设置文本阴影</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-text-transform.html\">text-transform</a>\n\n            </td>\n            <td>控制元素中的字母</td>\n        </tr>\n        <tr>\n            <td><a href=\"//www.w3cschool.cn/cssref/pr-text-unicode-bidi.html\" target=\"_blank\">unicode-bidi</a>\n\n            </td>\n            <td><span>设置或返回文本是否被重写 </span>\n\n            </td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-vertical-align.html\">vertical-align</a>\n\n            </td>\n            <td>设置元素的垂直对齐</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-white-space.html\">white-space</a>\n\n            </td>\n            <td>设置元素中空白的处理方式</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-text-word-spacing.html\">word-spacing</a>\n\n            </td>\n            <td>设置字间距</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 6,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "4bfa90cd682e36ea8c3099f77cb10037",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Backgrounds (背景)",
      "chapter_level_two_url": "/css/css-background.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">背景</span> </h2> \n<br>\n<div>\n    <p style=\"margin-right:150px\">CSS 背景属性用于定义 HTML 元素的背景。</p>\n    <p>CSS 属性定义背景效果：</p>\n    <ul>\n        <li><code>background-color</code>\n\n        </li>\n        <li><code>background-image</code>\n\n        </li>\n        <li><code>background-repeat</code>\n\n        </li>\n        <li><code>background-attachment</code>\n\n        </li>\n        <li><code>background-position</code>\n\n        </li>\n    </ul>\n</div>\n <h2>背景颜色</h2> \n<p><code>background-color</code> 属性定义了元素的背景颜色。</p>\n<p>页面的背景颜色使用在<code> body</code> 的选择器中:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body {background-color:#b0c4de;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_body\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>CSS 中，颜色值通常以以下方式定义:</p>\n<ul>\n    <li>十六进制 - 如：\"#ff0000\"</li>\n    <li>RGB - 如：\"rgb(255,0,0)\"</li>\n    <li>颜色名称 - 如：\"red\"</li>\n</ul>\n<p>以下实例中, <code>h1</code>, <code>p</code>, 和 <code>div</code>元素拥有不同的背景颜色:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h1 {background-color:#6495ed;}\n        <br>p {background-color:#e0ffff;}\n        <br>div {background-color:#b0c4de;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_elements\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b>提示：</b>你可以为所有元素设置背景色，包括<code> body</code> 一直到<code> em</code> 和 <code>a</code> 等行内元素。</p>\n<p><b>提示：</b><code>background-color</code> 不能继承，其默认值是<code> transparent</code>。如果一个元素没有指定背景色，那么背景就是透明的，这样其父元素的背景才可见。</p>\n<hr>\n <h2>背景图像</h2> \n<p><code>background-image</code> 属性描述了元素的背景图像.</p>\n<p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体。</p>\n<p>页面背景图片设置实例:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body {background-image:url('paper.gif');}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>下面是一个例子是一个糟糕的文字和背景图像组合。文本可读性差:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body {background-image:url('bgdesert.jpg');}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_bad\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>背景图像 - 水平或垂直平铺</h2> \n<p>如果需要在 HTML 页面上对背景图像进行平铺，可以使用 <a href=\"https://www.w3cschool.cn/cssref/pr-background-repeat.html\" target=\"_blank\"><code>background-repeat</code></a> 属性。\n    <br>\n</p>\n<p>默认情况下 <code>background-image</code> 属性会在页面的水平或者垂直方向平铺。</p>\n<p>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示: </p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body\n        <br>{background-image:url('gradient2.png');\n        }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_gradient1\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>如果图像只在水平方向平铺<code> (repeat-x) </code>, 页面背景会更好些:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body\n        <br>{background-image:url('gradient2.png');\n        <br>background-repeat:repeat-x;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_gradient2\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>背景图像- 设置定位与不平铺</h2> \n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> 让背景图像不影响文本的排版</p>\n<p>如果你不想让图像平铺，你可以使用 <code>background-repeat</code> 属性:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body\n        <br>{background-image:url('img_tree.png');\n        <br>background-repeat:no-repeat;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_norepeat\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。</p>\n<p>可以利用 <code>background-position</code> 属性改变图像在背景中的位置:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body\n        <br>{background-image:url('img_tree.png');\n        <br>background-repeat:no-repeat;\n        <br>background-position:right top;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_position\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b>提示：</b>为 <code>background-position</code> 属性提供值有很多方法。首先，可以使用一些关键字：<code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code> 和 <code>center</code>；其次，可以使用长度值，如 100px 或 5cm；最后也可以使用百分数值。不同类型的值对于背景图像的放置稍有差异。</p>\n<div>\n     <h3>关键字</h3>\n\n    <p>图像放置关键字最容易理解的作用就像其名字的意义。例如，<code>top</code>  <code>left</code> 使图像放置在元素内边距区的左上角。</p>\n    <p>只要保证不超过两个关键字：一个对应水平方向，另一个对应垂直方向，那么你可以设置位置关键字以任何顺序出现。</p>\n    <p>如果只有一个关键字，则会默认另一个关键字为 <code>center</code>。</p>\n    <p>所以，如果希望每个段落的中部上方出现一个图像，只需声明如下：</p>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>p        </p>\n            <p>{background-image:url('img_tree.png');        </p>\n            <p>background-repeat:no-repeat;            </p>\n            <p>background-position:top;}</p>\n        </div>\n    </div>\n</div>\n<div>\n    <p>下面是等价的位置关键字：</p>\n    <table class=\"reference notranslate\">\n        <tbody>\n            <tr>\n                <th style=\"text-align: left;\">单一关键字</th>\n                <th style=\"text-align: left;\">等价的关键字</th>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">center</td>\n                <td style=\"text-align: left;\">center center</td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">top</td>\n                <td style=\"text-align: left;\">top center 或 center top</td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">bottom</td>\n                <td style=\"text-align: left;\">bottom center 或 center bottom</td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">right</td>\n                <td style=\"text-align: left;\">right center 或 center right</td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">left</td>\n                <td style=\"text-align: left;\">left center 或 center left</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<h3>百分数值</h3>\n\n<p>百分数值的表现方式更为复杂。假设你希望用百分数值将图像在其元素中居中，你可以按照下面的代码进行设置：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>body</p>\n        <p>{background-image:url('img_tree.png');  </p>\n        <p>background-repeat:no-repeat;    </p>\n        <p>background-position:50% 50%;}</p>\n    </div>\n</div>\n<p>这会导致图像适当放置，其中心与其元素的中心对齐。</p>\n<p>因此，如果你想把一个图像放在水平方向 2/3、垂直方向 1/3 处，可以这样声明：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>body      </p>\n        <p>{background-image:url('img_tree.png');   </p>\n        <p>background-repeat:no-repeat;   </p>\n        <p>background-position:66% 33%;}</p>\n    </div>\n</div>\n\n<h3>长度值</h3>\n\n<p>长度值解释的是元素内边距区左上角的偏移，偏移点是图像的左上角。</p>\n<p>比如，如果设置值为 50px 100px，图像的左上角将在元素内边距区左上角向右 50 像素、向下 100 像素的位置上：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>body</p>\n        <p>{background-image:url('img_tree.png');</p>\n        <p>background-repeat:no-repeat;</p>\n        <p>background-position:50px 100px;}</p>\n    </div>\n</div>\n<p>注意，这一点与百分数值不同，因为偏移只是从一个左上角到另一个左上角。也就是说，图像的左上角与 <code>background-position</code> 声明中的指定的点对齐。</p>\n<hr>\n <h2>背景- 简写属性</h2> \n<p>在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。</p>\n<p>为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中.</p>\n<p>背景颜色的简写属性为 \"background\":</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body {background:#ffffff url('img_tree.png') no-repeat right top;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>当使用简写属性时，属性值的顺序为：:</p>\n<ul>\n    <li><code>background-color</code></li>\n    <li><code>background-image</code></li>\n    <li><code>background-repeat</code></li>\n    <li><code>background-attachment</code></li>\n    <li><code>background-position</code></li>\n</ul>\n<p>以上属性无需全部使用，你可以按照页面的实际需要使用.</p>\n<p>这个实例使用了先前介绍的 CSS，你可以查看相应实例: <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand2\"> CSS 实例</a>\n\n</p>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" width=\"40\" height=\"46px\">\n     <h2>更多实例</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-attachment\">如何设置固定的背景图像</a>\n\n    <br>本例演示如何设置固定的背景图像。图像不会随着页面的其他部分滚动。</p>\n<hr>\n <h2>CSS 背景属性</h2> \n<table class=\"reference notranslate\">\n    <tbody>\n        <tr>\n            <th width=\"30%\" align=\"left\">Property</th>\n            <th width=\"70%\" align=\"left\">描述</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/css3-pr-background.html\">background</a>\n\n            </td>\n            <td>简写属性，作用是将背景属性设置在一个声明中。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-background-attachment.html\">background-attachment</a>\n\n            </td>\n            <td>背景图像是否固定或者随着页面的其余部分滚动。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-background-color.html\">background-color</a>\n\n            </td>\n            <td>设置元素的背景颜色。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-background-image.html\">background-image</a>\n\n            </td>\n            <td>把图像设置为背景。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-background-position.html\">background-position</a>\n\n            </td>\n            <td>设置背景图像的起始位置。</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-background-repeat.html\">background-repeat</a>\n\n            </td>\n            <td>设置背景图像是否及如何重复。</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "08409e8e5e561c9e43908b5c93226177",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 创建",
      "chapter_level_two_url": "/css/css-howto.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><div class=\"content-intro view-box \">\n     <h2>CSS <span class=\"color_h1\">创建</span></h2>\n\n    <hr>\n    <p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 <a href=\"https://www.w3cschool.cn/html/html-intro.html\" target=\"_blank\">HTML</a> 文档。</p>\n    <hr>\n     <h2>如何插入样式表</h2>\n\n    <p>插入样式表的方法有三种:</p>\n    <ul>\n        <li>外部样式表</li>\n        <li>内部样式表</li>\n        <li>内联样式</li>\n    </ul>\n    <hr>\n     <h2>外部样式表</h2>\n\n    <p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 标签链接到样式表。 标签在（文档的）头部</p><code class=\"css\">&lt;head&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"&gt;\n&lt;/head&gt;</code>\n\n    <p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p>\n    <p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .CSS 扩展名进行保存。下面是一个样式表文件的例子：</p>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>hr {color:sienna;}            </p>\n            <p>p {margin-left:20px;}            </p>\n            <p>body {background-image:url(/images/back40.gif);}</p>\n        </div>\n    </div>\n    <p>\n        <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> 不要在属性值与单位之间留有空格。假如你使用 \"margin-left: 20 px\" 而不是 \"margin-left: 20px\" ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p>\n    <hr>\n     <h2>内部样式表</h2>\n\n    <p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 <code>&lt;style&gt; </code> 标签在文档头部定义内部样式表，就像这样:</p>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>&lt;head&gt;</p>\n            <p>&lt;style&gt;</p>\n            <p>hr {color:sienna;}</p>\n            <p>p {margin-left:20px;}</p>\n            <p>body {background-image:url(\"images/back40.gif\");}</p>\n            <p>&lt;/style&gt;</p>\n            <p>&lt;/head&gt;</p>\n        </div>\n    </div>\n    <hr>\n     <h2>内联样式</h2>\n\n    <p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p>\n    <p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">&lt;p style=\"color:sienna;margin-left:20px\"&gt;这是一个段落。&lt;/p&gt;</div>\n        <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_howto_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n        <br>\n    </div>\n</div>\n<hr>\n <h2>多重样式</h2>\n\n<p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。</p>\n<p>例如，外部样式表拥有针对 H3 选择器的三个属性：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>h3       </p>\n        <p>{        </p>\n        <p>color:red;        </p>\n        <p>text-align:left;     </p>\n        <p>font-size:8pt;    </p>\n        <p>}</p>\n    </div>\n</div>\n<p>而内部样式表拥有针对 H3 选择器的两个属性：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>h3       </p>\n        <p>{        </p>\n        <p>text-align:right;        </p>\n        <p>font-size:20pt;     </p>\n        <p>}</p>\n    </div>\n</div>\n<p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 H3 得到的样式是：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>color:red; text-align:right;        </p>\n        <p>font-size:20pt;</p>\n    </div>\n</div>\n<p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p>\n<hr>\n <h2>多重样式将层叠为一个</h2>\n\n<p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>\n <h3>层叠次序</h3>\n\n<p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p>\n<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>\n<ol>\n    <li>浏览器缺省设置</li>\n    <li>外部样式表</li>\n    <li>内部样式表（位于 head 标签内部）</li>\n    <li>内联样式（在 HTML 元素内部）</li>\n</ol>\n<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> <strong>提示:</strong>如果你使用了外部文件的样式在内部样式中也定义了该样式，则内部样式表会取代外部文件的样式。</p>\n\n<h2>多重样式优先级深入理解</h2>\n\n<p>优先级用于浏览器是通过判断哪些属性值与元素最相关以决定并应用到该元素上的。</p>\n<p>优先级仅由选择器组成的匹配规则决定的。</p>\n<p>优先级就是分配给指定的CSS声明的一个权重，它由匹配的选择器中的每一种选择器类型的数值决定。</p>\n\n<h3>多重样式优先级顺序</h3>\n\n<p>下列是一份优先级逐级增加的选择器列表，其中数字 7 拥有最高的优先权：</p>\n<ol>\n    <li>通用选择器（*）</li>\n    <li>元素(类型)选择器</li>\n    <li>类选择器</li>\n    <li>属性选择器</li>\n    <li>伪类</li>\n    <li>ID 选择器</li>\n    <li>内联样式</li>\n</ol>\n\n<h3>!important 规则例外</h3>\n\n<p>当 !important 规则被应用在一个样式声明中时，该样式声明会覆盖 CSS 中任何其他的声明，无论它处在声明列表中的哪里。尽管如此，!important 规则还是与优先级毫无关系。使用 !important 不是一个好习惯，因为它改变了你样式表本来的级联规则，从而使其难以调试。</p>\n<p>一些经验法则：</p>\n<ul>\n    <li>Always 要优化考虑使用样式规则的优先级来解决问题而不是 !important</li>\n    <li>Only 只在需要覆盖全站或外部 css（例如引用的 ExtJs 或者 YUI ）的特定页面中使用 !important</li>\n    <li>Never 永远不要在全站范围的 CSS 上使用 !important</li>\n    <li>Never 永远不要在你的插件中使用 !important</li>\n</ul>\n\n<h3>权重计算:</h3>\n\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20171218/1513584051697589.png\" alt=\"201712181559548677\">\n</p>\n<p>以下是对于上图的解释：</p>\n<ul>\n    <li>内联样式表的权值最高 1000</li>\n    <li>ID 选择器的权值为 100</li>\n    <li>Class 类选择器的权值为 10</li>\n    <li>HTML 标签选择器的权值为 1</li>\n</ul>\n<p>利用选择器的权值进行计算比较，em 显示蓝色，我们提供了详细的代码参考：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;html&gt;  </p>\n        <p>&lt;head&gt;   </p>\n        <p>&lt;style type=\"text/css\"&gt;   </p>\n        <p>#redP p {   </p>\n        <p>/* 权值 = 100+1=101 */    </p>\n        <p>color:#F00;  /* 红色 */   </p>\n        <p>}    </p>\n        <p>#redP .red em {    </p>\n        <p>/* 权值 = 100+10+1=111 */    </p>\n        <p>color:#00F; /* 蓝色 */   </p>\n        <p>}   </p>\n        <p>#redP p span em {   </p>\n        <p>/* 权值 = 100+1+1+1=103 */</p>\n        <p>color:#FF0;/*黄色*/   </p>\n        <p>}    </p>\n        <p>&lt;/style&gt;    </p>\n        <p>&lt;/head&gt;   </p>\n        <p>&lt;body&gt;  </p>\n        <p>&lt;div id=\"redP\"&gt;</p>\n        <p>&lt;p class=\"red\"&gt;red    </p>\n        <p>&lt;span&gt;&lt;em&gt;em red&lt;/em&gt;&lt;/span&gt;   </p>\n        <p>&lt;/p&gt;  </p>\n        <p>&lt;p&gt;red&lt;/p&gt;</p>\n        <p>&lt;/div&gt;</p>\n        <p>&lt;/body&gt;    </p>\n        <p>&lt;/html&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_howto_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br></div>\n\n<h3>CSS 优先级法则：</h3>\n\n<ul>\n    <li> A 选择器都有一个权值，权值越大越优先；</li>\n    <li> B 当权值相等时，后出现的样式表设置要优于先出现的样式表设置；</li>\n    <li> C 创作者的规则高于浏览者：即网页编写者设置的 CSS 样式的优先权高于浏览器所设置的样式；</li>\n    <li> D 继承的 CSS 样式不如后来指定的 CSS 样式；</li>\n    <li> E 在同一组属性设置中标有 \"!important\" 规则的优先级最大；</li>\n</ul>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 10,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "ed7b043048a8d4947144cc8623d668ed",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "文字阴影（凹凸）css实现",
      "chapter_level_two_url": "/article/9130415.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 9,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "2ec77042844c8c10799025020209252b",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "W3Cschool 热门编程语言排行榜 2020年 10月 TOP10",
      "chapter_level_two_url": "/article/44760098.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 8,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "02ff1b81cd6c96500cf678d390c6a920",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "WEB 前端开发工程师是什么？",
      "chapter_level_two_url": "/article/97846991.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 7,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a2530779bc68195d9af794a306f4e433",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "HTML编辑器有哪些，HTML编辑器推荐",
      "chapter_level_two_url": "/article/5a8aca22a0c87d.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 6,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "79af3bf5e73cafa41cc28a9b966a84bf",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "初学者必看的web前端开发学习路线,干货满满！",
      "chapter_level_two_url": "/article/49146914.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c93437e8faf4e8eb20a92caa7c9bf7cf",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "零基础自学前端到达到什么水平才能找工作？",
      "chapter_level_two_url": "/article/51125035.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "3498e1ada6749a1b62f279ee1a965d3d",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "Web 前端开发的就业前景好吗？适合的学习人群有哪些？",
      "chapter_level_two_url": "/article/65882301.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "2daf7fc885ddefd45799e18d43c0e152",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "2021年快速成为前端工程师，各个阶段必须掌握的基本技能汇总",
      "chapter_level_two_url": "/article/6537430.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "0fc9552e695bd1ffcbb100274095f531",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "2020年10月编程语言排行榜：Python 即将超越 Java",
      "chapter_level_two_url": "/article/cf0fe6dbee7042.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 8,
      "chapter_level_one_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关文章",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "02ca7f24f53e68c48f831bf9e6ecd5ab",
      "chapter_level_two_parent_id": "9d36daea6c984d4939c4419a1f6bcefa",
      "chapter_level_two_name": "W3Cschool前端开发入门学习路线2021",
      "chapter_level_two_url": "/article/63914971.html",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 7,
      "chapter_level_one_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关课程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "177a64393aab4fd7868913168db55af0",
      "chapter_level_two_parent_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_two_name": "HTML5+CSS3零基础快速入门",
      "chapter_level_two_url": "/minicourse/play/my_qianduan?fcode=tutorial-css",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 7,
      "chapter_level_one_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关课程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "290f9723d32644c03a96784f565d4494",
      "chapter_level_two_parent_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_two_name": "前端精品课：HTML+CSS入门",
      "chapter_level_two_url": "/minicourse/play/qianduan_rygh?fcode=tutorial-css",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 7,
      "chapter_level_one_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关课程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "56af25c6072dc9dfb4334d9c663f820c",
      "chapter_level_two_parent_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_two_name": "小白学前端：jQuery新手入门",
      "chapter_level_two_url": "/minicourse/play/jquery_txy?fcode=tutorial-css",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 7,
      "chapter_level_one_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关课程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "02ee8a034d796361a312b062c8d10915",
      "chapter_level_two_parent_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_two_name": "CSS3入门与实战",
      "chapter_level_two_url": "/minicourse/play/css_job_my?fcode=tutorial-css",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 7,
      "chapter_level_one_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关课程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "6ca20aa1950312c4ca43802c9fd6d74e",
      "chapter_level_two_parent_id": "f9c3cdf0269ab285b5d83b86cecc8373",
      "chapter_level_two_name": "CSS 入门课程",
      "chapter_level_two_url": "/minicourse/play/csscourse?fcode=tutorial-css",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 6,
      "chapter_level_one_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "18f5aac0bb058a95e488db28ee13d507",
      "chapter_level_two_parent_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_two_name": "喧喧开发者手册",
      "chapter_level_two_url": "/xuan_dev/",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 6,
      "chapter_level_one_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a3ee1e6530153dce0798a6f7d2d81ae6",
      "chapter_level_two_parent_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_two_name": "Google地图教程",
      "chapter_level_two_url": "/googleditu/",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 6,
      "chapter_level_one_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "9d20d69f1cad92daa9c3b3663a885a4e",
      "chapter_level_two_parent_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_two_name": "CSS 教程",
      "chapter_level_two_url": "/css/",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 6,
      "chapter_level_one_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "80146ea611a102f46e5d8ada88021ce7",
      "chapter_level_two_parent_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_two_name": "HTML5 教程",
      "chapter_level_two_url": "/html5/",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 6,
      "chapter_level_one_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "3c810060ea14581005a36fa01b02e7f7",
      "chapter_level_two_parent_id": "d9e0bc6fb0580d43866364c06954f0cc",
      "chapter_level_two_name": "喧喧使用手册",
      "chapter_level_two_url": "/xuanim/",
      "book_content": ""
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 20,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "af8d2cb0d21719b77258e8b0569c6ca9",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS与HTML的区别",
      "chapter_level_two_url": "/css/css-pf8o2oq1.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>　　CSS 和 HTML 都是前端技术的核心语言，那么这两者分别是干什么的？又有什么区别呢？\n</p><p style=\"text-align: center;\" align=\"center\"><img src=\"https://atts.w3cschool.cn/attachments/image/20180423/1524454178883430.png\" alt=\"QQ截图20180423112845\" class=\"\"><br></p><p><b>　　HTML（结构）\n</b></p><p>　　全称 Hyper Text Markup Language（超文本标记语言），该语言是用于定义文档内容结构\n</p><p>　　功能：\n</p><p>　　1.该语言写的代码通常会被浏览器解析执行\n</p><p>　　2.超文本：不止包括文本，还有图片、链接、音乐...\n</p><p>　　3.一个页面就是一篇文档，而一篇文档最核心的就是内容，不同含义\n</p><p>　　注释格式：&lt;!--注释内容--&gt;\n</p><p><br></p><p><b>　　CSS（布局）\n</b></p><p>　　全称 Cascading Style Sheets （层叠样式表）\n</p><p>　　功能：\n</p><p>　　1.用于定义 HTML 文档的样式（外观）\n</p><p>　　2.页面表现的基础，可以控制布局，控制元素的渲染\n</p><p>　　注释格式：/*注释内容*/\n</p><p>　　总的来说就是一句话：HTML 是网页的结构，CSS 是网页的样式。打个比方，如果把整个网页比喻成一个人，那么 HTML 就是骨头，CSS 就是衣服。</p><p><br></p><p><b>　　相关教程：\n</b></p><p>　　<a href=\"https://www.w3cschool.cn/html/\" target=\"_blank\">HTML入门教程\n</a></p><p>　　<a href=\"https://www.w3cschool.cn/css/\" target=\"_blank\">CSS入门教程</a></p><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 19,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "11a0dad1ef9a41734e69ce838269d003",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS表格样式分享",
      "chapter_level_two_url": "/css/css-sfrk2opy.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>为了让用户拥有更好的阅读体验，将文章中数据以更直观的方式展示是非常必要的，因此，拥有良好的表格设计就显得非常重要了。下面，w3cschool就和大家分享4款好看且实用的CSS表格样式。</p>\n<p>\n    <br>\n</p>\n<p>具体操作：直接复制粘贴后即可在浏览器打开显示</p>\n<p>     ——<a href=\"https://www.w3cschool.cn/minicourse/play/csscourse\" target=\"_blank\">CSS快速入门</a>\n\n</p>\n<p><b>1. 单像素边框CSS表格</b>\n\n</p>\n<p style=\"text-align: center;\" align=\"center\"><b>\n<img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604990242475698.png\" alt=\"微信截图_20201110143709\" style=\"max-width:100%;\"></b>\n\n</p>\n<p style=\"text-align: center;\" align=\"center\"> \n    <br>\n</p>\n<p>这是一个简单但是常用的表格样式。</p>\n<p><font color=\"#ff0000\">源代码：\n\n</font>\n\n</p>\n<div class=\"example\"><font color=\"#ff0000\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n    <p>table.gridtable {font-family: verdana,arial,sans-serif;font-size:11px;color:#333333;border-width: 1px;border-color: #666666;border-collapse: collapse;}</p><p>table.gridtable th {border-width: 1px;padding: 8px;border-style: solid;border-color: #666666;background-color: #dedede;}</p><p>table.gridtable td {border-width: 1px;padding: 8px;border-style: solid;border-color: #666666;background-color: #ffffff;}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_sha_1\" class=\"tryitbtn\">尝试一下 »</a>\n</font>\n\n</div><font color=\"#ff0000\">\n\n\n\n\n\n\n\n\n\n\n\n\n</font>\n\n<p><b>2. 带背景图的CSS样式表格\n</b>\n\n</p>\n<p style=\"text-align: center;\" align=\"center\">\n    <b><img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604990669700934.png\" alt=\"QQ截图20201110144413\" style=\"max-width:100%;\"></b>\n\n</p>\n<p>这个样式和和上面的差不多，只是多了背景图，的视觉上会好看不少。</p>\n<p><font color=\"#ff0000\">源代码：\n</font></p><div class=\"example\"><font color=\"#ff0000\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n    <p>table.imagetable {font-family: verdana,arial,sans-serif;font-size:11px;color:#333333;border-width: 1px;border-color: #999999;border-collapse: collapse;}</p><p>table.imagetable th {background:#b5cfd2 url('cell-blue.jpg');border-width: 1px;padding: 8px;border-style: solid;border-color: #999999;}</p><p>table.imagetable td {background:#dcddc0 url('cell-grey.jpg');border-width: 1px;padding: 8px;border-style: solid;border-color: #999999;}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_sha_2\" class=\"tryitbtn\">尝试一下 »</a>\n</font></div><font color=\"#ff0000\">\n</font>\n\n\n\n\n<p><b>3. 自动换整行颜色的CSS样式表格（需要用到JS）\n</b>\n\n</p>\n<p style=\"text-align: center;\" align=\"center\">\n    <b><img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604990839999914.png\" alt=\"QQ截图20201110144710\" style=\"max-width:100%;\"></b>\n\n</p>\n<p>这个CSS表格会自动切换每一行的颜色，这种呈现方式，在我们编辑一个数据庞大的表格时，非常好用。</p>\n<p><font color=\"#ff0000\">源代码：\n</font></p><div class=\"example\"><font color=\"#ff0000\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n    <p>function altRows(id){</p><p>if(document.getElementsByTagName){ </p><p>var table = document.getElementById(id); </p><p>var rows = table.getElementsByTagName(\"tr\");</p>for(i = 0; i &lt; rows.length; i++){         <p>if(i % 2 == 0){</p><p>rows[i].className = \"evenrowcolor\";</p><p>}else{</p><p>rows[i].className = \"oddrowcolor\";</p><p>}}}}</p><p>window.onload=function(){</p><p>altRows('alternatecolor');}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_sha_3\" class=\"tryitbtn\">尝试一下 »</a>\n</font></div><font color=\"#ff0000\">\n</font>\n\n\n\n<p><b>4. 鼠标悬停高亮的CSS样式表格 (需要JS)\n</b>\n\n</p>\n<p style=\"text-align: center;\" align=\"center\">\n    <b><img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604991008720484.png\" alt=\"微信截图_20201110145003\" style=\"max-width:100%;\"></b>\n\n</p>\n<p>纯CSS显示表格高亮在IE中显示有问题，所以这边使用了JS来做高亮。</p>\n<p>注意：不要定义格子的背景色。</p>\n<p><font color=\"#ff0000\">源代码：\n</font></p><div class=\"example\"><font color=\"#ff0000\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n    <p>table.hovertable tr {</p><p>background-color:#d4e3e5;}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_sha_4\" class=\"tryitbtn\">尝试一下 »</a>\n</font></div><font color=\"#ff0000\">\n</font>\n\n\n\n<p>　以上是w3cschool为大家推荐的几种比较常见和常用的CSS表格样式了，希望大家喜欢。</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 18,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f71f3c6c4b2e3e50b68ca7176c25f33f",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "css鼠标样式语法及20种可选值（属性）",
      "chapter_level_two_url": "/css/css-mouse.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>我们对Windows各种各样的鼠标样式都不陌生，当鼠标移动到不同的地方时，当鼠标执行不同的功能时，当系统处于不同的状态时，都会使鼠标的形状发生变化。而在网页上往往只有当鼠标在超级链接上时才出现一个手形，在其它地方似乎没有什么变化，同充满动感的网页显得不怎么和谐。这里教大家用CSS来定义20种种鼠标样式形状。在CSS中，使用<a href=\"https://www.w3cschool.cn/cssref/pr-class-cursor.html\" target=\"_blank\">cursor属性</a>来定义鼠标的样式。</p>\n<p><span><br></span>\n\n</p>\n<p><span><strong>用css控制鼠标样式的语法如下:</strong><br></span>\n\n</p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;span style=\"cursor:*\"&gt;文本或其它页面元素&lt;/span&gt;</p>\n    </div>\n</div>\n<p>把 * 换成如下20个可选值的一种：</p>\n<p>cursor属性取值如下，默认值为default。大家可能会说，cursor属性值这么多，怎么记呀？其实大家不用担心，在实际开发中，我们一般只用到“default”和“pointer”这两个属性值，其他的一般都很少用得上。如果实在没办法还需要其他的，那就回来查这种表就行了。\n    <br>\n</p>\n<p><span></span>\n\n</p>\n<table class=\"\" cellspacing=\"1\" cellpadding=\"3\" border=\"0\" bgcolor=\"#cccccc\">\n    <tbody>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">crosshair;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\">\n                    <br>\n                </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">十字准心</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor render as a crosshair\n                    <br>\n                </p>\n                <p align=\"left\">光标表现为十字准线</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: pointer; \n                    <br>cursor: hand;\n                    <br>写两个是为了照顾IE5，它只认hand。</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">手</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor render as a pointer (a hand) that indicates a link\n                    <br>\n                </p>\n                <p align=\"left\">光标标以暗示(手指)的形式来表明有一个连接</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: wait;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">等待/沙漏</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that the program is busy (often a watch or an hourglass)\n                    <br>光标暗示当前程序正忙(一般为一块表或是一个沙漏)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: help;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">帮助</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that help is available (often a question mark or a balloon)\n                    <br>光标暗示当前位置可得到帮助(一般为问号或是气球)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: no-drop;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">无法释放</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: no-drop;</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: text;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">文字/编辑</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates text\n                    <br>光标暗示当前所处位置为文字内容</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: move;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">可移动对象</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates something that should be moved\n                    <br>光标暗示一些东西应该被移动</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: n-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向上改变大小(North)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved up (north)\n                    <br>边缘可向上移动(北)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: s-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向下改变大小(South)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved down (south)\n                    <br>边缘可向下方移动(南)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: e-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向右改变大小(East)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved right (east)\n                    <br>box边缘可向右(东)边移动</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: w-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\">\n                    <a href=\"http://hiphotos.baidu.com/wydmz/pic/item/a74023f0750966a8a40f5202.jpg\" rel=\"external nofollow\" target=\"_blank\"></a>\n                </p>\n                <br>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向左改变大小(West)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved left (west)\n                    <br>边缘可向左移动(西)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: ne-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向上右改变大小(North East)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved up and right (north/east)\n                    <br>光标暗示box的边缘可向右上方移动(东北方向)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: nw-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向上左改变大小(North West)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved up and left (north/west)\n                    <br>边缘可向左上方移动(西北)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: se-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向下右改变大小(South East)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved down and right (south/east)\n                    <br>边缘可向右下方移动(东南)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: sw-resize;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">向下左改变大小(South West)</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The cursor indicates that an edge of a box is to be moved down and left (south/west)\n                    <br>边缘可向左下方移动(西南)</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: auto;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">自动</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The browser sets a cursor\n                    <br>浏览器设置一个光标</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor:not-allowed;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">禁止</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor:not-allowed;</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: progress;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">处理中</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: progress;</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: default;</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">系统默认</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">The default cursor (often an arrow)\n                    <br>默认的光标状态（通常为一个箭头）</p>\n            </td>\n        </tr>\n        <tr>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">cursor: url(' # ');\n                    <br># = 光标文件地址      (注意文件格式必须为：.cur 或 .ani)。</p>\n            </td>\n            <td bgcolor=\"#ffffff\" align=\"center\">\n                <p align=\"left\"> </p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p align=\"left\">用户自定义（可用动画）</p>\n            </td>\n            <td bgcolor=\"#ffffff\">\n                <p>The url of a custom cursor to be used.\n                    <br>自定义光标的url位置</p>\n                <p><strong>Note:</strong> Always define a generic cursor at the end of the list in case none of the url-defined cursors can be used\n                    <br>注意：在定义完自定义的光标之后在末尾加上一般性的光标，以防那些url所定义的光标不能使用</p>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<h2><br></h2>\n\n\n<h2>cursor的pointer与hand区别</h2>\n\n<div>cursor:hand 与 cursor:pointer 的效果是一样，都像手形光标。那为什么有两个呢，这两个有什么区别呢？\n    <br>\n    <br>用浏览器测试得出以下结论：\n    <br>cursor:hand ：IE完全支持。但是在 firefox 是不支持的，没有效果。\n    <br>cursor:pointer ：是 CSS2.0 的标准。所以 firefox 是支持的，但是 IE5.0 既之前版本不支持。IE6 开始支持。\n    <br>所以为了兼容各个主流浏览器，尽量使用 cursor:pointer，而不要使用 cursor:hand。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n\n<h2>实例：</h2>\n\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>#div_default{cursor:default;}</p>\n        <p>#div_pointer{cursor:pointer;}</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try__18\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div><code>\n</code>\n\n<div>在浏览器预览效果如下：\n    <br>\n    <br>\n</div>\n<div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161121/201611210921496330.png\" alt=\"css鼠标样式\">\n    </div>\n    <div>\n        <br>\n    </div>\n     <h2>CSS Cursor鼠标指针样式兼容性参考表</h2>\n\n    <div>下面分享一个鼠标指针样式兼容性在线参考表，<span>黑色图标：表示该属性兼容此浏览器。</span><span>灰色图标：表示该属性不兼容此浏览器。</span><span><br></span>\n\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161121/201611210921496198.jpg\" alt=\"CSS Cursor兼容表\">\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 17,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "393acb4065cef26070fcc9ee6fc105bc",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "HTML引入CSS的常见方法及解析",
      "chapter_level_two_url": "/css/css-quote.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>我们都知道 HTML 和 CSS 是作用不相同的两种语言，但是它们对一个网页能够同时产生作用，网页（webPage）= 内容（html） + 表现（css） + 行为（javascript）。因此需要把 CSS 引入 HTML 一起使用。要想在浏览器中显示出预期的 CSS 样式表效果，就要让浏览器识别并正确调用 CSS。当浏览器读取样式表时，要依照文本格式来读，而且当 CSS 样式表放在不同的地方，所产生的作用范围也是不同的。在 HTML 中，主要用四种方法引入 CSS：行内式、内嵌式、导入式和链接式。</p>\n<p style=\"text-align: center;\">\n    <br>\n    </p>\n    <p style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161121/201611210918198866.png\" alt=\"HTML引入CSS\">\n        <br>\n    </p>\n    <p><strong>（1）行内式</strong>\n\n    </p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;p style=”color:red”&gt;网页中css的导入方式&lt;/p&gt;</p>\n    </div>\n</div>\n\n    <p>即在标记的style属性中设定CSS样式，这种方式本质上没体现出CSS的优势，因此不推荐使用。</p>\n    <p>\n        <br><strong>（2）嵌入式</strong>\n\n    </p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;style type=”text/css”&gt;</p>\n        <p>p{ color:red }</p>\n        <p>&lt;/style&gt;</p>\n    </div>\n</div>\n <span>在对页面中各种元素的设置集中写在&lt;head&gt;和&lt;/head&gt;之间的，对于单个页面来说，这种方式很方便。</span><span>但是这种方法的使用情况要少的多，最长见得就是访问量大的门户网站。或者访问量较大的企业网站的首页。与第一种方法比起来，优点突出，弊端也明显。优点：速度快，所有的 CSS 控制都是针对本页面标签的，没有多余的 CSS 命令；再者不用外链 CSS 文件。直接在 HTML 文档中读取样式。缺点就是改版麻烦些，单个页面显得臃肿，CSS 不能被其他 HTML 引用造成代码量相对较多，维护也麻烦些。但是采用这种方法的公司大多有钱，对他们来说用户量是关键，他们不缺人进行复杂的维护工作。</span>\n\n    <p><strong><br>（3）导入式</strong>\n\n    </p>\n  \n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;!-- 导入外部样式：在内部样式表的&lt;style&gt;&lt;/style&gt;标记之间导入一个外部样式表，导入时用@import。 --&gt;  </p>\n        <p>&lt;style type=\"text/css\"&gt;  </p>\n        <p> @import \"jisuan.css\";  </p>\n        <p>&lt;/style&gt;</p>\n    </div>\n</div>\n\n    <p>\n        <br><strong>（4）链接式</strong>\n\n    </p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;link href=\"jisuan.css\" rel=”stylesheet” type=”text/css” /&gt;</p>\n    </div>\n</div>\n\n    <br> <span>导入式和链接式差不多，都是从外部引入 CSS 文件。但是链接式对于客户端用户浏览网站时，效果会好些。</span>\n\n    <p>链接式可以说是现在占统治地位的引入方法。如同 IE 与浏览器。这也是最能体现 CSS 特点的方法；最能体现 DIV+CSS 中的内容与显示分离的思想，也最易改版维护，代码看起来也是最美观的一种。\n        <br>\n        <br>如果希望用 javascript 来动态决定引入哪个 css 文件，则必须使用连接式才能实现。大多数的网站还是比较喜欢使用链接的方式引用外部 CSS 的。\n        <br>\n    </p>\n    <p style=\"text-align: center;\">\n        <br>\n    </p>\n    <p style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161121/201611210919559806.png\" alt=\"css链接式\">\n        <br>\n    </p>\n     <h2>采用导入式和链接式的区别：</h2><span>1、导入式：会在整个页面装载完成后再装载 CSS 文件，对于有的浏览器来说，在一些情况下，如果网页文件的体积比较大，则会出现先显示无样式的页面，闪烁一下之后再出现设置样式后的效果，从浏览者的感受来说，这是导入式的一个缺陷。</span>\n\n    <br>\n    <p>\n        <br>\n    </p>\n    <p>2、链接式：会在装载页面主体部分之前装载 CSS 文件，这样显示出来的网页从一开始就是带有样式效果的。</p>\n    <p>\n        <br>\n    </p>\n    <p>对于一些比较大的网站，为了便于维护，可能会希望把所有的 CSS 样式分类别放到几个 CSS 文件中，这样如果使用连接式引入，就需要几个语句分别导入 CSS 文件。如果要调整 CSS 文件的分类，就需要同时调整 HTML 文件，这对于维护工作来说，是一个缺陷，如果使用导入式，则可以只引进一个总的 CSS 文件，在这个文件中再导入其他独立 CSS 文件；而链接式则不具备这个特性。\n        <br>\n    </p>\n    <p>\n        <br>\n    </p>\n    <p>因此给大家的建议是：如果仅需要引入一个 CSS 文件，则使用链接方式，如果需要引入多个 CSS 文件，则首先用链接方式引入一个“目录”CSS 文件，这个“目录”CSS 文件中再使用导入式引入其他 CSS 文件。\n        <br>\n        <br>\n    </p>\n     <h2>link 和@import 的区别</h2>\n\n    <div><strong>Quote link的定义</strong>\n\n        <br>HTML 和 XHTML 都有一个结构，它使网页作者可以增加于 HTML 文档相关的额外信息。这些额外资源可以是样式化信息（CSS）、导航助手、属于另外形式的信息（RSS）、联系信息等等。\n        <br>\n    </div>\n    <br>\n    <p>Quote @import 的定义\n        <br>\n    </p>\n    <p>指定导入的外部样式表及目标设备类型。其实 link 和@import 的最根本区别就是，link 是一个 HTML 的一个标签，而@import 是 CSS 的一个标签,link 除了调用 CSS 外还可以有其他作用譬如声明页面链接属性，声明目录，rss等等，而@import 就只能调用 CSS。如果单独从外部引用 CSS 来说，他们的作用是基本一样，只不过上面的老大不一样而已。\n        <br>\n    </p>\n    <p>\n        <br>\n    </p>\n     <h2>link和import哪个更好些？</h2>\n\n    <div>上面说了因为上面的老大不一样，所以在使用上就会有一些细节的区别，不能说总体谁好谁坏，只能说具体情况具体分析。\n        <br>1、如果要用 javascript 进行样式选择：\n        <br>这个时候就要用 link,因为l ink 是 html 元素，可用 javascript 去控制 dom 元素最后达到改变样式的效果。\n        <br>\n    </div>\n    <div>\n        <br>\n    </div>\n    <div>2、如果要应用打印样式；\n        <br>打印样式顾名思义就是打印页面时候的样式。\n        <br>这个样式在普通浏览下是没有效果的，只有在打印的时候生效。\n        <br>如果要为页面单独引用打印样式的话，link 和@import 都可以的。\n        <br>\n        <br>3、如果要引用多个样式；\n        <br>如果要在一个页面上引用多个样式组合产生效果的话，link 和@import 也是都可以的。\n        <br>\n    </div>\n    <div>\n        <br>\n    </div>\n    <div>最后，其实这种@import 文件导入的方式已经很少用了，建议用 link 方式。原因是 link 载入时是和 HTML 的载入同步加载的，而@import 则是在页面内容载入完成之后再引用的。如果网速慢的话，可能会导致页面的样式混乱。另外使用@import 时要注意添加地方，在 CSS 手册中提到：该规则必须在样式表头部最先声明。并且其后的分号是必需的，如果省略了此分号，外部样式表将无法正确导入，并会生成错误信息。IE 使用@import无法引入超过35条的样式表。</div>\n    <p>\n        <br>\n    </p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 16,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "543e623ff771127ad51bbecd5014e1c9",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS加载失败的6个原因",
      "chapter_level_two_url": "/css/css-Load.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>有很多刚刚接触 CSS 的新手有时会遇到<span> CSS 加载失败</span>这个问题，但测试时，网页上没有显示该样式的问题，这就说明 CSS 加载失败了。出现这种状况一般是因为的 CSS 路径书写错，或者是在浏览器中禁止掉了 CSS 的加载，可以重新启动浏览器刷新，在文件中 CSS 的调用，一般都是通过 link 加上你的路径来实现，具体可以看下代码：</p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;!DOCTYPE html&gt;</p>\n    <p>&lt;html&gt;</p>\n    <p>&lt;head&gt;</p>\n    <p>&lt;meta charset=\"UTF-8\"&gt;</p>\n    <p>&lt;title&gt;index&lt;/title&gt;</p>\n    <p>&lt;link rel='stylesheet' type='text/css' href='./css/index1.css'&gt;//注意好文件名的书写就没问题了。</p>\n\n<p>造成 CSS 加载失败的原因有很多，这可能跟你代码出错，浏览器、路径、编码等等都是有关联的。所以在具体情况具体分析。最常见的失败原因有以下几类：</p>\n<p>\n    <br>\n</p>\n\n<h2>1.网络原因</h2><a href=\"https://baike.baidu.com/item/iis/99720?fr=aladdin\" rel=\"external nofollow\" target=\"_blank\">IIS</a><span style=\"color: rgb(0, 0, 0);\">空间不足、浏览者网速慢、空间速度慢等网络因素是造成 CSS 加载失败的原因之一，其具体表现为：当我们打开网页时，网页布局完整，但却没有任何布局样式显示。</span>\n\n<br>\n\n<h2>2.路径错误或者代码不兼容</h2>\n\n<p>如果网页打开时，没有显示 CSS 设定的样式，只以原始状态显示。那么就可能是我们 CSS 文件路径出错或者 CSS代码不兼容了。　</p>\n\n<h2>3.if造成失败 </h2>\n\n<p>第三个原因是，我们编在写 CSS 时，可能使用了if判断语句对什么浏览器调用什么 CSS 文件时疏忽造成if调用的混乱，导致在某些浏览器上能正常显示，在某些浏览器上不能正常显示。对于这个原因，解决方法就是好好检查造成 CSS 加载失败的 if 判断设置。</p>　　\n<br>\n\n<h2>4.另类CSS加载失败 </h2>\n\n<p>何为另类 CSS 加载失败？这是由于我们本身的 CSS 代码写法有问题，没有设置好造成在各浏览器显示不同布局差距效果。在 CSS 里面，我们称为<a href=\"https://www.w3cschool.cn/lugfe/lugfe-vxfp25zq.html\" target=\"_blank\">css hack</a>。</p>\n<div style=\"text-align: center;\">\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161116/201611161926437430.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"css\">\n</div>\n\n<h2>5、浏览器导致</h2>\n\n<p>在 Chrome 浏览器的错误控制台下看看 CSS 文件有没有加载进来，确定已加载的话，检查元素的类名与 CSS 中定义的类名是否相同。可能局限于 IE 浏览器，你用谷歌浏览器就会出现错误。所以尝试换个浏览器，然后等会在用，也可能修复故障。 </p>\n\n<h2>6、编码不对</h2>\n\n<p>如果不是上述问题则看一看你的 CSS 文件的字符集是否和你的调用 CSS 文件的网页的字符集是否一致，就是 charset 属性那里。在你使用浏览器进行浏览效果的时候，ie浏览器中菜单栏上有一个“查看--编码”，在查看编码上面 UTF-8 或者 GBK 看看是不是同一个编码。可能是编码不一致所造成。</p>\n<p><span style=\"font-family:微软雅黑;font-size:16px;line-height: 1.7;\">　　</span>\n\n</p>\n<p>以上就是造成 CSS 加载失败最常见的六大原因。我们了解这些原因后，如果在实际操作中遇到类似问题，便可逐一对照排查，对症下药解决问题。</p>\n<p>\n    <br>\n</p></div></div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 15,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c56bbf4f20ed3d3ca2495bcca30e906b",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS半透明属性介绍及代码实例",
      "chapter_level_two_url": "/css/css-translucent.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>当我们在做网页的时候，有时为了整体页面搭配的美观，需要设置层样式为透明或者半透明，因为透明往往能产生不错的网页视觉效果。在使用的背景的页面中，如果不设置页面内容区为半透明状态，突出不了背景的作用，也显得不那么协调。用传统的 <span>CSS 实现背景半透明效果的</span>方法是用两个层，一个放文字，另一个做透明背景，但是透明滤镜的效果会影响到里面的内容。如果只需要在IE下实现，是有更简单的方法可以实现的。</p>\n\n<h2>CSS半透明属性</h2>\n\n<div>兼容主流浏览器的 CSS 透明代码:\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.transparent_class {</p>\n    <p>filter:alpha(opacity=50);</p>\n    <p>-moz-opacity:0.5;</p>\n    <p>-khtml-opacity: 0.5;</p>\n    <p>opacity: 0.5;</p>\n    <p>}</p>\n    </div>\n</div>\n<div>上面的几个属性分别是:</div>\n<div>\n    <br>①<a href=\"https://www.w3cschool.cn/cssref/pr-opacity.html\" target=\"_blank\">opacity</a>: 0.5; 这是最重要的，因为它是 CSS 标准.该属性支持 Firefox, Safari 和 Opera.</div>\n<div>\n    <br>②filter:alpha(opacity=50); 这个是为 IE6 设的，可取值在 0-100，其它三个 0 到 1.</div>\n<div>\n    <br>③-moz-opacity:0.5; 这个是为了支持一些老版本的 Mozilla 浏览器。\n    <br>\n    <br>\n</div>\n<div>④-khtml-opacity: 0.5; 这个为了支持一些老版本的 Safari 浏览器。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n\n<h2>CSS 透明度继承问题</h2>\n\n<p>CSS 的透明属性涉及到一个继承问题，当为父级元素设置透明度后，子元素将自动继承其透明度，比如下图的效果:\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161116/201611161818284769.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"css透明度继承\">\n</div>\n<p>\n    <br>\n</p>\n<p>即使你又为子元素指定透明度为1也是无效的。</p>\n<br>\n<p>对于子元素是文字的情况，一般的解决方法是如果多少还能够看清，就不管。另一个折中的方法是，为文本子元素指定一个相对更深的颜色。也就是说，当子元素继承透明度后，所得到的文本颜色正好就是你想要的。前提是这个颜色还有加深的可能，和需要详细的计算颜色和透明度的值。</p>\n<br>\n<p>还有“取消透明度继承”的说法，这个说法是不太准确的，实际上没有任何取消透明度继承的方法。只能说，当想要实现“多个元素覆盖，只让指定的元素透明”时，可以使用的一些Hack。</p>\n<p>\n    <br>\n</p>\n<p>还有一种不错的实现方法：添加一个空元素作为透明层，和不想透明但是要实现覆盖效果的元素为同级元素。父级元素使用 <code>position:relative </code>定位; 两个子元素使用<code> position:absolute</code> 定位，实现覆盖。<a href=\"http://www.css88.com/archives/746\" rel=\"external nofollow\" target=\"_blank\">具体解释说明请点击本链接</a>\n\n</p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n<p style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161116/201611161834222685.png\" alt=\"半透明\">\n    <br>\n</p>\n\n<h2><span>IE下实现半透明</span></h2>\n\n<p>HTML代码：\n    <br>\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;div class=\"alpha1\"&gt; </p>\n    <p>&lt;div class=\"ap2\"&gt; </p>\n    <p>&lt;p&gt;背景为红色(#FF0000)，透明度20%。&lt;/p&gt; </p>\n    <p>&lt;/div&gt; </p>\n    <p>&lt;/div&gt;</p>\n    </div>\n</div>\n<p>CSS代码：\n    <br>\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.alpha1{  </p>\n    <p>width:300px;  </p>\n    <p>height:200px;  </p>\n    <p>background-color:#FF0000;  </p>\n    <p>filter:Alpha(Opacity=30);  }  </p>\n    <p>.ap2{  </p>\n    <p>position:relative;   }\n        <br>\n    </p>\n    </div>\n</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>.alpha1{  </p>\n        <p>width:300px;  </p>\n        <p>height:200px;  </p>\n        <p>background-color:#FF0000;  </p>\n        <p>filter:Alpha(Opacity=30);  }</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_fai_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n\n<h2><span><strong>兼容FF、OP的写法：</strong></span>\n\n</h2>\n\n<p><span>两个层重叠的方法改下页面结构与CSS样式</span>\n\n</p>\n<p><span>HTML代码：<br></span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;div class=\"alpha1\"&gt; </p>\n    <p>&lt;div class=\"ap2\"&gt; </p>\n    <p>&lt;p&gt;背景为红色(#FF0000)，透明度20%。&lt;/p&gt; </p>\n    <p>&lt;/div&gt; </p>\n    <p>&lt;div class=\"alpha2\"&gt; </p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;/div&gt;\n        <br>\n    </p>\n    </div>\n</div>\n<p>CSS代码：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.alpha1,.alpha2{  </p>\n    <p>width:100%;  </p>\n    <p>height:auto;  </p>\n    <p>min-height:250px;/*必需*/  </p>\n    <p>_height:250px;/*必需*/  </p>\n    <p>overflow:hidden;  </p>\n    <p>background-color:#FF0000;/*背景色*/  }  </p>\n    <p> .alpha1{  </p>\n    <p>filter:alpha(opacity=20);/*IE透明度20%*/  }  </p>\n    <p>.alpha2{  </p>\n    <p>background-color:#FFFFFF;  </p>\n    <p>-moz-opacity:0.8;/*MozFF透明度20%*/  </p>\n    <p>opacity:0.8;/*支持CSS3的浏览器（FF1.5也支持）透明度20%*/  }  </p>\n    <p>.ap2{  </p>\n    <p>position:absolute;  }  \n        <br>\n    </p>\n    </div>\n</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>.alpha1,.alpha2{  </p>\n        <p>width:100%;  </p>\n        <p>height:auto;  </p>\n        <p>min-height:250px;/*必需*/  </p>\n        <p>_height:250px;/*必需*/  </p>\n        <p>overflow:hidden;  </p>\n        <p>background-color:#FF0000;/*背景色*/  } \n            <br>\n        </p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_exp_fai_5\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 14,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "d1b61e39f7cad75b244c31dc2226276c",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS两端对齐语法及代码实例教学",
      "chapter_level_two_url": "/css/css-text-justify.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>我们都对“两端对齐”并不陌生，在 word、powerpoint、outlook 等界面工具栏里，都有两端对齐(分散对齐)的功能按钮，只是平时使用的并不是太多，从编辑习惯上来说基本都是用左对齐、居中对齐、右对齐的方式来对齐页面的文本或模块，而当我们在做表单的时候经常遇到<span>比如姓名， 手机号码， 出生地等等字段长短不一的情况，此时就需要用css</span>让两个字段的词语两端对齐才能使整体表单看起来比较协调，如下图所示：</p>\n<p>\n    <br>\n</p>\n<p style=\"text-align: center;\" align=\"center\">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604998028420735.png\" alt=\"微信截图_20201110164641\" style=\"max-width:100%;\" class=\"\">\n</p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n\n<h2>CSS 文字两端对齐</h2>\n\n<p>text-align:Justify (火狐);</p>\n<br>\n<p>text-justify:inter-ideograph (IE)</p>\n<br>\n<p>如果有需要，你可以先阅读<a href=\"https://www.w3cschool.cn/cssref/pr-text-text-align.html\" target=\"_blank\">CSS text-align属性</a>部分的内容。</p>\n\n<h2>text-justify(IE)<br>基本语法</h2>\n\n<p>text-justify : auto | distribute | distribute-all-lines | distribute-center-last | inter-cluster | inter-ideograph | inter-word | kashida | newspaper</p>\n<p style=\"text-align: left;\">\n    <br>\n</p>\n\n<h2 style=\"text-align: left;\">语法取值</h2>\n\n<div>​<code>auto</code>​ : 默认值。允许浏览器代理用户确定使用的两端对齐法则</div>\n<div>\n    <br>​<code>distribute</code>​ : 处理空格很像 newspaper ，适用于东亚文档。尤其是泰文</div>\n<div>\n    <br>​<code>distribute-all-lines</code>​ : 两端对齐行的方式与</div>\n<div>\n    <br>​<code>distribute</code>​ 相同，也同样不包含两段对齐段落的最后一行。适用于表意字文档</div>\n<div>\n    <br>​<code>distribute-center-last :</code>​ 未实现</div>\n<div>\n    <br>​<code>inter-cluster</code>​ : 调整文本无词间空格的行。这种模式的调整是用于优化亚洲语言文档的</div>\n<div>\n    <br>​<code>inter-ideograph</code>​ : 为表意字文本提供完全两端对齐。他增加或减少表意字和词间的空格</div>\n<div>\n    <br>​<code>inter-word</code>​ : 通过增加字之间的空格对齐文本。该行为是对齐所有文本行最快的方法。它的两端对齐行为对段落的最后一行无效</div>\n<div>\n    <br>​<code>kashida</code>​ : 通过拉长选定点的字符调整文本。这种调整模式是特别为阿拉伯脚本语言提供的。需要IE5.5+支持</div>\n<div>\n    <br><code>newspaper :</code> 通过增加或减少字或字母之间的空格对齐文本。是用于拉丁文字母表两端对齐的最精确格式\n    <br>\n</div>\n<div>\n    <br>\n</div>\n\n<h2>应用代码实例</h2>\n\n<div>如上图所示的注册表单，我们就要用到<code> text-align</code>， <code>text-justify</code>样式了。 <code>text-align</code> 直接设为 justify 就行了， <code>text-justify </code>的情况相对比较复杂 。</div>\n<div>HTML代码如下：</div>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;form&gt;</p>\n    <p>&lt;div&gt;</p>\n    <p>&lt;span&gt;用 户 名&lt;/span&gt;</p>\n    <p>&lt;input id='username' type=\"text\" name=\"\" /&gt;</p>\n    <p>&lt;strong&gt;&lt;/strong&gt;</p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;div&gt;</p>\n    <p>&lt;span&gt;密 码&lt;/span&gt;</p>\n    <p>&lt;input type=\"password\" name=\"\" /&gt;</p>\n    <p>&lt;strong&gt;&lt;/strong&gt;</p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;div&gt;</p>\n    <p>&lt;span&gt;确 认 密 码&lt;/span&gt;</p>\n    <p>&lt;input type=\"password\" name=\"\" /&gt;</p>\n    <p>&lt;strong&gt;&lt;/strong&gt;</p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;div&gt;</p>\n    <p>&lt;span&gt;兴 趣 爱 好&lt;/span&gt;</p>\n    <p>&lt;input type=\"text\" name=\"\" /&gt;</p>\n    <p>&lt;strong&gt;&lt;/strong&gt;</p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;div class='reg'&gt;</p>\n    <p>&lt;input type=\"button\" value='点此注册' name=\"\" /&gt;</p>\n    <p>&lt;/div&gt;</p>\n    <p>&lt;/form</p>\n    </div>\n</div>\n<div>注意,在没两个字符之间是有一个空格的 \n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>样式代码：\n    <br>\n</div>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>/*CSS reset 顶部为css的重置代码*/ html{color:#000;background:#FFF;font-family:Microsoft YaHei,sans-serif,Arial,'宋体';} body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,button,textarea,p,blockquote,th,td,strong{padding:0;margin:0;font-family:Microsoft YaHei,sans-serif,Arial;} table{border-collapse:collapse;border-spacing:0;} fieldset,img{border:0;} a{text-decoration:none; color:#; outline:none;}/*此处待添加默认链接颜色*/ a:hover{text-decoration:none;color:#cb1114}; var,em,strong{font-style:normal;} address,caption,cite,code,dfn,em,strong,th,var, optgroup{font-style:inherit;font-weight:inherit;} del,ins{text-decoration:none;} li{list-style:none;} caption,th{text-align:left;} h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal;} q:before,q:after{content:'';} abbr,acronym{border:0;font-variant:normal;} sup{vertical-align:baseline;} sub{vertical-align:baseline;} legend{color:#000;} input,button,textarea,select,optgroup,option{font-family:inherit; font-size:inherit;font-style:inherit;font-weight:inherit;} input,button,textarea,select{*font-size:100%;} .clear {clear:both;height:0px;overflow:hidden;} body{-webkit-user-select:none;-webkit-text-size-adjust:none;-webkit-transform-style:preserve-3d;} *{-webkit-tap-highlight-color:rgba(0,0,0,0);} /*form 从此处起为表单的样式处理*/ form{width:430px;margin:20px auto 0;} div{ </p>\n    <p>width:430px; </p>\n    <p>height:40px; </p>\n    <p>line-height:40px; </p>\n    <p>clear:both; </p>\n    <p>word-spacing:-1em;/*调整文本，以防止使用两端对齐之后字间距过大*/ </p>\n    <p>text-align:justify; </p>\n    <p>text-justify:distribute-all-lines;/*ie6-8*/ </p>\n    <p>text-align-last:justify;/* ie9*/ </p>\n    <p>-moz-text-align-last:justify;/*ff*/ </p>\n    <p>-webkit-text-align-last:justify;/*chrome 20+*/ </p>\n    <p>} @media screen and (-webkit-min-device-pixel-ratio:0){/* 兼容chrome*/ div span:after{ content:\".\"; display: inline-block; width:100%; overflow:hidden; height:0; } } span{float:left;width:65px;height:40px;line-height:40px;margin-right:10px;} strong{float:left;width:140px;height:40px;line-height:40px;margin-left:10px;background:#ccf;} input[type=text]{float:left;width:200px;height:20px;margin:10px 0;} input[type=password]{float:left;width:200px;height:20px;margin:10px 0;} input[type=button]{color:#00f;width:100px;height:30px;} .reg{text-align:center;margin:20px auto 0;}\n        <br>\n    </p>\n    </div>\n</div>\n<div>使用 <code>text-align:justify;</code> 和 <code>text-justify:inter-ideograph;</code> 设置文字两端对齐的效果，无论是英文还是中文，在IE和 chrome 下都不起作用。解决方法如下：\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>加入样式代码：</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>div.justify </p>\n        <p>{text-align: justify; width:200px; font-size:15px; color:red; </p>\n        <p>border:1px solid blue; height:18px;}</p>\n        <p>div.justify &gt; span </p>\n        <p>{display: inline-block /* Opera */; </p>\n        <p>padding-left: 100%; }</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<div>\n    <div style=\"text-align: left;\">效果图：</div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604996445481124.png\" alt=\"微信截图_20201110162040\" style=\"max-width:100%;\" class=\"\"> </div>\n    <div>\n        <br>\n    </div>从效果图可以看到，除了要在块级元素加 ​<code>text-align:justify </code>​样式外，还需要在里面加一个空的​<code> span</code>​ 元素，并应用样式。另外，对于中文还必须用空格隔开汉字，否则也没有两端对齐的效果。英文每个单词都有空格隔开，所以没问题。</div>\n<p style=\"text-align: center;\" align=\"center\">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20201110/1604998083883077.png\" alt=\"微信截图_20201110164756\" style=\"max-width:100%;\" class=\"\">\n</p>\n\n<h2>两端对齐英文文字的 CSS 代码</h2>\n\n<div class=\"content shiwu kuan\">代码如下：\n   \n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <div style=\"text-align:justify;\">&lt;div style=\"text-align:justify;\"&gt;\n            <br>中间是英文资料\n            <br>\n        </div>\n        <div style=\"text-align:justify;\">&lt;/div&gt;\n            <br>\n        </div>\n     </div>\n</div>\n</div>\n<div class=\"content shiwu kuan\">或\n  \n<div class=\"example\">\n    <div class=\"example_code notranslate\">&lt;div align=\"justify\"&gt;\n        <br>中间是英文资料\n        <br>&lt;/div&gt;\n        <br>\n      </div>\n</div>这样就英文显示就可以对齐了，单词也不会断开。\n    <br>但是有时候我们需要单词断开就在后面加个“-”,怎样做呢？代码如下：\n   \n<div class=\"example\">\n    <div class=\"example_code notranslate\">&lt;div style=\"text-align:justify;text-justify:inter-ideograph;\"&gt;\n        <br>中间是英文资料\n        <br>&lt;/div&gt;\n        <br>\n    </div>\n</div>这样就可以了，不过这个代码好像只有在 IE 里用。\n    <br>--------------------------------------------------------------------\n    <br>\n    <p>如果上面代码没效果，可以参考下面的示例：</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>div.justify { text-align: justify; width:200px; font-size:15px; color:red; border:1px solid blue; height:18px;}</p>\n            <p>div.justify &gt; span { display: inline-block /* Opera */; padding-left: 100%; }</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>除了要在块级元素加 ​<code>text-align:justify </code>​样式外，还需要在里面加一个空的​<code> span</code>​ 元素，并应用样式。另外，对于中文还必须用空格隔开汉字，否则也没有两端对齐的效果。英文每个单词都有空格隔开，所以没问题。</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 13,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "9f50da8541ee92b7fa2a52109ed7641f",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "详细的css导航条实现代码及素材下载",
      "chapter_level_two_url": "/css/css-navigation.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>导航条是一个网站的基础，美观易用的导航条对于任何网站都是非常重要的。按照传统的方法，导航条是由放在一行表格单元里的图形图像构成。由于人们不再推荐用表格来定位任何非表格的页面内容，所以很多人都用结构化的 XHTML 标记和 CSS 格式来创建导航条。下面先来看一下最简单的 CSS 导航条是怎么实现的：</p>\n<p>\n    <br>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151713369511.gif\" style=\"line-height: 1.7;\" alt=\"css导航条\">\n</div>\n<br>\n<p>首先,我们来给这个下拉菜单写一个 HTML 的代码.先创建一个 div 来做为容器,然后把这个导航菜单放到这个容器里.正如下面的代码,我们用无序列表来创建这个导航菜单.在这个导航菜单中 Portfolio 项下有一个子菜单,用粗体表示出来,别忘了关闭&lt;/li&gt;。\n    <br>\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;div id=\"nav\"&gt; </p>\n        <p>&lt;ul&gt; </p>\n\n<p>&lt;li class=\"first\"&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;About Me&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;Portfolio&lt;/a&gt; </p>\n<p>&lt;ul&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;Web&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;Print&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;Photos&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;/ul&gt; </p>\n<p>&lt;/li&gt; </p>\n<p>&lt;li&gt;&lt;a href=\"#\"&gt;Contact Me&lt;/a&gt;&lt;/li&gt; </p>\n<p>&lt;/ul&gt; </p>\n<p>&lt;/div&gt; </p>\n    </div>\n</div>\n<h3>The CSS</h3>\n\n<br>\n<p>首先,我们来给#nav div设置一个样式,给它一个宽度,高度,字体大小.并把默认的无序列表样式给去掉.。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>*{ margin:0px; padding: 0px; } </p>\n        <p>#nav { </p>\n        <p>font-family: arial, sans-serif; </p>\n        <p>position: relative; </p>\n        <p>width: 390px; </p>\n        <p>height:56px; </p>\n        <p>font-size:14px; </p>\n        <p>color:#999; </p>\n        <p>margin: 0 auto; </p>\n        <p>} </p>\n        <p>#nav ul { </p>\n        <p>list-style-type: none; </p>\n        <p>} </p>\n    </div>\n</div>\n<span>在这一步我们给&lt;li&gt;设置左浮动让整个导航水平.并且设置相对,记&lt;li&gt;成为一个祖元素,这样我们下面就可以利用到绝对定位了。</span>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#nav ul li { </p>\n        <p>float: left </p>\n        <p>position: relative; </p>\n        <p>} </p>\n    </div>\n</div>\n<span>在这一步我们给&lt;a&gt;标签设置一个样式被它看起来像一个按扭(div css教程-如何使用css创建一个类似按扭的导航) </span>\n\n<br>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#nav ul li a { </p>\n        <p>text-align: center; </p>\n        <p>border-right:1px solid #e9e9e9; </p>\n        <p>padding:20px; </p>\n        <p>display:block; </p>\n        <p>text-decoration:none; </p>\n        <p>color:#999; </p>\n        <p>} </p>\n    </div>\n</div>\n<span>最重要的部分 </span>\n\n<br><span>这部分将展示给你看如何让下拉菜单的显示和隐藏。</span><span>当光标没有移动到</span>Portfolio里下拉菜单不显示,当光标移动到Portfolio上面时下拉菜单显示,我们用display的属性来实现这个效果。<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#nav ul li ul { </p>\n        <p>display: none </p>\n        <p>} </p>\n        <p>#nav ul li:hover ul { </p>\n        <p>display: block; </p>\n        <p>position: absolute; </p>\n        <p>} </p>\n    </div>\n</div>\n<span>我们给下拉菜单的悬停状态设置样式 </span>\n\n<br>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#nav ul li:hover ul li a { </p>\n        <p>display:block; </p>\n        <p>background:#12aeef; </p>\n        <p>color:#ffffff; </p>\n        <p>width: 110px; </p>\n        <p>text-align: center; </p>\n        <p>border-bottom: 1px solid #f2f2f2; </p>\n        <p>border-right: none; </p>\n        <p>} </p>\n        <p>#nav ul li:hover ul li a:hover { </p>\n        <p>background:#6dc7ec; </p>\n        <p>color:#fff; </p>\n        <p>} </p>\n    </div>\n</div>\n<span>完整的CSS </span>\n\n<br>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>#nav ul li:hover ul { \n</p><p>display: block; \n</p><p>position: absolute; } </p><p>#nav ul li:hover ul li a { \n</p><p>display:block; \n</p><p>background:#12aeef; \n</p><p>color:#ffffff; \n</p><p>width: 110px; \n</p><p>text-align: center; \n</p><p>border-bottom: 1px solid #f2f2f2; \n</p><p>border-right: none; } </p><p>#nav ul li:hover ul li a:hover { \n</p><p>background:#6dc7ec; \n</p><p>color:#fff; }</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_nav_1\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n\n<h2><a href=\"//www.w3cschool.cn/tryrun/showhtml/tryhtml_navigation\" target=\"_blank\">查看在线运行效果</a></h2>\n\n\n<h2>css导航条素材下载</h2>\n\n<div>\n    <br>\n</div>\n<div><strong>4色横向CSS导航条菜单</strong>\n\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151735227942.jpg\" alt=\"4色横向CSS导航\">\n</div><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/webjs/jiaoben3.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n<p>\n    <br>\n</p>\n<p><strong>纯CSS实现的彩色导航菜单</strong>\n\n    <br>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151739108684.jpg\" alt=\"纯CSS彩色导航\">\n</div><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/webjs/jiaoben83.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n<p>\n    <br>\n</p>\n<p><strong>左侧导航布局CSS网页模板<br></strong>\n\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151741127819.png\" alt=\"左侧导航\">\n</p>\n<p><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/moban/201401/chahua3166.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n    <br>\n    <br>\n</p>\n<p><strong>CSS中英文双语导航菜单</strong>\n\n    <br>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151742179261.jpg\" alt=\"中英文双语导航\">\n</div>\n<br>\n<p><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/webjs1/201307/jiaoben1240.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n</p>\n<p>\n    <br>\n</p>\n<p><strong>CSS水平下拉菜单</strong>\n\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151751332321.png\" alt=\"水平下拉菜单\">\n    <br>\n</p>\n<p><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/webjs1/201504/jiaoben3330.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n</p>\n<p>\n    <br>\n</p>\n<p><strong>div css下拉导航菜单分类代码</strong>\n\n    <br>\n</p>\n<p style=\"text-align: center; \"><strong><img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151753593948.jpg\" alt=\"导航菜单分类\"><br></strong>\n\n</p>\n<p><a href=\"http://fjdx.sc.chinaz.com/Files/DownLoad/webjs1/201506/jiaoben3470.rar\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n</p>\n<p>\n    <br>\n</p>\n<p>五款漂亮的CSS横向下拉菜单导航条\n    <br>\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151806541056.png\" alt=\"样式一\">\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151807043278.png\" alt=\"\">\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151807198545.png\" alt=\"样式三\">\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151807498277.png\" alt=\"样式四\">\n</p>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151808068645.png\" alt=\"样式五\">\n</p>\n<p><a href=\"https://pan.baidu.com/s/1c10NwKK\" rel=\"external nofollow\" target=\"_blank\">点此下载</a>\n\n</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 12,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b5b7950a3060a24be5aa22c842b7ccba",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS滚动条实现步骤及美化小技巧",
      "chapter_level_two_url": "/css/css-scrollbar.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>很多朋友在网页设计中要自定义滚动条样式的情景，滚动条的样式我们可以通过css来控制的，<span>比如网易邮箱的滚动条样子很好看，就是利用的CSS来设置实现的。但是css控制的滚动条应该如何实现和隐藏呢？滚动条能不能换颜色或者做的更好看一些呢？下面通通告诉你。</span>\n\n</p>\n<p>在开始本节内容前，你可以复习一下<a href=\"https://www.w3cschool.cn/cssref/pr-pos-overflow.html\" target=\"_blank\">CSS overflow 属性</a>的内容。</p>\n<p><span><br></span>\n\n</p>\n<p>1、​<code>overflow-y</code>​ :<strong> </strong>设置当对象的内容超过其指定高度时如何管理内容；​<code>overflow-x </code>​: 设置当对象的内容超过其指定宽度时如何管理内容。\n    <br>\n    <br>参数:\n    <br>​<code>visible</code>​：扩大面积以显示所有内容\n    <br>\n    <br>​<code>auto</code>​：仅当内容超出限定值时添加滚动条\n    <br>\n    <br>​<code>hidden</code>​：总是隐藏滚动条\n    <br>\n    <br>​<code>scroll</code>​：总是显示滚动条\n    <br>\n    <br>2、​<code>height</code>​ : 设置滚动条的高度（修改其后数值即可）。\n    <br>\n    <br>3、滚动条颜色参数设置：\n    <br>\n    <br>​<code>scrollbar-3d-light-color </code>​设置或检索滚动条亮边框颜色\n    <br>\n    <br>​<code>scrollbar-highlight-color </code>​设置或检索滚动条3D界面的亮边（ThreedHighlight）颜色\n    <br>\n    <br>​<code>scrollbar-face-color</code>​  设置或检索滚动条3D表面（ThreedFace）的颜色\n    <br>\n    <br>​<code>scrollbar-arrow-color </code>​ 设置或检索滚动条方向箭头的颜色\n    <br>\n    <br>​<code>scrollbar-shadow-color</code>​  设置或检索滚动条3D界面的暗边（ThreedShadow）颜色\n    <br>\n    <br>​<code>scrollbar-dark-shadow-color </code>​设置或检索滚动条暗边框（ThreedDarkShadow）颜色\n    <br>\n    <br>​<code>scrollbar-base-color </code>​ 设置或检索滚动条基准颜色\n    <br>\n    <br>\n</p>\n\n<h2>设置滚动条样式</h2>\n\n<div>在原来的 html 的时候，我们可以这样定义整个页面的滚动条\n    <br>body{\n    <br>scrollbar-3dlight-color:#D4D0C8; /*- 最外左 -*/\n    <br>   scrollbar-highlight-color:#fff; /*- 左二 -*/\n    <br>   scrollbar-face-color:#E4E4E4; /*- 面子 -*/\n    <br>   scrollbar-arrow-color:#666; /*- 箭头 -*/\n    <br>   scrollbar-shadow-color:#808080; /*- 右二 -*/\n    <br>   scrollbar-darkshadow-color:#D7DCE0; /*- 右一 -*/\n    <br>   scrollbar-base-color:#D7DCE0; /*- 基色 -*/\n    <br>   scrollbar-track-color:#;/*- 滑道 -*/\n    <br>}\n    <br>\n    <br>但是同样的代码，我们应用在 xhtml 下就不起作用了，我相信好多朋友也遇到过同样的问题\n    <br>那么怎么才能在 xhtml 下应用滚动条样式呢？看下列代码\n    <br>html{\n    <br>scrollbar-3dlight-color:#D4D0C8; /*- 最外左 -*/\n    <br>   scrollbar-highlight-color:#fff; /*- 左二 -*/\n    <br>   scrollbar-face-color:#E4E4E4; /*- 面子 -*/\n    <br>   scrollbar-arrow-color:#666; /*- 箭头 -*/\n    <br>   scrollbar-shadow-color:#808080; /*- 右二 -*/\n    <br>   scrollbar-darkshadow-color:#D7DCE0; /*- 右一 -*/\n    <br>   scrollbar-base-color:#D7DCE0; /*- 基色 -*/\n    <br>   scrollbar-track-color:#;/*- 滑道 -*/\n    <br>}\n    <br>\n    <br>这段代码和上一段唯一的不同就是在 CSS 定义的元素上，一个是 body 一个是 html。我们再测试一下，把 html 页面的\"body\"修改成\"html\"测试一下，发现依然可以实现效果。那到底是为什么呢？\n    <br>\n    <br>从字面上来看，xhtml 比 html 多一个 x,那么这个 x 其实也就是 xml,为什么要加一个 xml 在里面？其实最根本的原因就是要让 html 更加结构化标准化（因为 html 实在是太烂）。我们在 html 里面定义的是 body，因为 html 不是很标准所以这样可以生效，而在xhtml里面这样就不行了，我看看那个图很明显，body 标签本身不是根元素，只有 html 才是根元素，而页面的滚动条也是属于根元素的，所以这就是我们为什么定义 body 没有效果的原因，因为我们定义的只是一个子原素。ok，我们知道了原理，来做一个试验如果把定义\"body\"或\"xhtml\"换成​<code>*</code>​，\n    <br>*{\n    <br>scrollbar-3dlight-color:#D4D0C8; \n    <br>   scrollbar-highlight-color:#fff; \n    <br>   scrollbar-face-color:#E4E4E4; \n    <br>   scrollbar-arrow-color:#666; \n    <br>   scrollbar-shadow-color:#808080; \n    <br>   scrollbar-darkshadow-color:#D7DCE0; \n    <br>   scrollbar-base-color:#D7DCE0; \n    <br>   scrollbar-track-color:#;\n    <br>}\n    <br>\n    <br>在html和xhtml都通过，因为*就是定义页面上的任何标签当然也包括了“html”这个标签。\n    <br>\n    <br>(ps:其实与其说是 html 与 xhtml 的区别到不如说是有无 XHTML 1.0 transitional doctype的区别，但是如果你把页面的 XHTML 1.0 transitional doctype 去掉的话，那么这个页面就没有 doctype，默认的显示方式就是html4.01,不过你要把XHTML 1.0 transitional doctype 修改成 HTML 4.01 doctype 同样页面定义 body 也不会有效果的，虽然这个页面的标准是html 4.01) \n    <br>\n</div>\n<div>\n    <br>\n</div>\n\n<h2>CSS 隐藏滚动条(横向,坚向)</h2>\n\n<div>网上都说使用 ​<code>overflow-y:hidden</code>​ <span>可以隐藏滚动条</span>，但是只能针对 div 元素，并不能隐藏浏览器，而一些资料说 &lt;boby&gt;里加入​<code>scroll=\"no\"</code>​，可隐藏滚动条；在&lt;boby&gt;里加入​<code>style=\"overflow-x:hidden\"</code>​，可隐藏水平滚动条；加入​<code>style=\"overflow-y:hidden\"</code>​，可隐藏垂直滚动条。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>\n    <p>1、完全隐藏</p>\n    <p>　　在里加入​<code>scroll=\"no\"</code>​，可隐藏滚动条;</p>\n    <p>2、在不需要时隐藏</p>\n    <p>　　指当浏览器窗口宽度或高度大于页面的宽或高时，不显示滚动条;反之，则显示;</p>\n    <p>3、样式表方法</p>\n    <p>　　在里加入​<code>style=\"overflow-x:hidden\"</code>​，可隐藏水平滚动条;</p>\n    <p>　　加入​<code>style=\"overflow-y:hidden\"</code>​，可隐藏垂直滚动条。</p>\n    <p>body{ overflow-x:hidden; } 在标准 DTD 下是不可以的</p>\n    <p>html { overflow: scroll; }</p>\n    \n    <ul>\n        <li>强制隐藏滚动条:html { overflow: hidden; }</li>\n        <li>隐藏IE的水平滚动条:html { overflow-x: hidden; }</li>\n        <li>隐藏IE的垂直滚动条:html { overflow-y: hidden; }</li>\n        <li>强制显示IE的水平滚动条:html { overflow-x: scroll; }</li>\n        <li>强制显示IE的垂直滚动条:html { overflow-y: scroll; }</li>\n        <li>强制显示Mozilla的水平滚动条:html { overflow:-moz-scrollbars-horizontal; }</li>\n        <li>注意: 仅仅强制显示水平滚动条. 也就是说, 即使需要显示垂直滚动条时, 垂直滚动条也不会出现.</li>\n        <li>强制显示Mozilla的垂直滚动条:html { overflow:-moz-scrollbars-vertical; }</li>\n        <li>注意: 仅仅强制显示垂直滚动条. 也就是说, 即使需要显示水平滚动条时, 水平滚动条也不会出现.</li>\n    </ul>\n    \n    <p><strong><br></strong>\n\n    </p>\n    <p><strong>最终的解决办法：</strong>\n\n    </p>\n    <p>在页面添加:</p>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\"><p>&lt;style&gt;\n</p><p>html { overflow-x:hidden; //隐藏水平滚动条overflow-y:hidden;//隐藏垂直滚动条}\n</p><p>&lt;/style&gt;</p></div></div>\n\n    <br>\n</div>\n\n<h2>CSS怎么美化滚动条</h2>\n\n<div>各种浏览器对CSS滚动条的支持情况：\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>这里说的 Webkit 浏览器包括谷歌浏览器，苹果公司的 Safari 浏览器，以及最新的 Opera 浏览器。这些浏览器加起来占有超过半数的桌面浏览器市场份额。对于移动端浏览器，基本上是谷歌浏览器和 Safari 浏览器的天下。唯一的遗憾是火狐浏览器，至今没有对CSS滚动条属性做任何的改进。至于IE浏览器，我们期待吧。\n    <br>\n    <br>鉴于目前浏览器市场的格局，我们很有信心相信 CSS 滚动条美化功能会有很好的很光明的前景。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>很多年前谷歌浏览器就已经开始支持对滚动条的 CSS 美化。这些 Webkit 浏览器专属的CSS属性需要使用 -webkit- 浏览器引擎前缀，我们在这里将只会使用一些基本的CSS滚动条属性，在代码里会增加一些必要的解释说明。\n    <br>\n</div>\n<div>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\"><p>::-webkit-scrollbar {\n</p><p>\t\t  width: 15px;\n</p><p>\t} /* 这是针对缺省样式 (必须的) */</p></div></div>当 CSS 中出现伪元素样式时，Webkit 引擎将会关闭它的缺省滚动条样式输出，只使用CSS里提供的样式信息。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div><span>这里是其它一些伪元素样式：</span>\n\n    <br>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\"><p>::-webkit-scrollbar-track {\n</p><p>\t\t  background-color: #b46868;\n</p><p>\t} /* 滚动条的滑轨背景颜色 */\n</p><p>\t::-webkit-scrollbar-thumb {\n</p><p>\t\t  background-color: rgba(0, 0, 0, 0.2); \n</p><p>\t} /* 滑块颜色 */\n</p><p>\t::-webkit-scrollbar-button {\n</p><p>\t\t  background-color: #7c2929;\n</p><p>\t} /* 滑轨两头的监听按钮颜色 */\n</p><p>\t::-webkit-scrollbar-corner {\n</p><p>\t\t  background-color: black;\n</p><p>\t} /* 横向滚动条和纵向滚动条相交处尖角的颜色 */</p></div></div><span>加上了这些 CSS 属性，你将会看到下面的效果(再次提醒：你需要使用 Webkit 浏览器，比如谷歌浏览器才能看到效果)。</span>\n\n</div>\n<div>\n    <br>\n</div>\n<div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151617488929.png\" alt=\"\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\">谷歌浏览器的用户是最幸福的。但我们也不能放弃火狐浏览器和IE浏览器用户。对于这些浏览器，有一个非常有效的补救方案，就是使用 javascript 插件。网上有不少人推荐一个由 Kelvin Luck 开发的一个 jQuery 插件：jScrollPane。但也有人评论这个插件是“PITA”，我翻了一下字典，发现“PITA”中文意思是“让人蛋疼”。经过试用，感到它的确是让人蛋疼。不推荐使用它。我发现了另外一个插件 malihu-custom-scrollbar-plugin，感觉相当不错，它的用法是：\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <div class=\"example\">\n            <div class=\"example_code notranslate\"><p>&lt;link rel=\"stylesheet\" href=\"js/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.min.css\"&gt;\n</p><p>&lt;!-- latest jQuery direct from google's CDN --&gt;\n</p><p>&lt;script type=\"text/javascript\" src=\"js/jquery-1.11.1.min.js\"&gt;&lt;/script&gt;\n</p><p>&lt;script type=\"text/javascript\" src=\"js/jquery-migrate-1.2.1.min.js\"&gt;&lt;/script&gt;\n</p><p>&lt;script src=\"js/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.concat.min.js\"&gt;&lt;/script&gt;\n</p><p>&lt;script&gt;\n</p><p>if (!$.browser.webkit) {\n</p><p>\t\t\t\t\t$.mCustomScrollbar.defaults.scrollButtons.enable=true; //enable scrolling buttons by default\n</p><p>\t\t\t\t\t$.mCustomScrollbar.defaults.axis=\"yx\"; //enable 2 axis scrollbars by default\n</p><p>\t\t\t\t\t$(\".container\").mCustomScrollbar({theme:\"dark\"});\n</p><p>}\n</p><p>&lt;/script&gt;</p></div></div><span>火狐浏览器中的效果截图：</span>\n\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151619168373.png\" style=\"line-height: 1.7;\" alt=\"火狐浏览器\">\n        </div>\n        <div style=\"text-align: left;\">\n            <br>\n        </div>\n        <div style=\"text-align: left;\">已经有很多网站都使用了这些滚动条的 CSS 美化技巧，特别是谷歌的一些应用和网站上，比如 Gmail 和 Google+。相信很快火狐浏览器和IE浏览器也会提供自己的解决方案。</div>\n    </div>\n</div>\n<div>\n    <br>\n     <h2>用CSS调整滚动条配色</h2>\n\n</div>\n<div>IE浏览器可以通过调整CSS的方式，来给滚动条换色。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div><span>代码如下：</span>\n\n    <br><div class=\"example\">\n    <div class=\"example_code notranslate\"><p>.uicss-cn\n</p><p>{\n</p><p>height:580px;overflow-y: scroll;\n</p><p>scrollbar-face-color:#EAEAEA;\n</p><p>scrollbar-shadow-color:#EAEAEA;\n</p><p>scrollbar-highlight-color:#EAEAEA;\n</p><p>scrollbar-3dlight-color:#EAEAEA;\n</p><p>scrollbar-darkshadow-color:#697074;\n</p><p>scrollbar-track-color:#F7F7F7;\n</p><p>scrollbar-arrow-color:#666666;\n</p><p>}</p></div></div>具体样式对应的滚动条区域如图所示：\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151625519680.png\" alt=\"滚动条变色\">\n    <br>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 11,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "1525ab663697393a7a256b654d207215",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS虚线实现方法及多种应用实例",
      "chapter_level_two_url": "/css/u21y1t7g.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>很多 CSS 初学者<span>在前端开发过程中，经常会用到</span> CSS <span>虚线样式，但是</span>不知道 CSS 虚线样式该如何实现，比如一个 CSS 这样写：​<code>border-style:dotted solid double dashed; </code>​出来的框就是：上边框是点状，右边框是实线，下边框是双线，左边框是虚线，如果一个 CSS 这样写：border-bottom:1px\n    dashed #000000;出来的框就是一条宽度为1像素的黑色下划虚线··· CSS 关于“线”的类型还真是挺多的，其中新手们比较关注的还是“虚线的实现方法”。</p>\n<p>\n    <br>\n</p>\n<h2>css虚线实现方法</h2>\n<div>定义和用法：\n    <br><a href=\"https://www.w3cschool.cn/cssref/pr-border-style.html\" target=\"_blank\">border-style 属性</a>用于设置元素所有边框的样式，或者单独地为各边设置边框样式。只有当这个值不是 ​<code>none</code>​ 时边框才可能出现。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>这里边框属性的虚线边框 ​<code>border </code>​控制虚线。以下配置的 CSS 高度(CSS height)和 CSS 宽度( CSS width)为350像素。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>1、四边为虚线边框\n    <br>​<code>border:1px dashed #000;</code>​ 黑色虚线边框\n    <br>\n    <br>\n</div>\n<p>实例：</p>\n<p>\n    <br>\n</p><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>.hackhome{border:1px dashed #000; height:50px;width:350px}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_1\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n<div>这里配置边框缩写形式解释 ​<code>hackhome</code>​ 挑选器四边边框为1px的黑色虚线边框\n    <br>\n    <br>\n</div>\n<div>2、左边为虚线：\n    <br><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>.hackhome-1{border-left:1px dashed #000; height:50px;width:350px}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_2\" class=\"tryitbtn\">尝试一下 »</a></div>\n    <span style=\"line-height: 1.7;\">这里配置了左边一边为黑色虚线边框</span>\n        <br>\n</div>\n<div><span style=\"line-height: 1.7;\"><br></span>\n</div>\n<div>3、右边为虚线：\n    <br><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>.hackhome-1{border-right:1px dashed #000; height:50px;width:350px}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_3\" class=\"tryitbtn\">尝试一下 »</a></div>这里配置了右边一边为黑色虚线边框\n    <br>\n    <br>\n</div>\n<div>4、顶部边(上边)为虚线：\n    <br><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>.hackhome-1{border-top:1px dashed #000; height:50px;width:350px}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_4\" class=\"tryitbtn\">尝试一下 »</a></div>这里配置了顶边(上边线)一边为黑色虚线边框</div>\n<div>\n    <br>5、底部边(下边)为虚线：\n    <br><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>.hackhome-1{border-bottom:1px dashed #000; height:50px;width:350px}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_5\" class=\"tryitbtn\">尝试一下 »</a></div>这里配置了底边(下边线)一边为黑色虚线边框</div>\n<div>\n    <br>6、随意一边不为虚线，其它三边为虚线状况\n    <br>参与右边边框不为虚线而没有边线，其它三边为黑色虚线边框\n    <br><div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">.hackhome{ border:1px dashed #000;border-right:0; height:50px;width:350px; }</div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_line_6\" class=\"tryitbtn\">尝试一下 »</a></div>这里先配置了该对象四边为黑色1px 虚线边框，紧接着又配置一边边线为0的配置，这样相当于配置了3边的边框虚线属性，但是这里留意边框属性配置前后顺序\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<h2>常用css虚线样式</h2>\n<div>例1\n    <br>​<code>border-style:dotted solid double dashed; \n    </code>​<br>上边框是点状\n    <br>右边框是实线\n    <br>下边框是双线\n    <br>左边框是虚线\n    <br>\n    <br>\n</div>\n<div>例2\n    <br>​<code>border-style:dotted solid double;\n    </code>​<br>上边框是点状\n    <br>右边框和左边框是实线\n    <br>下边框是双线\n    <br>\n    <br>\n</div>\n<div>例3\n    <br>​<code>border-style:dotted solid;\n    </code>​<br>上边框和下边框是点状\n    <br>右边框和左边框是实线\n    <br>\n    <br>\n</div>\n<div>例4\n    <br>​<code>border-style:dotted;\n    </code>​<br>所有 4 个边框都是点状\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<h2>怎么用CSS实现链接的虚线下划线效果</h2>\n<div>修改您的样式表，找下边这段（一般都在开头）\n    <br>\n</div>\n<div><div class=\"example\">\n    <div class=\"example_code notranslate\"><p>a {\n</p><p>color:#3399FF;\n</p><p>font-weight:Normal; /*字体效果 普通 可以改成bold粗体*/\n</p><p>text-decoration:none; /*下划线效果：无下划线*/\n</p><p>}\n</p><p>a:hover {\n</p><p>color:#4499EE;\n</p><p>text-decoration:none; /*下划线效果：无下划线*/\n</p><p>border-bottom: 1px #0099CC dotted /*加一个只有下边的框 边框为虚线*/\n</p><p>}\n</p><p>a{}控制连接的效果 a:hover{}控制鼠标移上去的效果。</p></div></div>\n</div>\n<div>\n    <br>\n</div>\n<h2>css分割线虚线代码应用实例</h2>\n<div><span>实心的线条:</span><div class=\"example\">\n    <div class=\"example_code notranslate\"><p>&lt;hr align=left width=490 color=#990099 SIZE=3 noShade&gt;</p></div></div>\n</div>\n<div>\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151149494248.png\" alt=\"实心线条\">\n</div>\n<div><span>竖直线：</span><div class=\"example\">\n    <div class=\"example_code notranslate\"><p>&lt;HR align=center width=1 color=red size=100&gt;</p></div></div>\n</div>\n<div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151150382420.png\" style=\"line-height: 1.7;\" alt=\"竖直线\" class=\"\">\n    </div>\n    <div>\n        <br>\n    </div>虚线：<div class=\"example\">\n    <div class=\"example_code notranslate\"><p>&lt;hr size=1 style=\"color: blue;border-style:dotted;width:490\"&gt;</p></div></div>\n</div>\n<div>\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151153339101.png\" alt=\"虚线size\">\n    <br>\n</div>\n<div>\n    <br>双线：<div class=\"example\">\n    <div class=\"example_code notranslate\"><p>&lt;hr size=1 style=\"COLOR:#ff9999;border-style:double;width:490\"&gt;</p></div></div>\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161115/201611151155517814.png\" alt=\"双线\">\n    <br>\n</div>\n<div style=\"text-align: left;\">\n    <br>\n</div>\n<div style=\"text-align: left;\">\n    <div>\n        <br>\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 10,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "d5413b5e005ed0f1c2acc2b761695bac",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 淘宝导航代码集合（附使用技巧）",
      "chapter_level_two_url": "/css/css-taobao.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>如今，淘宝撑起了中国电商的半边天，淘宝店铺多如麻，淘宝竞争越来越激烈，除了大打价格战就是靠精美的店铺装修来吸引浏览者的驻足。淘宝导航CSS代码相信很多店铺经营者都懂得，但是如何运用CSS代码做出精致的淘宝导航却是很多人都不清楚的，导航对于买家来说是指路灯，这样一看就能出导航的重要性了。有时候看到别人家的店铺导航栏好有个性，也想照着做一个，那么应该怎么操作呢？那么下面就给大家整理一些超好用的淘宝css导航代码及使用方法和技巧。</p><p><br></p><h2>让别人的导航栏CSS代码为你所用的方法</h2><div><span>1.首先找到别人店铺的首页，右键单击导航栏空白处，查看源代码。</span></div><div><br><div style=\"text-align: center;\"><img src=\"https://atts.w3cschool.cn/attachments/image/20161114/1479109691959240.jpg\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"查看源代码\"></div></div><div style=\"text-align: left;\"><br></div><div style=\"text-align: left;\"><p>2.打开以后看到的代码</p><p><br></p><p>如果没有找到这个标识说明这是用 sdk 高级模版装修的，所以就没有代码了。</p><p>找到这几个标识，这里就是我们要找的 CSS 文件。下面的就是我们要找的 CSS 文件。跟着我们将它用浏览器打开，或者下载个 notepad 程序，双击打开就可以看到相应的代码。</p><p style=\"text-align: center;\"><br></p><p style=\"text-align: center;\"><img src=\"https://atts.w3cschool.cn/attachments/image/20161114/1479110064555029.jpg\" alt=\"代码\"><br></p><p style=\"text-align: center;\"><br></p><p style=\"text-align: left;\">3.打开文件，点击“替换”<br></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: center;\"><img src=\"https://atts.w3cschool.cn/attachments/image/20161114/1479110462599765.jpg\" alt=\"替换\"><br></p><p style=\"text-align: center;\"><br></p><p style=\"text-align: left;\">4.然后复制下面这段代码 #page#content.tshop-pbsm-shop-nav-ch<br>　　</p><p style=\"text-align: left;\">粘贴进查找内容框里，替换为后面的框不要填写，直接点击\"全部替换\"按钮。那么，这样的 CSS代码就可以为我们所用了。<br></p><p><br></p><div style=\"text-align: center;\"><img src=\"https://atts.w3cschool.cn/attachments/day_161114/201611141602423803.jpg\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"粘贴代码\"></div><div style=\"text-align: center;\"><br></div><div style=\"text-align: left;\"><span>5.最后，我们把 </span>CSS <span>代码做好后，粘贴到自己的店铺里，却发现分类是没有底色的。解决方法不难，我们只需要设置一下页头背景就可以了。</span><br><br></div><div style=\"text-align: center;\"><img src=\"https://atts.w3cschool.cn/attachments/day_161114/201611141604001890.jpg\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"淘宝导航栏\"></div><br><h2>淘宝 CSS 导航参考代码</h2><div>以下文字内容可以一同复制使用，不会影响到使用效果<br></div><div><br></div><div><ul><li>/* 导航条背景色*/    .skin-box-bd .menu-list{background: none repeat scroll 0 0 #00ad08;}</li><li>/*首页/店铺动态背景色*/    .skin-box-bd .menu-list .link{background: none repeat scroll 0 0 #00ad08;}</li><li>/*首页/店铺动态右边线* /    .skin-box-bd .menu-list .menu{border-right:1px #006205 solid;}</li><li>/*首页/店铺动态文字颜色*/    .skin-box-bd .menu-list .menu .title{color:#ff0000}</li><li>/*所有分类背景色*/    .all-cats .link{background: none repeat scroll 0 0 #00ad08;}</li><li>/*所有分类右边线*/    .all-cats .link{border-right:1px #006205 solid;}</li><li>/*所有分类文字颜色*/    .skin-box-bd .all-cats .title{color:#ff0000}</li></ul><br><ol><li>所有分类背景，可以用图片：.skin-box-bd .link{background:url(图片链接);}</li><li>修改整个导航的背景色背景：.skin-box-bd .menu-list{background:#000000;}</li><li>修改最右边留下的一小块：.skin-box-bd{background:#000000;}</li><li>修改成图片的代码如下：.skin-box-bd{background:url(图片链接);}</li><li>字外：.skin-box-bd .menu-list .menu-selected .link{background:#000000;}</li><li> 字里：.skin-box-bd .menu-list .menu-selected .link .title{background:#000000;}</li><li>字外+字里=全部！</li><li>1.导航背景色代码（除去“所有分类”）如下：.menu-list .link{background:#000000;}</li><li>导航栏文字（除去“所有分类”）如下：.menu-list .menu .title{color:#颜色代码;font-size:字号px;}</li><li>“所有分类”的背景色代码如下：.all-cats .link{background:#000000;}</li><li>“所有分类”的文字代码如下：.all-cats .link .title{color:#颜色代码;font-size:字号px;}</li><li>最新代码，解决字体改大后导航右侧消失的情况！代码如下：.all-cats .link .title{font-size:字号px;}.all-cats .link {background:#3BAFFF;margin:0;padding:0px 3px;}</li><li>二级分类文字代码如下：.popup-content .cats-tree .fst-cat .cat-name{font-size:字号px;color:#颜色代码;font-weight:bold/bolder/normal;}</li><li>二级分类背景代码如下：.popup-content{background:#000000;}</li><li>三级分类文字代码（除去“所有宝贝”分类）如下.popup-content .cats-tree .snd-pop-inner{font-size:字号px;color:#颜色代码;font-weight:bold/bolder/normal;}</li><li>三级分类文字代码（包括“所有宝贝”分类字体大小）这样就无法改变字体颜色，我们会继续完善该代码！如下 .popup-content .cats-tree .snd-pop-inner{font-size:字号px;color:#颜色;} </li><li>三级分类背景代码：.popup-content .cats-tree .snd-pop-inner{background:#000000;}</li><li>一级导航分类（除去“所有宝贝”分类）分隔线颜色代码如下：.menu-list .menu{border-color:#000000;}</li><li>一级导航“所有宝贝”分类分隔线颜色代码如下：.all-cats .link{border-color:#000000;}</li><li>一级导航分类的宽度修改代码如下：.menu-list .menu{background:#颜色;margin:0;padding:0px 增加的宽度px;}</li><li>鼠标滑过一级分类导航文字变换背景色代码如下：.menu-list .menu-hover .link{background:#000000;}</li><li>鼠标滑过一级分类导航文字变换颜色代码如下：.menu-list .menu-hover .link .title{color:#FFFFFF;}</li><li>鼠标滑过二级分类导航文字变换背景色代码如下：.popup-content .cats-tree .cat-hd-hover{background:#000000;}</li><li>鼠标滑过二级分类导航文字变换颜色代码如下：.skin-box-bd .popup-content .cats-tree .cat-hd-hover .cat-name{color:#ff0000;}</li><li>鼠标滑过三级分类导航文字变换背景色代码如下：.popup-content .cats-tree .snd-cat-hd-hover{background:#000000;}</li><li>二级分类上加空间代码如下：.popup-content .cats-tree{margin:0 0 50px 0;}</li><li>修改“所有宝贝”右边小图标代码如下：.all-cats .link .popup-icon{background:url(图片连接);}</li><li>修改二级分类右侧图标代码如下（有三级分类才会显示）：.popup-content .cats-tree .fst-cat-icon{background:url(图片连接);}</li><li>在三级分类前加上小块白色代码如下：.popup-content .cats-tree .snd-cat-icon{display:block;height:3px;width:3px;}</li></ol></div><div><br></div><h2>全透明导航CSS代码</h2><div>很多时候在装修的过程中，需要淘宝店铺的导航变成透明的，不想被系统导航的颜色是挡住，这样可以看到自己设置的店铺背景图；这时我们需要用到一个淘宝导航透明代码，网上很多代码都不是很完整（所有分类无法透明）。​<code>font-size:15px;</code>​​<code>font-weight:bold;</code>​这个分别是字体大小和粗体。</div><div><ol><li>​<code>.skin-box-bd{background:none;border:none;} </code>​</li><li>​<code>.menu-list{background:none;} </code>​</li><li>​<code>.link{background:none;border:none;} </code>​</li><li>​<code>.menu{background:none;} </code>​</li><li>​<code>.all-cats{background:none;} </code>​</li><li>​<code>.skin-box-bd .all-cats .link{border:none;} </code>​</li><li>​<code>.skin-box-bd .menu-list .menu{border:none;} </code>​</li><li>​<code>.menu-list .menu .title{color:#000000;font-size:15px;font-weight:bold;} </code>​</li><li><code>.all-cats .link .title{color:#000000;font-size:15px;font-weight:bold;} </code>​</li><li>​<code>.skin-box-bd .menu-list .menu-selected .link{background:none;} </code>​</li><li>​<code>.skin-box-bd .menu-list .menu-selected .link .title{background:none;} </code>​</li></ol></div><div><div><br></div><h2>淘宝天猫导航CSS样式代码在线生成工具</h2></div></div><div id=\"intercalate\" style=\"text-align: center; width: 940px; line-height: 15px; font-size: 9pt; margin: 5px;\"><a href=\"http://www.ahatao.com/menucss/\" rel=\"external nofollow\" target=\"_blank\"><img src=\"https://atts.w3cschool.cn/attachments/day_161114/201611141625269251.png\" alt=\"http://www.ahatao.com/menucss/\" class=\"\"></a><br></div><div id=\"intercalate\" style=\"width:940px; line-height:15px; font-size:9pt; margin:5px;\"><br></div><h2 style=\"width:940px; line-height:15px; font-size:9pt; margin:5px;\">淘宝店铺导航CSS代码使用修改技巧</h2><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 9,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "6a71270a4b70094ce7e3e5909c7e5360",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 图片居中的多种方法",
      "chapter_level_two_url": "/css/css-center2.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>图片的居中显示 css 有很多方法，但在很多情况下有的方法无效，这是件很头疼的事情，比如</p>\n<p>一般设置图片属性</p>\n<p>​</p><code>text-align:centre</code>\n\n<p>​</p>\n<p>水平居中，但这个方法经常无效，</p><span>很多前端工程师都有研究过或者说是搜索过 </span>\n\n<p>CSS</p> <span>图片居中方法吧。</span>\n\n<br>\n<p><span>但其实 </span>CSS <span>图片居中有多种不同的情况，也有多种不同的解决方法，具体方法如下所示：</span>\n\n</p>\n<p><span>图片居中又分为水平居中和垂直居中<br></span>\n\n</p>\n<p>提示：在你开始阅读以下内容之前，你可以先了解<a href=\"https://www.w3cschool.cn/css3/14fhvxou.html\" target=\"_blank\">CSS图片</a>的基础内容。\n    <br>\n</p>\n<p><span><br></span>\n\n</p>\n<p><span><strong>一、水平居中：</strong></span>\n\n</p>\n<p><strong><br></strong>\n\n</p>\n<p>1、单独文字垂直居中我们只需要设置 CSS 样式<a href=\"https://www.w3cschool.cn/cssref/pr-dim-line-height.html\" target=\"_blank\">line-height属性</a>即可。</p>\n<p>\n    <br>\n</p>\n<p>2、文字与图片同排，在设置div高度同时再对此 CSS 样式的图片“img”样式设置​<code>vertical-align:middle</code>​垂直居中属性，如:​<code> img{vertical-align:middle;}</code>​ 。</p>\n<p>\n    <br>\n</p>\n<p>3 不确定宽度的块级元素设置水平居中的方法</p>\n<p>\n    <br>\n</p>\n<p>（1）是使用​<code> table</code>​ 作为容器的方法来实现。当然不大推荐使用这种方法，因为添加了无意义的标签。这里就稍微介绍一下吧。​<code>Table</code>​ 标签本身并不是块级元素，当我们不设置​<code>table</code>​的宽度的话，他里面的宽度是由他内部元素的宽度撑起来的。但即使我们没有设置​<code>table</code>​的宽度，直接设置​<code>table</code>​的外边距​<code>margin：0 auto;</code>​就可以实现水平居中了!这样我们就可以通过设置​<code>table</code>​水平居中，间接使里面的内容居中。</p>\n<p>（2）相对于用​<code>table</code>​的方法的好处是不用增加无语义标签，简化标签嵌套深度。这个思路是这样的，通过改变块级元素的​<code>display</code>​属性值为​<code>inline</code>​类型，然后设置​<code>text-align:center</code>​来实现居中。这种方法也有一定不妥之处就是把块级元素改为行内元素后，行内元素比块元素少了一些功能。比如说设定长宽值等，在项目运用中可能会有一些限制，大家可以自行选择。</p>\n<p>（3）通过给父元素设置浮动​<code>float</code>​，再设置父元素的​<code>position</code>​属性为​<code>relative</code>​和​<code>left：50%;</code>​子元素设置​<code>position：relative</code>​和​<code>left：-50%</code>​来实现水平居中。这个好处是可以保留块级元素仍然是以​<code>display：block</code>​的形式显示，不会添加无意义的标签，不添加嵌套深度。确点是设置了​<code>position：relative;</code>​带来了一些副作用。下面是第三种方法的实例代码，放到​<code>body</code>​标签里面就可以了。</p>\n<hr>\n<p><strong>二、垂直居中：</strong>\n\n</p>\n<p><strong><br></strong>\n\n</p>\n<p><strong>对这个CSS居中问题，我们可以使用设置背景图片的方法。</strong>举例：</p>\n<p>\n    <br><span>body {BACKGROUND: url(”图片文件”) #FFF no-repeat center;}</span>\n\n</p>\n<p>\n    <br>关键就在于这个​<code>center</code>​属性，它表示让该背景图片在容器中居中。你也可以把​<code>center</code>​换成​<code>top left</code>​或者直接写上数字来调整它的位置。</p>\n<p>\n    <br>\n</p>\n<p><strong>方法一:</strong> </p>\n\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p> div {</p>\n        <p>   width:500px;</p>\n        <p>   height:500px;</p>\n        <p>   border:1px solid #666;</p>\n        <p>   overflow:hidden;</p>\n        <p>   position:relative;</p>\n        <p>   display:table-cell;</p>\n        <p>   text-align:center;</p>\n        <p>   vertical-align:middle;}</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cent_1\" class=\"tryitbtn\">尝试一下 »</a>\n</div>\n<br><strong>方法二:</strong>\n\n<br>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>div p {\n</p><p> position:static;\n</p><p> +position:absolute;\n</p><p> top:50%\n</p><p>    }</p><p>img {\n</p><p>  position:static;\n</p><p>  +position:relative;\n</p><p>  top:-50%;left:-50%;\n</p><p>  vertical-align:middle\n</p><p>}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cent_2\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n<br><strong>方法三:</strong>\n\n<br>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>img {\n</p><p>position:static;\n</p><p>+position:relative;\n</p><p>top:-50%;left:-50%;\n</p><p>vertical-align:middle； }</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cent_3\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n<br><strong>方法四:</strong>\n\n<br>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>* {margin:0;padding:0;}\n</p><p>div {\n</p><p>  width:500px;border:1px solid #666;\n</p><p>  height:500px;\n</p><p>  background:url(\"/statics/images/w3c/intro.png\") center no-repeat;}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cent_4\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n\n<h2><hr></h2>\n\n\n<h2>三、css图片居中用text-align:center无效怎么回事？</h2>\n\n<div>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\"><p>div{\n</p><p>    border:1px solid red;\n</p><p>    margin:20px;\n</p><p>    text-align:center;\n</p><p>}</p></div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cent_5\" class=\"tryitbtn\">尝试一下 »</a></div>\n\n</div>\n\n<h2><span></span><hr></h2>\n\n\n<h2><span>四、如何让图片在DIV中水平和垂直两个方向都居中？</span></h2>\n\n<p><strong>方法一：</strong>\n\n</p>\n<p>思路：利用​<code>text-align</code>​属性将图片水平居中，然后设置​<code>padding-top</code>​的值使其垂直居中。</p>\n<p>\n    <br>\n</p>\n<p>结构如下：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;div&gt;</p>\n        <p>&lt;img src=\"images/tt.gif\" width=\"150\" height=\"100\" /&gt;</p>\n        <p>&lt;/div&gt;</p>\n    </div>\n</div>\n<p>\n    <br>\n</p>\n<p>CSS样式如下：</p>\n<p>div {width:300px; height:150px; background-color:#CCC; border:#000 1px solid; text-align:center; padding-top:50px;}</p>\n<p>\n    <br>\n</p>\n<p>运行结果如下：</p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n<p style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20161110/1478771145536424.jpg\" alt=\"图片居中\">\n    <br>\n</p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n<p>释义：</p>\n<p>图片的尺寸为150x100px，DIV的大小为300x200px；</p>\n<p>\n    <br>\n</p>\n<p>background-color:#CCC; border:#000 1px solid;为DIV加个边框和背景色，便于观察效果。</p>\n<p>\n    <br>\n</p>\n<p>​<code>text-align:center</code>​,实现图片的水平居中；​<code>padding-top:50px</code>​，50px这个数值是经过计算得到的，​<code>padding-top</code>​的值具体算法如下：（DIV的高度 – 图片的高度）/2，但这里要注意，根据盒模型原理，我们还要将DIV原来的高度200减去​<code>padding-top</code>​的值，这样显示的才是正确的，否则DIV会变高。</p>\n<p>\n    <br>\n</p>\n<p><strong>方法二：</strong>\n\n    <br>思路：只用​<code>padding</code>​属性，通过计算求得居中\n    <br>\n    <br>结构代码同上；\n    <br>\n    <br>CSS样式如下：\n    <br>\n    <br>div {width:225px; height:150px; background-color:#eee; border:#000 1px solid; padding-top:50px; padding-left:75px;}\n    <br>\n    <br>备注：这里DIV的宽高计算都遵循盒模型原理，计算方法同上。\n    <br>\n    <br>\n    <br><strong>方法三：</strong>\n\n    <br>思路：利用图片的​<code>margin</code>​属性将图片水平居中，利用DIV的​<code>padding</code>​属性将图片垂直居中。\n    <br>\n    <br>结构代码同上；\n    <br>\n    <br>CSS代码如下：\n    <br>\n    <br>div {width:300px; height:150px; background-color:#eee; padding-top:50px; border:#000 1px solid;}\n    <br>\n    <br>img {display:block; margin:0 auto;}\n    <br>\n    <br>备注：\n    <br>\n    <br>​<code>Img</code>​是内联元素，要设置其​<code>margin</code>​属性使其居中，就要将其转换为块元素​<code>display:block;</code>​然后利用​<code>margin:0 auto;</code>​实现图片的水平居中；（有的设计师为图片再加个 div 标签，然后通过 div 标签的​<code>margin</code>​实现居中，也可以，不过，在结构中就又多了对 div，相对麻烦点）至于垂直居中的方法和前面的都一样，就不再重述。\n    <br>\n    <br>以上方法都是有前提的，就是必须知道 DIV 与图片的尺寸，否则无法完成垂直居中的效果。\n    <br>\n</p>\n<hr>\n\n<h2>用一行css居中并裁剪图片的方法</h2>\n\n<p>设置图片的裁剪尺寸非常简单，你只需在 CSS 里使用这行代码：\n    <br>\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>img {</p>\n        <p>     object-fit: cover;</p>\n        <p>}</p>\n    </div>\n</div>\n<p>就是这样。不需要语义、包装 div 或者其他没意义的代码。\n    <br>\n    <br>这种技术能很好地把大小不合适的头像图片裁剪为正方形或者圆形的图片。以下面那只熊的宽图片来举例。一旦把 ​<code>object-fit:cover </code>​技术应用在这种图片上，并且设置好宽和高，图片自己就会进行裁剪和居中。\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101755331906.jpg\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"图片居中裁剪\">\n</div>\n<br>\n<p>​<code>object-fit:cover</code>​的裁剪方式和​<code>background-size:cover</code>​的完全相同，不过它是用来为 imgs、videos 和其他的媒体标签设置样式的，而不是给背景图片设置样式。\n    <br>相当多的最新浏览器都支持 object-fit 技术，并且还有 polyfill 项目让你能在更老的浏览器（IE8+）里使用该技术。</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 8,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b7d91fb8f1b62bf9156c3a1607859734",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 布局的基础方法及css布局技巧",
      "chapter_level_two_url": "/css/css-layout.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>css 是一个网页的外衣，网页好不好看取决于 css 样式，而布局是 css 中比较重要的部分，当产品把一个需求设计交到手中，我首先要做的是一点点的解剖这些需求，首先想到的是 html 的结构，根据要兼容的浏览器，数据的拼接，代码的可维护性，扩展性来选择 css 的布局方法。有时候，一个好的布局可以减少很多代码，用 css 处理网页布局的时候有很多技巧性的东西，下面就给大家介绍一些 css 布局技巧实例及 css 布局模型。</p>\n<p>\n    <br>\n</p>\n\n<h2>css的基础布局方法</h2>\n\n<div></div>\n<div>\n     <h5>1.块区域介绍</h5>\n\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>&lt;body&gt;</p>\n            <p>  &lt;div&gt;</p>\n            <p>   &lt;p&gt;这是一个段落.&lt;/p&gt;</p>\n            <p>  &lt;/div&gt;</p>\n            <p> &lt;/body&gt;<span style='background-color: initial; color: rgb(248, 248, 242); font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: inherit; white-space: pre-wrap;'> </span>\n\n            </p>\n        </div>\n    </div>\n    <p>p 元素的包含块是 div 元素，因为作为块级元素，表单元格或行内元素，这是最近的祖先元素，类似的，div 的包含块是 body. 因此，p 的布局依赖于 div 的布局，而 div 的布局则依赖于 body 的布局。</p>\n    <p><span style=\"color:#e33737;\"><span>块级元素会自动重启一行</span>。</span>\n    </p>\n    <p>\n        <br>\n    </p>\n     <h5>2. 块级元素</h5><span>正常流布局</span>\n\n    <br>\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101438173577.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"块级元素\">\n    </div>\n    <br>\n    <p>一般的，一个元素的<code>width</code>被定义为从<span>左内边界</span>到<span>右内边界</span>，<code>height</code>则是从<span>上内边界</span>到<span>下内边界</span>的距离。</p>\n    <p>不同的宽度，高度，内边距和外边距相结合，就可以确定文档的布局。</p>\n    <p>\n        <br>\n    </p>\n    <p><span><strong>水平布局</strong></span>\n\n    </p>\n    <p>简单规则，正常流中块级元素框的水平部分 总和 就等于父元素的 width . 假设一个div中有两个段落，这两个段落的外边距设置为 1 em，段落内容宽度 width 在加上其左，右内边距，边框或外边距加在一起正好是 div 内容的 width.</p>\n    <br><strong>7大属性：</strong><code>margin-left</code>, <code>border-left</code>, <code>padding-left</code>, <code>width</code>, <code>padding-right</code>, <code>border-right</code>, <code>margin-right</code>\n\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>这 7 个属性的值加在一起必须是父块元素的 <code>width</code> 值. ( 其中 margin-left, margin-right, width 可以设置成auto ) 设置成 <code>auto</code>, 会按照以上规则自动匹配到父块的宽度，例如 7个属性的和必须为 400像素，没有设置内边距或边距 ( 默认为 0) 而右外边距和<code>width</code>设置为100px, 左外边距为  <code>auto</code>,那么左外边距的宽度将是200px.\n    可以用 <code>auto</code> 弥补实际值与所需综合的差距。<span style=\"color:#e33737;\">注：如果3个可以设置 <code>auto</code>,都没设置成 <code>auto</code>,而且宽度加在一起还不够父块区域的宽度的话，会默认将 <code>margin-right</code> 设置成 <code>auto</code> 来满足总和与父块相等的要求。</span>\n\n    <br>\n    <br>如果两个外边距设置成 auto,那么，它们会是等长的，因此将元素在其父亲元素中居中。\n    <br>\n    <br>如果这3个属性都设置成auto, 那么, 外边距会是0，而让 width  尽可能的长。\n    <br>\n    <br>可以使用百分数，但是边框的宽度不能是百分数。\n    <br>\n</div>\n<div><strong><br></strong>\n\n</div>\n<div><strong>垂直布局</strong>\n\n</div>\n<div><strong>7大属性：</strong>margin-top, border-top, padding-top, height, padding-bottom, border-bottom, margin-bottom , 同样，这7个属性的值的总和是父元素 height 值。\n    <br>\n    <br>其中 , <code>margin-top</code>, <code>height</code>, <code>margin-bottom</code> 也可以设置成 <code>auto</code>. ( 如果 <code>margin-top</code>, <code>margin-bottom</code>设置成 <code>auto</code>, 那么它们就会自动设置成 0 ).\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div><strong>3.浮动与定位( 确认基本布局 )</strong>\n\n</div>\n<div>\n    <br><strong>（1) 浮动</strong>\n\n    <br>一个元素浮动时，其他内容会“环绕”该元素，浮动元素要设置一个<code>width</code>.\n    <br>\n    <br><code>float ( left , right , none )</code> , <code>none </code>的情况一般用在文档内部，用来覆盖式样表，一般很少使用 <code>none</code>.\n    <br>\n    <br>浮动元素会自动生成一个块级框。\n    <br>\n    <br><strong>浮动元素规则</strong>\n\n    <br>浮动元素不能超过包含它的块的左右边界。（1,2 左右边界受限 )\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101450123952.png\" alt=\"浮动元素规则\">\n</div>\n<div style=\"text-align: center;\">\n    <br>\n</div>\n<div style=\"text-align: left;\"><span>浮动元素之前如果出现浮动元素，则必须在该浮动元素之后（不能覆盖 ) ( </span><span>2</span><span> </span><span>左边受限</span><span> ）</span>\n\n    <br>\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101452257473.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"左边受限\">\n    </div><span></span>\n\n    <div style=\"text-align: left;\"><span><br></span>\n\n    </div>如果浮动元素加一起太宽，会自动向下。。（<span>宽度受限</span><span> )</span>\n\n</div>\n<div style=\"text-align: left;\">\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101453074667.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"宽度受限\">\n    </div><span></span>\n\n    <div style=\"text-align: left;\"><span><br></span>\n\n    </div>垂直方向要顶头不能超过块区域，同样不能超过在它上面的浮动元素。( <span>上边界受限</span><span> )</span>\n\n    <br>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101453442293.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"上边界受限\">\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <p>第一个浮动元素之后，第二个在它的下边，因为他们，第3个在它的右边。（ <span>2 上边受限</span> )</p>\n        <p>\n            <br>\n        </p>\n        <p>浮动元素的顶端，不能比之前所有浮动元素或块级别元素的顶端更高 ( <span>顶端受限</span> )</p>\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101454161092.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"顶端受限\">\n    </div><span></span>\n\n    <div style=\"text-align: left;\"><span><br></span>\n\n    </div>浮动元素之间左右的边界不能覆盖，如下1,2,3, 之间不能覆盖 ( <span>元素之间受限</span><span> )</span>\n\n</div>\n<div style=\"text-align: left;\">\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101454378793.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"元素之间受限\">\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\"><span>浮动元素会尽可能高的放置</span>\n\n        <br>\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101455046643.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"浮动元素\">\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\"><span>浮动元素会尽可能向左向右</span>\n\n        <br>\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101455355615.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"向左向右\">\n    </div><span></span>\n\n    <div style=\"text-align: left;\"><span><br></span>\n\n    </div>clear<span> , 可以防止指定了 clear 元素的两边存在浮动元素</span>\n\n</div>\n<div style=\"text-align: left;\">\n    <br>\n</div>\n<div style=\"text-align: left;\"><strong>（2) 定位</strong>\n\n</div>\n<div style=\"text-align: left;\">利用定位，可以准确的定义元素框相对于其正常位置应该出现在哪里，或者相对于父元素，另一个元素甚至浏览器窗口。\n    <br>\n    <br>position : static | relative | absolute | fixed\n    <br>\n    <br>static : 元素框正常生成\n    <br>\n    <br>relative : 元素框偏移某个距离\n    <br>\n    <br>absolute : 元素框从文档流完全删除，并相对于其包含块定。包含块可能是文档中的另一个元素或初始包含块。\n    <br>\n    <br>fixed : 类似 absolute，不过其包含块是视窗本身。\n    <br>\n    <br><strong>包含块：</strong>\n\n    <br>根元素( html或body ) , 初始包含块是一个视窗大小的矩形.\n    <br>\n    <br>非根元素 :\n    <br>\n    <br>- 非根元素, 如果其 <code>position</code>是 <code>relative </code>或  <code>static</code>, 则包含块由最近的块级框，表单元格或行内块构成。\n    <br>\n    <br>- 非根元素, 如果其 <code>position</code>是 <code>absolute</code> , 包含块为最近的 <code>position</code>值不是 <code>static</code>的祖先元素\n    <br>\n    <br><span style=\"color:#e33737;\">这里有一点很重要，元素可以定位到其包含块的外面。<br></span>\n\n    <hr>\n     <h2>css布局技巧</h2>\n\n     <h2><strong>1、多元素水平居中</strong></h2>\n\n    <div><strong><br></strong>\n\n    </div><span>效果： </span>\n\n    <br>\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101523026267.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"多元素水平居中\">\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>上图显示效果为多元素水平居中，即无论元素（小黑框）基数为多少，它们都能作为一个整体，水平居中。\n    <br>\n    <br>在网站布局中，很多时候，子元素中使用行内元素如<code>span</code>或块元素li标签且标签个数不定，而我们又想让这一块不管个数有多少个(子元素的总体宽度不定)，始终都能居中显示。这就需要设置子元素<code>display:inline-block</code>。同时，根据<code>display:inline-block</code>的属性，子元素本身具备inline的特性，因此父元素需要设置<code>text-align：center</code>，来实现子元素作为一个整体在父元素中水平居中。\n    <br>\n</div>\n<div style=\"text-align: left;\">\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>main{</p>\n            <p>  text-align:center;</p>\n            <p>}</p>\n            <p>div{</p>\n            <p>  display:inline-block;</p>\n            <p>  *display:inline;/*hack IE*/</p>\n            <p>  *zoom:1;/*hack IE*/</p>\n            <p>}</p>\n        </div>\n    </div>使用<code>display:inline-block</code>属性，可以使行内元素或块元素能够不加<code>float</code>属性就可以定义自身的宽、高，同时又能使该元素在父元素居中显示。\n    <br>\n    <br>在内联元素上定义<code>display:inline-block</code>属性，发现IE6、IE7中的显示效果同其它浏览器一致，但事实是ie7及更低版本的ie浏览器不支持<code>display:inline-block</code>这个属性。 \n    <br>\n    <br>在IE下，display: <code>inline-block</code>只是触发了元素的<code>layout</code>。比如将<code>display: inline-block</code>设置到div上，只能保证这个div拥有块元素的特征（可以设置宽度，高度等），但还是会产生换行。接下来要设置<code>display: inline</code>，使其不产生换行。将<code>display:inline-block</code>;<code>display:inline;</code>写在同一个样式上，<code>inline-block</code>属性是不会触发元素的<code>layout</code>的，因此我们还要额外加上 <code>zoom:1</code>来触发<code>layout</code>。\n    <br>\n    <br><strong>除了以上所提到的有效方法之外，还有另外一种方法：</strong>\n\n    <br>\n    <br>先使用 <code>display:inline-block</code> 属性触发块元素，然后再定义 <code>display:inline</code>，让块元素呈递为内联对象（两个display 要先后放在两个 CSS 样式声明中才有效果，这是 IE 的一个经典 bug ，如果先定义了 <code>display:inline-block</code>，然后再将 <code>display</code> 设回 <code>inline</code> 或 <code>block</code>，<code>layout</code> 不会消失）。\n    <br>\n    <br>div {display:inline-block;...}div {*display:inline;}\n    <br>\n    <br>但是要注意的是，<code>display:inline-block</code>元素间会产生多余空白。解决方法：父元素定义<code>font-size:0</code> 去掉行内块元素水平方向空白；子元素定义<code>vertical-align</code> 属性去掉行内块元素垂直方向空白。\n    <br>\n</div>\n<p>\n    <br>\n</p>\n<p><b>提示：</b>如果您希望设置元素的水平垂直定位，那么您可以参考本站的“<a href=\"https://www.w3cschool.cn/css_series/css_series-165w24q9.html\" target=\"_blank\">CSS如何使元素水平垂直定位</a>”部分的内容！</p>\n\n<h2 style=\"text-align: left;\">2、栏栅化布局</h2>\n\n<div><span>效果：</span>\n\n    <br>\n    <br>\n</div>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101533562555.png\" alt=\"栏栅化布局\">\n</div>\n<div style=\"text-align: center;\">\n    <br>\n    <div style=\"text-align: left;\"><a href=\"http://codepen.io/floralam/pen/OPYyEE\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/OPYyEE</a>\n\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>display: flex;</p>\n                <p>flex-direction: column;//上面两行等同于flex-flow：colomn</p>\n                <p>flex-wrap: wrap;// 显示 wrap一行显示不完的时候换行</p>\n                <p>height: 440px;</p>\n                <p>width: 660px;</p>\n            </div>\n        </div>一个Flexbox布局是由一个伸缩容器(flex containers)和在这个容器里的伸缩项目(flex items)组成。\n        <br>\n        <br>伸缩方向与换行(flex-flow)\n        <br>\n        <br>伸缩容器有一个CSS属性“flex-flow”用来决定伸缩项目的布局方式。\n        <br>\n        <br>如果伸缩容器设置了“flex-flow”值为“row”，伸缩项目排列由左向右排列。\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101540507766.jpg\" alt=\"flex-flow\">\n    </div>\n    <div style=\"text-align: left;\"><span><br></span>\n\n    </div>\n    <div style=\"text-align: left;\"><span>如果<code>flex-flow</code>值设置为<code>column</code>，伸缩项目排列由上至下排列。</span>\n\n        <br>\n        <br>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101541296534.jpg\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"column\">\n        </div>\n        <div style=\"text-align: left;\">\n            <br>\n        </div>制作一个20%、60%、20%网格布局</div>\n    <div style=\"text-align: left;\">\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>.main-content {</p>\n                <p>      width: 60%;</p>\n                <p>}</p>\n                <p>.main-nav,.main-sidebar {</p>\n                <p>     -webkit-box-flex: 1;      /* OLD - iOS 6-, Safari 3.1-6 */</p>\n                <p>      -moz-box-flex: 1;         /* OLD - Firefox 19- */</p>\n                <p>      width: 20%;               /* For old syntax, otherwise collapses. */</p>\n                <p>      -webkit-flex: 1;          /* Chrome */</p>\n                <p>      -ms-flex: 1;              /* IE 10 */</p>\n                <p>      flex: 1;                  /* NEW, Spec - Opera 12.1, Firefox 20+ */ }</p>\n            </div>\n        </div>\n        <br>\n    </div>\n     <h2 style=\"text-align: left;\"><strong>3、未知高度多行文本垂直居中</strong></h2>\n\n    <div style=\"text-align: left;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\"><strong>方法一，使用display：inline-block+伪元素：</strong><a href=\"http://codepen.io/floralam/pen/WbBrwV?editors=110\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/WbBrwV?editors=110</a>\n\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101544371597.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"未知高度多行文本垂直居中\">\n        </div>\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>.container{</p>\n                <p>   position: fixed;</p>\n                <p>    left: 0;</p>\n                <p>    top:0;</p>\n                <p>    height: 100%;</p>\n                <p>    width: 100%;</p>\n                <p>    text-align: center;</p>\n                <p>}</p>\n                <p>.mask:after{</p>\n                <p>    content: \" \";</p>\n                <p>    display: inline-block;</p>\n                <p>    vertical-align: middle;</p>\n                <p>    height: 100%</p>\n                <p>}</p>\n                <p>.dialog{</p>\n                <p>    display: inline-block;</p>\n                <p>    border: 3px solid lightblue;</p>\n                <p>}</p>\n            </div>\n        </div>\n        <p><span><code>box</code> 容器通过<code>after</code>或者<code>before </code>生成一个高度 100% 的「备胎」，他的高度和容器的高度是一致的，相对于「备胎」垂直居中，在视觉上表现出来也就是相对于容器垂直居中了。</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><strong><span> 方法二（感谢超级课程表胡晋哥哥的提示），使用display：table-cell：</span></strong>\n\n        </p>\n        <p><strong><span><br></span></strong>\n\n        </p>\n        <p><a href=\"http://codepen.io/floralam/pen/yNeMPg\" rel=\"external nofollow\" target=\"_blank\"><span>http://codepen.io/floralam/pen/yNeMPg</span></a>\n\n        </p>\n        <p><span>通过<code>display</code>转化成为表格的形式，再采用垂直居中的方法得到需要的结果。</span>\n\n        </p>\n        <p><span><code>display:table </code>   此元素会作为块级表格来显示（类似<code> &lt;table&gt;</code>），表格前后带有换行符。    </span>\n\n        </p>\n        <p><span><code>display:table-cell</code> 此元素会作为一个表格单元格显示（类似<code>&lt;td&gt;</code> 和<code> &lt;th&gt;</code>）</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><strong><span>方法三（感谢超级课程表胡晋哥哥的提示），flexbox布局：</span></strong>\n\n        </p>\n        <p><strong><span><br></span></strong>\n\n        </p>\n        <p><span><a href=\"http://codepen.io/floralam/pen/yNeMvM\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/yNeMvM</a></span>\n\n        </p>\n        <p><span>flexbox属性：</span>\n\n        </p>\n        <p><span>伸缩容器：一个设有<code>display:flex</code>或<code>display:inline-flex</code>的元素<br>伸缩项目：伸缩容器的子元素<br>主轴、主轴方向：用户代理沿着一个伸缩容器的主轴配置伸缩项目，主轴是主轴方向的延伸。<br>主轴起点、主轴终点：伸缩项目的配置从容器的主轴起点边开始，往主轴终点边结束。<br>主轴长度、主轴长度属性：伸缩项目的在主轴方向的宽度或高度就是项目的主轴长度，伸缩项目的主轴长度属性是<code>width</code>或<code>height</code>属性，由哪一个对着主轴方向决定。<br>侧轴、侧轴方向：与主轴垂直的轴称作侧轴，是侧轴方向的延伸。<br>侧轴起点、侧轴终点：填满项目的伸缩行的配置从容器的侧轴起点边开始，往侧轴终点边结束。<br>侧轴长度、侧轴长度属性：伸缩项目的在侧轴方向的宽度或高度就是项目的侧轴长度，伸缩项目的侧轴长度属性是「width」或「height」属性，由哪一个对着侧轴方向决定。</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><strong><span>另外，对于单行文本，设置<code>line-height=height</code>代码更加简洁:</span></strong>\n\n        </p>\n        <p><strong><span><br></span></strong>\n\n        </p>\n        <p><span><a href=\"http://codepen.io/floralam/pen/eNJvyE\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/eNJvyE</a></span>\n\n        </p>\n        <p><span>父元素设置宽度高度，然后设置属性</span>\n\n        </p>\n        <p><span><code>text-align:center;</code> /* 水平居中 */\n        <br><code>line-height: 300px;</code> /*<code> line-height = height</code> */</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><b>提示：</b>如果你想要深入了解<code>flexbox</code>布局，请参考“<a href=\"https://www.w3cschool.cn/css_series/css_series-2kjp24ql.html\" target=\"_blank\">CSS3 <code>Flexbox</code>属性与弹性盒模型</a>”部分的内容。</p>\n         <h2>4、多栏自适应布局</h2>\n\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\"><span>对于移动设备浏览器：</span><a href=\"http://codepen.io/floralam/pen/NPVwgz?editors=110\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/NPVwgz?editors=110</a>\n\n        <br>\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>.container{</p>\n                <p>  display:-webkit-box;</p>\n                <p>}</p>\n                <p>.left{</p>\n                <p>  -webkit-box-flex:1;</p>\n                <p>}</p>\n                <p>.right{</p>\n                <p>  -webkit-box-flex:1;</p>\n                <p>}</p>\n            </div>\n        </div><span>实现左右两侧元素，右侧元素的文字不会溢出到左侧位置。</span>\n\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/image/20161110/1478764614699649.png\" alt=\"多栏自适应布局\">\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <p><strong><span>1）让左边的图片左浮动或者绝对定位，</span></strong>\n\n        </p>\n        <p><span><a href=\"http://codepen.io/floralam/pen/wBbPPj\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/wBbPPj</a></span>\n\n        </p>\n        <p><span>.right{</span>\n\n        </p>\n        <p><span>    margin-left: 150px;</span>\n\n        </p>\n        <p><span>}</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><strong><span>2）让左边的图片左浮动或者绝对定位，</span></strong>\n\n        </p>\n        <p><span><a href=\"http://codepen.io/floralam/pen/gbJogQ\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/gbJogQ</a></span>\n\n        </p>\n        <p><span>.right{</span>\n\n        </p>\n        <p><span>  overflow:hidden;/*让右侧文字和左侧图片自动分栏*/</span>\n\n        </p>\n        <p><span>}</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><strong><span>3）左侧图片设置为左浮动，</span></strong>\n\n        </p>\n        <p><span><a href=\"http://codepen.io/floralam/pen/bNyaaX?editors=110\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/bNyaaX?editors=110</a></span>\n\n        </p>\n        <p><span>.right{</span>\n\n        </p>\n        <p><span> <code> display: table-cell;</code>/*让右侧文字和左侧图片自动分栏*/</span>\n    </p>\n    <p><span>}</span>\n\n    </p>\n    <p><span><br></span>\n\n    </p>\n    <p><span><strong>两栏或多栏自适应布局的通用类语句是（<code>block</code>水平标签，需配合浮动）：</strong></span>\n\n    </p>\n    <p><span><a href=\"http://codepen.io/floralam/pen/vEwpjV\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/vEwpjV</a></span>\n\n    </p>\n    <p><span>.cell{</span>\n\n    </p>\n    <p><span>  padding-right:10px;</span>\n\n    </p>\n    <p><span>  display: table-cell;</span>\n\n    </p>\n    <p><span>  *display: inline-block;</span>\n\n    </p>\n    <p><span>  *width: auto;</span>\n\n    </p>\n    <p><span>}</span>\n\n    </p>\n    <p><span><br></span>\n\n    </p>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101557483525.png\" alt=\"浮动\">\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n    </div>\n     <h2 style=\"text-align: left;\">5、强制不换行</h2>\n\n    <div>\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>white-space:nowrap;</p>\n            </div>\n        </div><span>自动换行</span>\n\n    </div>\n    <div><span></span>\n\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>word-wrap: break-word; //性允许长单词或 URL 地址换行到下一行</p>\n                <p>word-break: normal; //让浏览器实现在任意位置的换行</p>\n            </div>\n        </div>\n        <p><span><code>word-wrap</code>是控制换行的。<code>break-word </code>是控制是否断词的。</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><span>强制英文单词断行</span>\n\n        </p>\n        <p><span>div{</span>\n\n        </p>\n        <p><span>　　word-break:break-all;</span>\n\n        </p>\n        <p><span>}</span>\n\n        </p>\n        <p> </p>\n         <h2><span>6、<code>li</code>超过一定长度，以省略号显示</span></h2>\n\n    </div>\n    <div><a href=\"http://codepen.io/floralam/pen/zxQjrK\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/zxQjrK</a>\n\n        <br>\n        <div class=\"example\">\n            <div class=\"example_code notranslate\">\n                <p>nowrap li{</p>\n                <p>   white-space:nowrap;</p>\n                <p>   width:100px;</p>\n                <p>   overflow:hidden;</p>\n                <p>   text-overflow: ellipsis;</p>\n                <p>}</p>\n            </div>\n        </div>\n        <div>\n            <br>\n        </div>\n         <h2>7、左侧导航</h2>\n\n        <div><a href=\"http://codepen.io/floralam/pen/ogrbXW?editors=110\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/ogrbXW?editors=110</a>\n\n            <br>\n            <br>\n        </div>\n        <div>\n            <div style=\"text-align: center;\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101602059620.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"左侧导航\">\n            </div>\n            <div class=\"example\">\n                <div class=\"example_code notranslate\">\n                    <p>.nav{</p>\n                    <p>　　position:relative;</p>\n                    <p>　　float:left;width:190px;</p>\n                    <p>　　margin-right:-190px;</p>\n                    <p>　　background:lightblue;</p>\n                    <p>}</p>\n                    <p>.container{</p>\n                    <p>　　float:right;</p>\n                    <p>　　width:100%;</p>\n                    <p>　　background:pink;</p>\n                    <p>}</p>\n                    <p>.content{</p>\n                    <p>　　margin-left:200px;</p>\n                    <p>}</p>\n                </div>\n            </div>\n            <br>\n        </div>\n         <h2>8、 修复侧边栏</h2><span>在外容器的添加导航和主内容，当导航和主内容的宽度加上内外边距的数值大于外容器的宽度减去内边距的值，会导致导航和主内容（其中一个，html代码排后面的元素）被挤下。</span>\n\n    </div>\n    <div>\n        <br>\n    </div>\n    <div>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101604376819.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"修复侧边栏\">\n        </div>\n        <br>\n        <p><span><a href=\"http://codepen.io/floralam/pen/XJLRYq?editors=110\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/XJLRYq?editors=110</a></span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><span>解决方案：</span>\n\n        </p>\n        <p><span>1) <code>Section</code>元素上使用<code>box-sizing:border-box</code>;模拟IE6中，使得内元素的宽度为<code>width</code>的值，而非<code>width</code>加上<code>padding</code>和<code>margin</code>的值。</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><span>2)width:-moz-calc(75% -1rem * 2);width:-webkit-calc(75% - 1rem * 2); width: calc(75% - 1rem * 2); <code>width</code>属性中减去<code>padding</code>值</span>\n\n        </p>\n        <p><span><br></span>\n\n        </p>\n        <p><span>3)<a href=\"http://codepen.io/floralam/pen/yydPOE\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/yydPOE</a></span>\n\n        </p>\n        <p><span>在元素内部增加一个额外的容器，并将<code>padding</code>放在这个新增的内部容器中，这是一种修复方法，而且得到众多浏览器支持。</span>\n\n        </p>\n        <br>\n    </div>\n     <h2>9、css描绘三角形</h2>\n\n    <div>\n        <p><span><a href=\"http://codepen.io/floralam/pen/azgGmZ\" rel=\"external nofollow\" target=\"_blank\">http://codepen.io/floralam/pen/azgGmZ</a></span>\n\n        </p>\n        <p><span>很多关于使用css3来描绘特定图像，使用代码而非图片实现（多座小山包，返回顶部）的题目，都离不开描绘三角形。</span>\n\n        </p>\n        <br>\n    </div>\n     <h2>10、清除浮动的技巧</h2>\n\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101610265027.png\" alt=\"清除浮动\">\n    </div>\n    <div style=\"text-align: center;\">\n        <div style=\"text-align: left;\">在非IE浏览器（如Firefox）下，当容器的高度为<code>auto</code>，且容器的内容中有浮动（<code>float</code>为<code>left</code>或<code>right</code>）的元素，在这种情况下，容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。\n            <br>\n            <br>1)添加最后一个元素&lt;div style =\"clear:both\"&gt;&lt;/div&gt;\n            <br>\n            <br>\n            <br>2) 父元素设置overflow: hidden;\n            <br>\n            <br>\n            <br>3) 使用CSS的:after伪元素\n            <br>\n            <br>通过CSS伪元素在容器的内部元素最后添加了一个看不见的空格\"020\"或点\".\"，并且赋予<code>clear</code>属性来清除浮动。需要注意的是为了IE6和IE7浏览器，要给<code>clearfix</code>这个class添加一条<code>zoom:1;</code>触发<code>haslayout</code>。</div>\n    </div>\n</div>\n\n</div><code>\n<p>\n    <br>\n</p></code></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 7,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "4f702e1404572c1d2ea182cab868d654",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "DIV+CSS初学必读",
      "chapter_level_two_url": "/css/css-basics.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>很多初学的朋友学完<a href=\"//www.w3cschool.cn/html\" target=\"_blank\">HTML</a>后开始学习<a href=\"//www.w3cschool.cn/css\" target=\"_blank\">CSS</a>，在学习中常常遇到 div＋css，但是不知道什么意思。网上很多资料说div就是取代〈table〉的，并且搜索引擎喜欢 div，更容易被搜索引擎收录，反正很多。但到底 div＋css（或者div）是什么意思？为什么用它？为什么不用〈table〉呢?这样，我们先科普一下\n    css 是什么，然后再一起了解下 div+css 是什么。 css 是 Cascading Style Sheets (层叠样式表)的简称，css 语言是一种标记语言,它不需要编译,可以直接由浏览器执行(属于浏览器解释型语言)。</p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n<p style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101141383785.png\" alt=\"div+css\">\n    <br>\n</p>\n<div>\n     <h2><span><strong>在学习 css 之前你应该掌握哪些基础知识</strong></span></h2>\n\n</div>\n<div><span>1.什么是网页，什么是超文本语言（html）。</span>\n\n</div>\n<div>\n    <br><span>2.会使用 Dreamweaver 等常用的网页编辑器。</span>\n\n    <br>\n    <br><span>Dreamweaver 是现今最好的网站编辑工具之一，而 Dreamweaver8 增加的对 css 的支持更是你容易得来使用 css，用它来给制作网页的 css 样式表会更简单、更方便。</span>\n\n</div>\n<div>\n    <hr>\n</div>\n<div>\n     <h2>CSS 是什么</h2><span>CSS 就是 Cascading Style Sheets，中文翻译为“层叠样式表”，简称样式表，它是一种制作网页的新技术。</span>\n\n    <br>\n    <br><span>网页设计最初是用HTML标记来定义页面文档及格式，例如标题&lt;h1&gt;、段落&lt;p&gt;、表格&lt;table&gt;、链接&lt;a&gt;等，但这些标记不能满足更多的文档样式需求，为了解决这个问题，在1997年W3C(The World Wide Web Consortium)颁布 HTML4 标准的同时也公布了有关样式表的第一个标准 CSS1, 自CSS1的版本之后，又在1998年5月发布了 CSS2 版本，样式表得到了更多的充实。W3C 把 DHTML(Dynamic HTML)分为三个部分来实现：脚本语言(包括JavaScript、Vbscript等)、支持动态效果的浏览器(包括 Internet Explorer、Netscape Navigator等)和CSS样式表。</span>\n\n    <br>\n    <br>\n     <h2><span>怎样使用CSS</span></h2>\n\n</div>\n<div>css 层叠样式，层叠指的是上级标签的样式会自动继承到其所有下级标签，如针对<code>&lt;body&gt;</code>设置的标签选择器所设的字体样式会自动应用到<code>&lt;body&gt;</code>下的<code>&lt;p&gt;</code>中，除非<code>&lt;p&gt;</code>重写了相关样式将其覆盖。</div>\n<div>\n    <br>css 语义化的命名是指用易于理解的名称对 html 标签附加的 class 或 id 命名，如对于页面上方的<code>&lt;div&gt;</code>，可将其 <code>id </code>设为 <code>header</code>；页面下方的<code>&lt;div&gt;</code>设为 <code>footer</code>，可以增强 CSS 的可维护性。\n\n</div>\n<div>\n    <br>基本上层叠的意思就是“继承”、“权重”、“覆盖”，通过良好的层级命名更好的实现效果，更少的代码，更多的功能\n    <p>\n        <br>\n    </p>\n    <p> 比如下面的一个代码我们这样写：</p>\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>&lt;div class=\"box\"&gt;</p>\n            <p>&lt;div class=\"h2\"&gt;这是区块标题&lt;/div&gt;</p>\n            <p>&lt;div class=\"bd\"&gt;这是区块内容&lt;/div&gt;</p>\n            <p>&lt;div&gt; </p>\n        </div>\n    </div><span></span>\n\n    <p>使用 CSS 样式，通常有3种方法：元素中直接添加样式、从页面头部<code>&lt;style&gt;</code>元素中调用、采用链接的形式调用。其中元素中直接添加样式优先级最高、从页面头部调用次之、采用链接外部CSS样式最低。\n<br>\n</p>\n<p>\n    <br>你可以在你的 HTML 文档的<code>&lt;HTML&gt;</code>和<code>&lt;BODY&gt;</code>标记之间插入一个&lt;STYLE&gt;...&lt;/STYLE&gt;块对象。 示例如下：  </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;html&gt;</p>\n        <p>&lt;head&gt;</p>\n        <p>&lt;title&gt;文档标题&lt;/title&gt;</p>\n        <p>&lt;style type=\"text/css\"&gt;</p>\n        <p>&lt;!--</p>\n        <p>body {font: 10pt \"Arial\"}</p>\n        <p>h1 {font: 15pt/17pt \"Arial\"; font-weight: bold; color: maroon;}</p>\n        <p>h2 {font: 13pt/15pt \"Arial\"; font-weight: bold; color: blue;}</p>\n        <p>p {font: 10pt/12pt \"Arial\"; color: black;}</p>\n        <p>--&gt;</p>\n        <p>&lt;/style&gt;</p>\n        <p>&lt;/head&gt;</p>\n    </div>\n</div>\n</div>\n<p>请注意，这里将 style 对象的 type 属性设置为\"text/css\"，是允许不支持这类型的浏览器忽略样式表单。 </p>\n<p style=\"text-align: center;\">\n    <br>\n</p>\n<p style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101142552444.png\" alt=\"w3c\">\n    <br>\n</p>\n <h2>css语法基础</h2>\n\n<div>CSS 的定义是由三个部分构成：选择符（selector），属性（properties）和属性的取值（value）。\n    <br>\n    <br>\n</div>\n<div>基本格式如下：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>selector {property: value;}</p>\n    </div>\n</div>\n<div>（选择符 {属性：值}）</div>\n<div>\n    <br>\n</div>\n<div>选择符是可以是多种形式，一般是你要定义样式的HTML标记，例如body、p、table……，你可以通过此方法定义它的属性和值，属性和值要用冒号隔开：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>body {color: black;}</p>\n    </div>\n</div>\n<div>选择符 <code>body</code> 是指页面主体部分，<code>color </code>是控制文字颜色的属性，<code>black</code>是颜色的值，此例的效果是使页面中的文字为黑色。\n    <br>\n    <br>如果属性的值是多个单词组成，必须在值上加引号，比如字体的名称经常是几个单词的组合：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p {font-family: \"sans serif\";}</p>\n    </div>\n</div>\n<div>（定义段落字体为sans serif）\n    <br>\n    <br>如果需要对一个选择符指定多个属性时，我们使用分号将所有的属性和值分开：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p {text-align: center; color: red;}</p>\n    </div>\n</div>\n<div>（段落居中排列；并且段落中的文字为红色）\n    <br>\n    <br>为了使你定义的样式表方便阅读，你可以采用分行的书写格式：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p</p>\n        <p>{ text-align: center;</p>\n        <p>color: black;</p>\n        <p>font-family: arial; }</p>\n    </div>\n</div>\n<div>（段落排列居中，段落中文字为黑色，字体是arial）\n    <br>\n    <br>2. 选择符组\n    <br>\n    <br>你可以把相同属性和值的选择符组合起来书写，用逗号将选择符分开，这样可以减少样式重复定义：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>h1, h2, h3, h4, h5, h6 { color: green; }</p>\n    </div>\n</div>\n<div>（这个组里包括所有的标题元素，每个标题元素的文字都为绿色）\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p, table{ font-size: 9px; }</p>\n    </div>\n</div>\n<div>（段落和表格里的文字尺寸为9号字）\n    <br>\n    <br>\n</div>\n<div>效果完全等效于：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p { font-size: 9pt; }</p>\n        <p>table { font-size: 9pt; }</p>\n    </div>\n</div>\n<div>\n    <div>\n        <br>\n    </div>3. 类选择符\n    <br>\n    <br>用类选择符你能够把相同的元素分类定义不同的样式，定义类选择符时，在自定类的名称前面加一个点号。假如你想要两个不同的段落，一个段落向右对齐，一个段落居中，你可以先定义两个类：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p.right {text-align: right;}</p>\n        <p>p.center {text-align: center;}</p>\n    </div>\n</div>\n<div>然后用不在不同的段落里，只要在 HTML 标记里加入你定义的 class 参数：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;p class=\"right\"&gt; 这个段落向右对齐的</p>\n        <p>&lt;/p&gt; </p>\n        <p>&lt;p class=\"center\"&gt;</p>\n        <p>这个段落是居中排列的</p>\n        <p>&lt;/p&gt;</p>\n    </div>\n</div>\n<div><span>注意：类的名称可以是任意英文单词或以英文开头与数字的组合，一般以其功能和效果简要命名。</span>\n\n    <br>\n    <br><span>类选择符还有一种用法，在选择符中省略 HTML 标记名，这样可以把几个不同的元素定义成相同的样式：</span>\n\n    <div class=\"example\">\n        <div class=\"example_code notranslate\">\n            <p>.center {text-align: center;}</p>\n        </div>\n    </div>（定义.center的类选择符为文字居中排列）</div>\n<div>\n    <br>这样的类可以被应用到任何元素上。下面我们使h1元素（标题1）和p元素（段落）都归为\"center\"类，这使两个元素的样式都跟随\".center\"这个类选择符：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;h1 class=\"center\"&gt;</p>\n        <p>这个标题是居中排列的</p>\n        <p>&lt;/h1&gt;</p>\n        <p>&lt;p class=\"center\"&gt;</p>\n        <p>这个段落也是居中排列的</p>\n        <p>&lt;/p&gt;</p>\n    </div>\n</div>\n<div>注意：这种省略 HTML 标记的类选择符是我们经后最常用的 CSS 方法，使用这种方法，我们可以很方便的在任意元素上套用预先定义好的类样式。\n    <br>\n    <br>4. ID选择符\n    <br>\n    <br>在HTML页面中ID参数指定了某个单一元素，ID选择符是用来对这个单一元素定义单独的样式。ID选择符的应用和类选择符类似，只要把CLASS换成ID即可。将上例中类用ID替代：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;p id=\"intro\"&gt;</p>\n        <p>这个段落向右对齐</p>\n        <p>&lt;/p&gt;</p>\n    </div>\n</div>\n<div>定义ID选择符要在ID名称前加上一个<code>#</code>号。和类选择符相同，定义ID选择符的属性也有两种方法。下面这个例子，ID属性将匹配所有<code>id=\"intro\"</code>的元素：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#intro</p>\n        <p>{font-size:110%;</p>\n        <p>font-weight:bold;</p>\n        <p>color:#0000ff;</p>\n        <p>background-color:transparent; }</p>\n    </div>\n</div>\n<div>（字体尺寸为默认尺寸的110%；粗体；蓝色；背景颜色透明）</div>\n<div>\n    <br>下面这个例子，ID属性只匹配 <code>id=\"intro\"</code>的段落元素：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p#intro</p>\n        <p>{font-size:110%;</p>\n        <p>font-weight:bold;</p>\n        <p>color:#0000ff;</p>\n        <p>background-color:transparent; }</p>\n    </div>\n</div>\n<div>\n    <div>\n        <div style=\"text-align: center;\">\n            <br>\n        </div>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101146313224.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"css\">\n        </div>\n        <br>\n    </div>5. 包含选择符\n    <br>\n    <br>可以单独对某种元素包含关系定义的样式表，元素1里包含元素2，这种方式只对在元素1里的元素2定义，对单独的元素1或元素2无定义，例如：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>table a</p>\n        <p>{font-size: 12px;}</p>\n    </div>\n</div>\n<div>在表格内的链接改变了样式，文字大小为12象素，而表格外的链接的文字仍为默认大小。\n    <br>\n    <br>6. 样式表的层叠性\n    <br>\n    <br>层叠性就是继承性，样式表的继承规则是外部的元素样式会保留下来继承给这个元素所包含的其他元素。事实上，所有在元素中嵌套的元素都会继承外层元素指定的属性值，有时会把很多层嵌套的样式叠加在一起，除非另外更改。例如在DIV标记中嵌套P标记：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div { color: red; font-size:9pt;}</p>\n        <p>……</p>\n        <p>&lt;div&gt;</p>\n        <p>&lt;p&gt;</p>\n        <p>这个段落的文字为红色9号字</p>\n        <p>&lt;/p&gt;</p>\n        <p>&lt;/div&gt;</p>\n    </div>\n</div>\n<div>（P元素里的内容会继承DIV定义的属性）</div>\n<div>\n    <br>注意：有些情况下内部选择符不继承周围选择符的值，但理论上这些都是特殊的。例如，上边界属性值是不会继承的，直觉上，一个段落不会同文档BODY一样的上边界值。\n    <br>\n    <br>另外，当样式表继承遇到冲突时，总是以最后定义的样式为准。如果上例中定义了P的颜色：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div { color: red; font-size:9pt;}</p>\n        <p>p {color: blue;}</p>\n        <p>……</p>\n        <p>&lt;div&gt;</p>\n        <p>&lt;p&gt;</p>\n        <p>这个段落的文字为蓝色9号字</p>\n        <p>&lt;/p&gt;</p>\n        <p>&lt;/div&gt;</p>\n    </div>\n</div>\n<div>我们可以看到段落里的文字大小为9号字是继承 div 属性的，而 color 属性则依照最后定义的。\n    <br>\n    <br>不同的选择符定义相同的元素时，要考虑到不同的选择符之间的优先级。ID选择符，类选择符和HTML标记选择符，因为 ID 选择符是最后加上元素上的，所以优先级最高，其次是类选择符。如果想超越这三者之间的关系，可以用<code> !important </code>提升样式表的优先权，例如：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p { color: #FF0000!important; }</p>\n        <p>.blue { color: #0000FF;}</p>\n        <p>#id1 { color: #FFFF00;}</p>\n    </div>\n</div>\n<div>我们同时对页面中的一个段落加上这三种样式，它最后会依照被 <code>!important</code> 申明的HTML标记选择符样式为红色文字。如果去掉 <code>!important</code>，则依照优先权最高的ID选择符为黄色文字。\n    <br>\n    <br>7. 注释\n    <br>\n    <br>你可以在CSS中插入注释来说明你代码的意思，注释有利于你或别人以后编辑和更改代码时理解代码的含义。在浏览器中，注释是不显示的。CSS注释以<code>/*</code> 开头，以<code>*/</code> 结尾，如下：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>/* 定义段落样式表 */</p>\n        <p>p</p>\n        <p>{</p>\n        <p>text-align: center; /* 文本居中排列 */</p>\n        <p>color: black; /* 文字为黑色 */</p>\n        <p>font-family: arial; /* 字体为arial */</p>\n        <p>}</p>\n    </div>\n</div>\n<div>\n    <hr>\n     <h2>div+css是什么</h2>\n\n</div>\n<div>一句话解释：div 是框架，css 是样式，用来装饰框架。JS 让它们动起来。再说详细点，div就是给整个网页布局，css 就是负责控制div的样式，想让 div 在哪里怎么显示，都可以通过 css 来实现，简单的说网页布局就像盖房子，div 负责把这栋房子盖起来，而 css 负责告诉他怎么盖！\n    <br>\n</div>\n<div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161110/201611101144196962.jpg\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"table\">\n    </div>\n</div>\n <h2>div是什么</h2>\n\n<div>1、DIV是html其中一个常用标签，如span、table、h1等之类标签</div>\n<div>\n    <br>2、在HTML中DIV标签我们用的最多，具有代表性</div>\n<div>\n    <br>3、div配合css类，布局出网页\n    <br>\n</div>\n<div>\n    <br>\n</div>\n <h2>div语法</h2>\n\n<div>&lt;div&gt;内容&lt;/div&gt;\n    <br>&lt;div class=\"divcss5\"&gt;内容&lt;/div&gt;\n    <br>&lt;div id=\"divcss5\"&gt;内容&lt;/div&gt;\n    <br>\n</div>\n <h2><span>为什么用div+css取代〈table〉</span></h2>\n\n<div><span style=\"font-size: 13px; line-height: 1.7;\">很久很久以前，web 工程师通过 table 进行页面布局（现在Google 的 picasa 等应用还能找到table布局应用的例子），现在页面布局大都推荐 div+css 方式。 </span>\n\n    <br>\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br></span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">在WEB前端开发中,HTML,CSS,JS 这三家三驾马车分别代表着结构，展示，和交互。在 web1.0的时代，页面的逻辑并不是特别复杂，对用户体验的要求也不是很高，table被大量开发者用来做布局元素，横跨结构和展示两个部分，是很“重”的。</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br>但是在如今 web 前端逻辑越来越复杂，用户体验要求越来越高的情况下，对这三者的解耦是必须的。此时再用 table 拿来做布局就不太合适了，因为 table 标签的语言根本不是用来做布局的，而是用来传递数据的。而 div+css 是符合解耦这一思想的，div 用来控制布局，css 用来控制样式。好处从小了说是整个页面的代码组织结构更合理，耦合度更低，从大了说是更利于前端开发的深度分工和复杂合作。<br></span>\n\n</div>\n<div>\n    <br>\n</div>\n<div>所谓的 div+css 是指通过 css 控制 div 的布局。其实这儿 div 可以理解为统称，实际应用的不仅是div，还有p，span，img，table 等任意节点的定位都可以通过 css 来控制。 </div>\n<div>\n    <br>\n</div>\n<div>简要对比一下： </div>\n<div>\n    <br>1、div+css 相对于 table 更为灵活，用 table 布局，代码臃肿。 </div>\n<div>\n    <br>2、语义性问题。从语义上来说，table 应该只是表格数据的容器，不应该是布局的工具。 </div>\n<div>\n    <br>3、样式渲染问题。table 布局要等内容全部加载完毕后才渲染样式，如果用户网速不好，这样用户体验会很差。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n <h2>DIV+CSS布局该怎么学？基本流程及实例介绍</h2>\n\n<div><a href=\"//www.w3cschool.cn/css/css-div.html\" target=\"_blank\">//www.w3cschool.cn/css/css-div.html</a>\n\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 6,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "301abea16bc5d6f66d0fb1a62cbbe314",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "DIV+CSS布局基本流程及实例介绍",
      "chapter_level_two_url": "/css/css-div.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>都说用 DIV+CSS 布局来设计网站便于优化，容易被收录，那么你对 DIV+CSS 布局的用法是否了解？CSS 布局是网页<a href=\"https://www.w3cschool.cn/html/\" target=\"_blank\">html</a>通过 DIV 标签 +CSS 样式表代码开发制作的（html）网页的统称。DIV+CSS 布局是现在非常流行的布局方法，替代了原来的表格布局。下面我们先来看下学习 DIV+CSS 布局的基本步骤：</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091758571121.jpg\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"DIV+CSS\" class=\"\">\n</div>\n<p><span><br></span>\n\n</p>\n<p><span><strong>一、认清学习的要求</strong><br><br>1、弄清目的，首先要认识为什么要学习 CSS？<br>2、心态不能急，如果你很急躁，否则会很快丧失兴趣。<br>3、坚持，这个不是一到两天的事情，是一个漫长的过程（至少两个月）。<br><br><br><strong>二、基础学习</strong><br><br>1、了解 CSS 作用是什么？（即 CSS、html 和 JS 的关系是什么，HTML 结构重要性）<br>2、CSS 基础知识、CSS 属性样式<br>3、HTML<br><br>上面几点，一般都是很快的掌握了，也不需要做到精通，了解大概就可以。<br><br>差不多时候，开始在网上找一些 psd 设计稿，自己做做看，做完之后发现问题，并把他们进行总结。<br><br><br><strong>三、学会分析别人网页布局<br></strong><br>当你做 psd 设计的代码，发现问题，可能找不到答案或没有人帮你回答，也不要急，这时最好看看别人网页的布局结构，主要看 html 布局框架，进行借鉴（当然网上还有很多结构代码很槽糕）。然后了解美工图如何分析、如何使用 PS 工具切出需要的素材、如何使用这些切出的图片素材进行布局、布局技巧、兼容性解决与避免等。<br><br>总之：就是让自己布局时候能知道大的布局结构如何布局，建立布局思想与技巧。<br><br><br><strong>四、代码的规范</strong><br><br>当你看完<span>很多</span>别人的网页代码之后，你会发现，他们都有规范，这些规范网上有很多，你需要总结和背诵，当然不是死记硬背，主要在切图上多做多实践，熟了就能记住。\n    <br>\n    <br>\n    <br><strong>五、大量练习</strong>\n\n    <br>\n    <br>练习是从始到终的，不要断，即使找一些简单的网页进行布局实践，开始可能开发很慢，会遇到很多小问题，也不急。\n    <br>\n    </span>\n</p>\n<hr>\n\n<h2><strong>制作DIV CSS网页前思考布局：</strong><br><br></h2>\n\n<div><span>首先我们拿到一张网页美工图片我们将从上下、上中下、左右、上中（中包括左右）下布局框架来思考。</span>\n\n</div>\n<div>\n    <br>\n</div>\n<div><span>下面通过一个实例讲解下 CSS 布局分析，我们以 DIV CSS5 列表页面分析 CSS 布局：</span>\n\n</div>\n<div>\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/image/20161109/1478684038880091.jpg\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"制作DIV CSS网页前思考布局\">\n    </div>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\">首先我们可以分析出我们 DIV CSS 布局重构此页面结构框架，我们可以看出是上、中、下结构，其中又包括了左右结构。\n        <br>\n        <br>由此我们就要写此页面 CSS 和 html 时候就先从上到下从外到内原则写 CSS 与 html。\n        <br>\n        <br>我们首先建一个 web 的文件夹并在此文件夹里新建 html 页面命名为 index.html，CSS 文件命名为index.css。这里有个诀窍就是可以导入模板方式来建 CSS 与 html 初始页面，然后将 CSS 文件引用到 html，再在 CSS 模板的基础上再写再添加 CSS。\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <br>\n    </div>\n    <div style=\"text-align: left;\">以下是 index.html 的 html 代码：\n        <br>\n    </div><span>以下为引用的内容：</span>\n\n    <br>\n</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;div id=\"header\"&gt;我是头部（上）&lt;/div&gt; </p>\n        <p>&lt;div id=\"centers\"&gt; </p>\n        <p>    &lt;div class=\"c_left\"&gt;我是中的左&lt;/div&gt; </p>\n        <p>    &lt;div class=\"c_right\"&gt;我是中的右&lt;/div&gt; </p>\n        <p>    &lt;div class=\"clear\"&gt; &lt;/div&gt; </p>\n        <p>&lt;/div&gt; </p>\n        <p>&lt;div id=\"footer\"&gt;我是底部（下）&lt;/div&gt; </p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_lay_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<div>\n    <br>\n</div>\n<div><span>index.css 的CSS代码如下：</span>\n\n    <br><span>以下为引用的内容：</span>\n\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>body,div,address,blockquote,iframe,ul,ol,dl,dt,dd,li,dl,h1,h2,h3,h4,h5,h6,p,pre,table,  </p>\n    <p>caption,th,td,form,legend,fieldset,input,button,select,textarea{margin:0;padding:0;  </p>\n    <p>font-weight:normal;font-style:normal;font-size:100%;font-family:inherit;}  </p>\n    <p>ol,ul,li{list-style:none;}  </p>\n    <p>img{border:0;}  </p>\n    <p>body{color:#000;background:#FFF;text-align:center;font:12px/1.5Arial,Helvetica,sans-serif;}  </p>\n    <p>.clearfix:after{clear:both;content:\".\";display:block;height:0pt;visibility:hidden;overflow:hidden;}  </p>\n    <p>.clear{clear:both;height:1px;margin-top:-1px;width:100%;}  </p>\n    <p>.dis{display:block;}  </p>\n    <p>.undis{display:none;}  </p>\n    <p>/*此上面代码是初始CSS模板，下面是新写CSS布局框架代码*/  </p>\n    <p>#header,#centers,#footer{width:100%;margin:0auto;  </p>\n    <p>clear:both;font-size:18px;line-height:68px;font-weight:bold;}  </p>\n    <p>#header{height:68px;border:1px solid #CCCCCC;}  </p>\n    <p>#centers{padding:8px0;}  </p>\n    <p>#footer{border-top:1px solid #CCCCCC;background:#F2F2F2;}  </p>\n    <p>#centers.c_left{float:left;width:230px;border:1px solid #00CC66;  </p>\n    <p>background:#F7F7F7;margin-right:5px;}  </p>\n    <p>#centers.c_right{float:right;width:500px;border:1px solid #00CC66;background:#F7F7F7}  </p>\n    </div>\n</div>\n<div><span>你可以考出此两段代码新建个试试。</span>\n\n    <br>\n</div>\n<div><span><span></span></span>\n    <hr>\n     <h2><span><span><span>按以下步骤来建设一个网站的页面:</span></span></span></h2><span><span>1、顶部部分，其中包括了LOGO、MENU和一幅Banner图片；</span></span>\n</div>\n<div><span><span><br>2、页面中间部分，那就是我们的主体了，要求打开首页快速，所以我们在网站发布的信息设计为三列。</span></span>\n</div>\n<div><span><span><br>3、底部，包括一些版权信息。</span></span>\n</div>\n<div><span><span><br>根据以上设想，我们定义如下 div 的结构<br><br></span></span>\n</div>\n<div><span><span>DIV结构如下：<br>　　<br>│body {}　/*这是一个HTML元素*/<br>　　<br>└#Container {}　/*页面层容器*/<br>　　　　　<br>├#Header {}　/*页面头部*/<br>　　　　　<br>├#MianBody {}　/*页面主体*/<br>　　　　　<br>│　├#mainbody-left {}　/*主体页面左边*/<br>　　　　　<br>│　└#mainbody-center {}　/*主体页面中间*/<br>│　└#MainBody -right{}　/*主体页面右边*/<br>　<br>└#footer {}　/*页面底部*/<br><br><br>用 DIV+CSS 做一个导航栏是非常容易的，而且我们可以通过</span></span> CSS <span><span>来对导航栏的样式方便的作出调整。用div设置导航栏一般就用&lt;ul&gt;和&lt;li&gt;标签。<br><br>4、高度显示效果不同<br>一般情况下只需要使用 height: 100px; 即可，当显示效果不同时，则可以 _height: 100px; 来对 IE6 的高度进行设置。<br><br>5、嵌套效果不同.<br>有些情况下如果 div 中嵌套的图片大于外层 div 的高度，则 IE6 中对高度的设置始终无效，这时要注意对该css添加 overflow 属性，overloaw:hidden,则可隐藏超出边界的部分。<br></span></span>\n</div>\n<div><span><span></span></span>\n    <hr>\n     <h2><span><span>DIV+CSS网页布局常用的一些基础知识整理</span></span></h2>\n\n</div>\n<div><span><span><br></span></span>\n</div>\n<div><span><span></span></span>\n    <p><strong>一．文件命名规范</strong>\n\n    </p>\n    <p>全局样式：global.css；\n        <br>框架布局：layout.css；\n        <br>字体样式：font.css；\n        <br>链接样式：link.css；\n        <br>打印样式：print.css；\n        <br>\n        <br><strong>二．常用类/ID命名规范</strong>\n\n    </p>\n    <p>页　眉：header\n        <br>内　容：content\n        <br>容　器：container\n        <br>页　脚：footer\n        <br>版　权：copyright　\n        <br>导　航：menu\n        <br>主导航：mainMenu\n        <br>子导航：subMenu\n        <br>标　志：logo\n        <br>标　语：banner\n        <br>标　题：title\n        <br>侧边栏：sidebar\n        <br>图　标：Icon\n        <br>注　释：note\n        <br>搜　索：search\n        <br>按　钮：btn\n        <br>登　录：login\n        <br>链　接：link\n        <br>信息框：manage\n        <br>……\n        <br>\n        <br>常用类的命名应尽量以常见英文单词为准，做到通俗易懂，并在适当的地方加以注释。对于二级类/ID命名，则采用组合书写的模式，后一个单词的首字母应大写：诸如“搜索框”则应命名为“searchInput”、“搜索图标”命名这“searchIcon”、“搜索按钮”命名为“searchBtn“等等。\n        <br>\n    </p>\n    <div style=\"text-align: center;\">\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091801032284.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"CSS书写规范\">\n    </div>\n     <h2>CSS书写规范及方法</h2>\n\n    <br><strong>一. 常规书写规范及方法</strong>\n\n    <br>\n    <br>1. 选择 DOCTYPE：\n    <br>\n    <br>XHTML 1.0 提供了三种<a href=\"https://www.w3cschool.cn/dtd/dtd-intro.html\" target=\"_blank\">DTD声明</a>可供选择：\n    <br>\n    <br>过渡的(Transitional):要求非常宽松的 DTD，它允许你继续使用 HTML4.01 的标识(但是要符合 xhtml 的写法)。完整代码如下：\n    <div>\n        <div>\n            <br>\n        </div>\n        <div>XML/HTML代码</div>\n    </div>\n    <div>\n        <p>严格的(Strict):要求严格的 DTD，你不能使用任何表现层的标识和属性，例如&lt;br&gt;。完整代码如下：</p>\n        <div>\n            <div>\n                <br>\n            </div>\n            <div>XML/HTML 代码</div>\n        </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n            <p>&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd“&gt;  </p>\n          </div>\n</div>\n        <div>\n            <p>框架的(Frameset):专门针对框架页面设计使用的 DTD，如果你的页面中包含有框架，需要采用这种 DTD。完整代码如下：</p>\n            <p>\n                <br>\n            </p>\n            <div>\n                <div>XML/HTML代码</div>\n            </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n                <p>&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Frameset//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd“&gt; </p>\n              </div>\n</div>\n        </div><span>理想情况当然是严格的 DTD，但对于我们大多数刚接触 web 标准的设计师来说，过渡的DTD(XHTML 1.0 Transitional)是目前理想选择(包括本站，使用的也是过渡型DTD)。因为这种 DTD 还允许我们使用表现层的标识、元素和属性，也比较容易通过 W3C 的代码校验。</span>\n\n        <br>\n        <br>\n    </div>\n    <div>\n        <br>\n    </div>2. 指定语言及字符集：\n    <br>\n    <br>为文档指定语言： XML/HTML代码\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;html xmlns=”http://www.w3.org/1999/xhtml” lang=”en”&gt;  </p>\n    </div>\n</div>\n<div>\n    <p>为了被浏览器正确解释和通过W3C代码校验，所有的XHTML文档都必须声明它们所使用的编码语言；</p>\n    <p>如常用的语言定义：</p>\n    <p>\n        <br>\n    </p>\n    <div>\n        <div>XML/HTML代码</div>\n    </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;meta http-equiv=”Content-Type” content=”text/html; charset=utf-8″ /&gt;  </p>\n      </div>\n</div>\n    <p>标准的XML文档语言定义：</p>\n    <p>\n        <br>\n    </p>\n    <div>\n        <div>XML/HTML代码</div>\n    </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;?xml version=”1.0″ encoding=” utf-8″?&gt;  </p>\n      </div>\n</div>\n    <p>针对老版本的浏览器的语言定义：</p>\n    <p>\n        <br>\n    </p>\n    <div>\n        <div>XML/HTML代码</div>\n    </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;meta http-equiv=”Content-Language” content=” utf-8″ /&gt;  </p>\n     </div>\n</div>\n</div>\n<div><span><span></span></span>\n    <p>为提高字符集，建议采用“utf-8”。\n        <br>\n        <br>\n        <br>\n    </p>\n    <p>3. 调用样式表：\n        <br>\n        <br>外部样式表调用：\n        <br>\n        <br>页面内嵌法：就是将样式表直接写在页面代码的 head 区。 如：</p>\n    <div>\n        <div>\n            <br>\n        </div>\n        <div>XML/HTML代码</div>\n    </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;style type=”text/css”&gt;&lt;!– body { background : white ; color : black ; } –&gt; &lt;/style&gt;  </p>\n      </div>\n</div>\n    <div>\n        <p>外部调用法：将样式表写在一个独立的 .css 文件中，然后在页面 head 区用类似以下代码调用。</p>\n        <div>\n            <div>\n                <br>\n            </div>\n            <div>XML/HTML代码</div>\n        </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n            <p>&lt;link rel=”stylesheet” rev=”stylesheet” href=”css/style.css” type=”text/css” media=”all” /&gt;  </p>\n          </div>\n</div>\n        <div>\n            <p>在符合 web 标准的设计中，推荐使用外部调用法，可以不修改页面只修改.css文件而改变页面的样式。如果所有页面都调用同一个样式表文件，那么改一个样式表文件，可以改变所有文件的样式。\n                <br>\n                <br>\n                <br>4、选用恰当的元素：\n                <br>\n                <br>根据文档的结构来选择 HTML 元素，而不是根据HTML元素的样式来选择。例如，使用P元素来包含文字段落，而不是为了换行。如果在创建文档时找不到适当的元素，则可以考虑使用通用的 div 或者是 span；\n                <br>\n                <br>避免过渡使用 div 和 span。少量、适当的使用 div 和 span 元素可以使文档的结构更加清晰合理并且易于使用样式；\n                <br>\n                <br>尽可能少地使用标签和结构嵌套，这样不但可以使文档结构清晰，同时也可以保持文件的小巧，在提高用户下载速度的同时，也易于浏览器对文档的解释及呈视；\n                <br>\n                <br>\n                <br>5、派生选择器：\n                <br>\n                <br>可以使用派生选择器给一个元素里的子元素定义样式，在简化命名的同时也使结构更加的清晰化，如：</p>\n            <div>\n                <div>\n                    <br>\n                </div>\n                <div>XML/HTML代码</div>\n            </div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n                <p>.mainMenu ul li {background:url(images/bg.gif;)}  </p>\n            </div>\n</div>\n        </div>\n        <div>\n            <br>\n        </div>\n        <div><span>6、辅助图片用背影图处理：</span>\n\n        </div>\n        <div>\n            <p>这里的”辅助图片”是指那些不是作为页面要表达的内容的一部分，而仅仅用于修饰、间隔、提醒的图片。将其做背影图处理，可以在不改动页面的情况下通过CSS样式来进行改动，如：</p>\n            <p>\n                <br>\n            </p>\n            <div>\n                <div>XML/HTML代码</div>\n            </div>\n            <div>\n     <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>#logo {background:url(images/logo.jpg) #FEFEFE no-repeat right bottom;}  </p>\n                    </div>\n</div>\n                <p>\n                    <br>\n                </p>\n                <p>\n                    <br>\n                </p>\n                <p>7、结构与样式分离：\n                    <br>\n                    <br>在页面里只写入文档的结构，而将样式写于css文件中，通过外部调用CSS样式表来实现结构与样式的分离。\n                    <br>\n                    <br>\n                    <br>\n                    <br>8、文档的结构化书写：\n                    <br>\n                    <br>页面CSS文档都应采用结构化的书写方式，逻辑清晰易于阅读。如：</p>\n                <div>\n                    <div>\n                        <br>\n                    </div>\n                    <div>XML/HTML代码</div>\n                </div>\n                <div class=\"example\">\n                     <h2 class=\"example\">实例</h2> \n                    <div class=\"example_code notranslate\">\n                        <p>#mainMenu {   </p>\n                        <p>width:100%;   </p>\n                        <p>height:30px;   </p>\n                        <p>background:url(images/mainMenu_bg.jpg) repeat-x;   }   </p>\n                        <p>#mainMenu ul li {   </p>\n                        <p>float:left;   </p>\n                        <p>line-height:30px;   </p>\n                        <p>margin-right:1px;   </p>\n                        <p>cursor:pointer;   } </p>\n                    </div>\n                    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_lay_2\" class=\"tryitbtn\">尝试一下 »</a>\n                </div>\n                <div>\n                    <p>\n                        <br>\n                    </p>\n                    <p>9、鼠标手势：\n                        <br>\n                        <br>在XHTML标准中，hand只被IE识别，当需要将鼠标手势转换为“手形”时，则将“hand”换为“pointer”，即“cursor:pointer;”\n                        <br>\n                        <br>\n                        <br><strong>二．注释书写规范<br></strong>\n\n                        <br>1、行间注释：\n                        <br>\n                        <br>直接写于属性值后面，如：</p>\n                    <p>\n                        <br>\n                    </p>\n                    <div>\n                        <div>XML/HTML代码</div>\n                    </div>\n                    <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>.search{   </p>\n                        <p>border:1px solid #fff;/*定义搜索输入框边框*/   </p>\n                        <p>background:url(../images/icon.gif) no-report #333;/*定义搜索框的背景*/   </p>\n                        <p>}  </p>\n                    </div>\n</div>\n                    <p>\n                        <br>\n                    </p>\n                    <p>\n                        <br>\n                    </p>\n                    <p>2、整段注释：\n                        <br>\n                        <br>分别在开始及结束地方加入注释，如：</p>\n                    <p>\n                        <br>\n                    </p>\n                    <div>\n                        <div>XML/HTML代码</div>\n                    </div>\n               <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>/*=====搜索条=====*/   </p>\n                        <p>.search {   </p>\n                        <p>border:1px solid #fff;   </p>\n                        <p>background:url(../images/icon.gif) no-repeat #333;   }   </p>\n                        <p>/*=====搜索条结束=====*/  </p>\n                </div>\n</div>\n                    <div style=\"text-align: center;\">\n                        <br>\n                    </div>\n                    <div style=\"text-align: center;\">\n                        <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091804358722.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"css+div样式属性\">\n                    </div>\n                </div>\n                <div style=\"text-align: center;\">\n                    <br>\n                </div>\n                <div>\n                    <br>\n                </div>\n                <p><strong>三．样式属性代码缩写</strong>\n\n                    <br>\n                    <br>1、不同类有相同属性及属性值的缩写：\n                    <br>\n                    <br>对于两个不同的类，但是其中有部分相同甚至是全部相同的属性及属性值时，应对其加以合并缩写，特别是当有多个不同的类而有相同的属性及属性值时，合并缩写可以减少代码量并易于控制。如：</p>\n                <p>\n                    <br>\n                </p>\n                <div>\n                    <div>XML/HTML代码</div>\n                </div>\n                <div>\n                   <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>#mainMenu {   </p>\n                        <p>background:url(../images/bg.gif);   </p>\n                        <p>border:1px solid #333;   </p>\n                        <p>width:100%;   </p>\n                        <p>height:30px;   </p>\n                        <p>overflow:hidden;   </p>\n                        <p>}   </p>\n                        <p>#subMenu {   </p>\n                        <p>background:url(../images/bg.gif);   </p>\n                        <p>border:1px solid #333;   </p>\n                        <p>width:100%;   </p>\n                        <p>height:20px;   </p>\n                        <p>overflow:hidden;   </p>\n                        <p>}  </p>\n               </div>\n</div>\n                    <br>\n                </div>\n                <p>两个不同类的属性值有重复之处，刚可以缩写为：</p>\n                <div>\n                    <div>\n                        <br>\n                    </div>\n                    <div>XML/HTML代码</div>\n                </div>\n                <div>\n               <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>#mainMenu,#subMenu {   </p>\n                        <p>background:url(../images/bg.gif);   </p>\n                        <p>border:1px solid #333;   </p>\n                        <p>width:100%;   </p>\n                        <p>overflow:hidden;   </p>\n                        <p>}   </p>\n                        <p>#mainMenu {height:30px;}   </p>\n                        <p>#subMenu {height:20px;}  </p>\n                     </div>\n</div>\n                    <br>\n                </div>\n                <div>\n                    <br>\n                </div>\n                <p>2、同一属性的缩写：\n                    <br>\n                    <br>同一属性根据它的属性值也可以进行简写，如：</p>\n                <p>\n                    <br>\n                </p>\n                <div>\n                    <div>XML/HTML代码</div>\n                </div>\n         <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>.search {   </p>\n                    <p>background-color:#333;   </p>\n                    <p>background-image:url(../images/icon.gif);   </p>\n                    <p>background-repeat: no-repeat;   </p>\n                    <p>background-position:50% 50%;   </p>\n                    <p>}   </p>\n                    <p>.search {   </p>\n                    <p>background:#333 url(../images/icon.gif) no-repeat 50% 50%;   </p>\n                    <p>}  </p>\n                  </div>\n</div>\n                <br>\n            </div>\n            <div>\n                <br>\n            </div><span>3、内外侧边框的缩写：</span>\n\n            <br>\n            <br>\n            <p>在CSS中关于内外侧边框的距离是按照上、右、下、左的顺序来排列的，当这四个属性值不同时也可直接缩写，如：</p>\n            <p>\n                <br>\n            </p>\n            <div>\n                <div>XML/HTML代码</div>\n            </div>\n            <div>\n         <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>.btn {   </p>\n                    <p>margin-top:10px;   </p>\n                    <p>margin-right:8px;   </p>\n                    <p>margin-bottom:12px;   </p>\n                    <p>margin-left:5px;   </p>\n                    <p>padding-top:10px;   </p>\n                    <p>padding-right:8px;   </p>\n                    <p>padding-bottom:12px;   </p>\n                    <p>padding-left:8px;   </p>\n                    <p>}  </p>\n              </div>\n</div>\n                <p>则可缩写为：</p>\n                <p>\n                    <br>\n                </p>\n                <div>\n                    <div>XML/HTML代码</div>\n                </div>\n                <div>\n            <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>.btn {   </p>\n                        <p>Margin:10px 8px 12px 5px;   </p>\n                        <p>Padding:10px 8px 12px 5px;   </p>\n                        <p>}  </p>\n                   </div>\n</div>\n                </div>\n                <div>\n                    <p>而如果当上边与下边、左边与右边的边框属性值相同时，则属性值可以直接缩写为两个，如：</p>\n                    <p>\n                        <br>\n                    </p>\n         <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>.btn {   </p>\n                        <p>margin-top:10px;   </p>\n                        <p>margin-right:5px;   </p>\n                        <p>margin-bottom:10px;   </p>\n                        <p>margin-left:5px;   </p>\n                        <p>} </p>\n                     </div>\n</div>\n                    <div>\n                        <div>XML/HTML代码</div>\n                    </div>\n                    <div>\n                        <p>缩写为：</p>\n                        <p>\n                            <br>\n                        </p>\n                        <div>\n                            <div>XML/HTML代码</div>\n                        </div>\n           <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                            <p>.btn {margin:10px 5px;}  </p>\n                        </div>\n</div>\n                        <div>\n                            <p>而当上下左右四个边框的属性值都相同时，则可以直接缩写成一个，如：</p>\n                            <div>\n                                <div>\n                                    <br>\n                                </div>\n                                <div>XML/HTML代码</div>\n                            </div>\n                 <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                <p>.btn {   </p>\n                                <p>margin-top:10px;   </p>\n                                <p>margin-right:10px;   </p>\n                                <p>margin-bottom:10px;   </p>\n                                <p>margin-left:10px;   </p>\n                                <p>}  </p>\n                              </div>\n</div>\n                            <div>\n                                <p>缩写为：</p>\n                                <p>\n                                    <br>\n                                </p>\n                                <div>\n                                    <div>XML/HTML代码</div>\n                                </div>\n                              <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                    <p>.btn{margin:10px;}  </p>\n                                </div>\n</div>\n                                <div>\n                                    <br>\n                                </div>\n                                <div>\n                                    <br>\n                                </div>\n                                <div>\n                                    <p>4、颜色值的缩写：\n                                        <br>\n                                        <br>当RGB三个颜色值数值相同时，可缩写颜色值代码。如：</p>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <div>\n                                        <div>XML/HTML代码</div>\n                                    </div>\n                                   <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                        <p>.menu { color:#ff3333;}  </p>\n                                      </div>\n</div>\n                                    <p>可缩写为:</p>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <div>\n                                        <div>XML/HTML代码</div>\n                                    </div>\n                                 <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                        <p>.menu {color:#f33;}  </p>\n                                       </div>\n</div>\n                                    <div>\n                                        <br>\n                                    </div>\n                                    <div><strong><br></strong>\n\n                                    </div><span><strong>四．hack书写规范 </strong></span>\n\n                                    <br>\n                                    <br>\n                                </div><span>因为不同浏览器对W3C标准的支持不一样，各个浏览器对于页面的解释呈视也不尽相同，比如IE在很多情况下就与FF存在3px的差距，对于这些差异性，就需要利用css 的hack来进行调整，当然在没有必要的情况下，最好不要写hack来进行调整，避免因为hack而导致页面出现问题。</span>\n\n                                <br>\n                                <br>\n                            </div>\n                            <p>1、 IE6、IE7、Firefox之间的兼容写法：\n                                <br>\n                                <br>写法一：</p>\n                            <p>\n                                <br>\n                            </p>\n                            <div>\n                                <div>XML/HTML代码</div>\n                            </div>\n                        <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                <p>IE都能识别*;标准浏览器(如FF)不能识别*；   </p>\n                                <p>IE6能识别*，但不能识别 !important,   </p>\n                                <p>IE7能识别*，也能识别!important;   </p>\n                                <p>FF不能识别*，但能识别!important;   </p>\n                                <p>根据上述表达，同一类/ID下的CSS 　hack可写为：   </p>\n                                <p>.searchInput {   </p>\n                                <p>background-color:#333;/*三者皆可*/   </p>\n                                <p>*background-color:#666　!important; /*仅IE7*/   </p>\n                                <p>*background-color:#999; /*仅IE6及IE6以下*/   </p>\n                                <p>}  </p>\n                              </div>\n</div>\n                            <div>\n                                <p>一般三者的书写顺序为：FF、IE7、IE6.</p>\n                                <p>\n                                    <br>\n                                    <br>写法二：\n                                    <br>\n                                    <br>IE6可识别“_”，而IE7及FF皆不能识别，所以当只针对IE6与IE7及FF之间的区别时，可这样书写：</p>\n                                <p>\n                                    <br>\n                                </p>\n                                <div>\n                                    <div>XML/HTML代码</div>\n                                </div>\n                           <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                    <p>.searchInput {   </p>\n                                    <p>background-color:#333;/*通用*/   </p>\n                                    <p>_background-color:#666;/*仅IE6可识别*/   </p>\n                                    <p>}  </p>\n                                  </div>\n</div>\n                                <p>\n                                    <br>\n                                </p>\n                                <p>写法三：</p>\n                                <p>\n                                    <br>\n                                </p>\n                                <div>\n                                    <div>XML/HTML代码</div>\n                                </div>\n                            <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                    <p>*+html 与 *html 是IE特有的标签, Firefox 暂不支持。   </p>\n                                    <p>.searchInput {background-color:#333;}   </p>\n                                    <p>*html .searchInput {background-color:#666;}/*仅IE6*/   </p>\n                                    <p>*+html .searchInput {background-color:#555;}/*仅IE7*/  </p>\n                                    </div>\n</div>\n                                <p>\n                                    <br>\n                                </p>\n                                <p>屏蔽IE浏览器：\n                                    <br>\n                                    <br>select 是选择符，根据情况更换。第二句是 MAC上safari 浏览器独有的。</p>\n                                <div>\n                                    <div>\n                                        <br>\n                                    </div>\n                                    <div>XML/HTML代码</div>\n                                </div>\n                                <div>\n                                <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                        <p>*:lang(zh) select {font:12px  !important;} /*FF的专用*/   </p>\n                                        <p>select:empty {font:12px  !important;} /*safari可见*/  </p>\n                                      </div>\n</div>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <p>IE6可识别：\n                                        <br>\n                                        <br>这里主要是通过CSS注释分开一个属性与值，注释在冒号前。</p>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <div>\n                                        <div>XML/HTML代码</div>\n                                    </div>\n                               <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                        <p>select { display /*IE6不识别*/:none;}</p>\n                                 </div>\n</div>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <p>IE的if条件hack写法：\n                                        <br>\n                                        <br>所有的IE可识别：</p>\n                                    <p>\n                                        <br>\n                                    </p>\n                                    <div>\n                                        <div>XML/HTML代码</div>\n                                    </div>\n                                    <div>\n                                   <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                            <p>&lt;!–[if IE]&gt; Only IE &lt;![end if]–&gt;  </p>\n                                            <p>只有IE5.0可以识别:   </p>\n                                            <p>&lt;!–[if IE 5.0]&gt; Only IE 5.0 &lt;![end if]–&gt;  </p>\n                                            <p>IE5.0包换IE5.5都可以识别:   </p>\n                                            <p>&lt;!–[if gt IE 5.0]&gt; Only IE 5.0+ &lt;![end if]–&gt;  </p>\n                                            <p>仅IE6可识别:   </p>\n                                            <p>&lt;!–[if lt IE 6]&gt; Only IE 6- &lt;![end if]–&gt;  </p>\n                                            <p>IE6以及IE6以下的IE5.x都可识别:   </p>\n                                            <p>&lt;!–[if gte IE 6]&gt; Only IE 6/+ &lt;![end if]–&gt;  </p>\n                                            <p>仅IE7可识别:   </p>\n                                            <p>&lt;!–[if lte IE 7]&gt; Only IE 7/- &lt;![end if]–&gt;  </p>\n                                          </div>\n</div>\n                                        <br>\n                                    </div><span>2、清除浮动：</span>\n\n                                    <br>\n                                    <br>\n                                </div>\n                                <p>在 Firefox 中，当子级都为浮动时，那么父级的高度就无法完全的包住整个子级，那么这时用这个清除浮动的 HACK 来对父级做一次定义，那么就可以解决这个问题。</p>\n                                <p>\n                                    <br>\n                                </p>\n                                <div></div>\n                                <div>\n                                    <div>XML/HTML 代码</div>\n                                </div>\n                              <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                                    <p>select:after {   </p>\n                                    <p>content:”.”;   </p>\n                                    <p>display:block;   </p>\n                                    <p>height:0;   </p>\n                                    <p>clear:both;   </p>\n                                    <p>visibility:hidden;   </p>\n                                    <p>}</p>\n                                </div>\n</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "54e8dac81b44616b942551f5825ab5c9",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 浏览器兼容hack汇总",
      "chapter_level_two_url": "/css/css-hack.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>写 CSS 样式的时候，恐怕最头疼的就是各个浏览器下的兼容性问题，即 CSS hack，不同的浏览器对 CSS 的解析结果是不同的，因此会导致相同的 CSS 输出的页面效果不同，这就需要 CSS <span>hack</span>来解决浏览器局部的兼容性问题。使用 CSS 、 hack将会使用你的 CSS 代码部分失去作用，然后借助条件样式，使用其原 CSS 代码在一些浏览器解析，而 CSS <span>hack</span>代码在符合条件要求的浏览器中替代原 CSS 那部分代码。</p>\n<p> CSS hack除了可以处理与浏览器不兼容的 CSS 代码，也能够让我们通过 CSS hack给不同版本的浏览器定制编写不同的CSS效果。</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091459007919.jpg\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"css hack\" class=\"\">\n</div>\n\n<h2>css hack基本概念</h2>\n\n<div>CSS hack是通过在CSS样式中加入一些特殊的符号，让不同的浏览器识别不同的符号（什么样的浏览器识别什么样的符号是有标准的，CSS hack 就是让你记住这个标准），以达到应用不同的 CSS 样式的目的，比如 .kwstu{width:300px;_width:200px;}，一般浏览器会先给元素使用 width:300px; 的样式，紧接着后面还有个_width:200px; 由于下划线 _width 只有 IE6 可以识别，所以此样式在 IE6 中实际设置对象的宽度为200px，后面的把前面的给覆盖了，而其他浏览器不识别\n    _width 不会执行 _width:200px; 这句样式，所以在其他浏览器中设置对象的宽度就是 300px;\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>简单地讲， CSS hack 指各版本及各品牌浏览器之间对 CSS 解释后出现网页内容的误差(比如我们常说错位)的处理。由于各浏览器的内核不同，所以会造成一些误差就像 JS 一样，一个 JS 网页特效，在微软 IE6、IE7、IE8 浏览器有效果，但可能在火狐（Mozilla Firefox）谷歌浏览器无效，这样就叫做 JS hack ，所以我们对于 CSS 来说他们来解决各浏览器对 CSS 解释不同所采取的区别不同浏览器制作不同的 CSS 样式的设置来解决这些问题就叫作 CSS\n    Hack。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div><strong>CSS Hack常见的有三种形式：</strong>CSS 属性 Hack、CSS 选择符 Hack 以及 IE 条件注释 Hack， Hack 主要针对IE 浏览器。</div>\n<div>\n    <br>1、属性级 Hack：比如 IE6 能识别下划线<code>_</code>和星号<code> * </code>，IE7 能识别星号<code> * </code>，但不能识别下划线<code>_</code>，而 firefox 两个都不能认识。</div>\n<div>\n    <br>2、选择符级 Hack：比如 IE6 能识别 *html .class{}，IE7能识别 *+html .class{} 或者 *:first-child+html .class{}。</div>\n<div>\n    <br>3、IE 条件注释 Hack：IE条件注释是微软从 IE5 开始就提供的一种非标准逻辑语句。比如针对所有IE：&lt;!–[if IE]&gt;&lt;!–您的代码–&gt;&lt;![endif]–&gt;，针对 IE6 及以下版本：&lt;!–[if lt IE 7]&gt;&lt;!–您的代码–&gt;&lt;![endif]–&gt;，这类 Hack 不仅对 CSS 生效，对写在判断语句里面的所有代码都会生效。</div>\n<p>\n    <br>PS：条件注释只有在 IE 浏览器下才能执行，这个代码在非 IE 浏览下被当做注释视而不见。可以通过IE条件注释载入不同的 CSS、JS、HTML 和服务器代码等。</p>\n<p><b>提示：</b>有个 CSS hack 三种常见形式的更多解释，你可以查阅《CSS3学习笔记》的“<a href=\"https://www.w3cschool.cn/lugfe/lugfe-vxfp25zq.html\" target=\"_blank\">CSS hack合集</a>”部分的内容。</p>\n<div>\n    <hr>\n</div>\n\n<h2>各浏览器下 Hack 的写法</h2>\n\n<div><strong>1、Firefox</strong>\n\n    <br>\n    <br>@-moz-document url-prefix() { .selector { property: value; } }\n    <br>上面是仅仅被Firefox浏览器识别的写法，具体如：\n    <br>\n    <br>@-moz-document url-prefix() { .demo { color:lime; } }\n    <br>支持Firefox的还有几种写法：\n    <br>\n    <br>/* 支持所有firefox版本 */ #selector[id=selector] { property: value; } 或者： @-moz-document url-prefix() { .selector { property: value; } } /* 支持所有Gecko内核的浏览器 (包括Firefox) */ *&gt;.selector { property: value; }</div>\n<div>\n    <br><strong>2、Webkit 枘核浏览器(chrome and safari)</strong>\n\n    <br>\n    <br>@media screen and (-webkit-min-device-pixel-ratio:0) { Selector { property: value; } }\n    <br>上面写法主要是针对Webkit内核的浏览器，如Google Chrome 和 Safari浏览器：\n    <br>\n    <br>@media screen and (-webkit-min-device-pixel-ratio:0) { .demo { color: #f36; } }\n    <br>\n    <br>\n</div>\n<div><strong>3、Opera 浏览器</strong>\n\n    <br>\n    <br>html:first-child&gt;body Selector {property:value;} 或者： @media all and (min-width:0) { Selector {property: value;} } 或者： @media all and (-webkit-min-device-pixel-ratio:10000), not all and (-webkit-min-device-pixel-ratio:0) { head~body Selector { property:\n    value; } }\n    <br>\n    <br>\n</div>\n<div>上面则是Opera浏览器的Hack写法：\n    <br>\n    <br>@media all and (-webkit-min-device-pixel-ratio:10000), not all and (-webkit-min-device-pixel-ratio:0) { head~body .demo { background: green; } }\n    <br>\n    <br>\n</div>\n<div><strong>4、IE9浏览器</strong>\n\n    <br>\n    <br>:root Selector {property: value9;}\n    <br>上面是IE9的写法，具体应用如下：\n    <br>\n    <br>:root .demo {color: #ff09;}</div>\n<div>\n    <br><strong>5、IE9以及IE9以下版本</strong>\n\n    <br>\n    <br>Selector {property:value9;}\n    <br>这种写法只有IE9以及IE9以下版本能识别，这里需要注意此处“9”只能是“9”不能是别的，比如说“8”，不然会失去效果的，如：\n    <br>\n    <br>.demo {background: lime9;}</div>\n<div>\n    <br>\n</div>\n<div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091500153370.png\" alt=\"css hack 区分\">\n        <br>\n    </div>\n    <br><strong>6、IE8浏览器</strong>\n\n    <br>\n    <br>@media \\0screen{</div>\n<div>\n    <br>\n</div>\n<div>Selector {property: value;}     }\n    <br>\n</div>\n<div>\n    <p>\n        <br>\n    </p>\n</div>\n<div><strong>7、IE8以及IE8以上的版本</strong>\n\n    <br>\n    <br>Selector {property: value\\0;}\n    <br>这种写法只有IE8以及IE8以上版本支持，如\n    <br>\n    <br>.demo {color: #ff0;}\n    <br>\n    <br>\n</div>\n<div><strong>8、IE7浏览器</strong>\n\n    <br>\n    <br>*+html Selector{property:value;} 或 *:first-child+html Selector {property:value;}\n    <br>上面两种是IE7浏览器下才能识别，如：\n    <br>\n    <br>*+html .demo {background: green;} 或者： *:first-child+html .demo {background: green;}\n    <br>\n    <br>\n</div>\n<div><strong>9、IE7及IE7以下版本浏览器</strong>\n\n    <br>\n    <br>Selector {*property: value;}\n    <br>上面的写法在IE7以及其以下版本都可以识别，如：\n    <br>\n    <br>.demo {*background: red;}</div>\n<p>\n    <br><strong>10、IE6浏览器</strong>\n\n    <br>\n    <br>Selector {_property/**/:/**/value;} 或者： Selector {_property: value;} 或者： *html Selector {property: value;}\n    <br>具体应用如下：\n    <br>\n    <br>.demo {_width/**/:/**/100px;} 或者： .demo {_width: 100px;} 或者： *html .demo {width: 100px;}\n    <br>上面具体介绍了各种版本浏览器下如何识别各种的Hack写法，包括了IE6-9以及现代版本的浏览器写法。综合上面的所述，我们针对不同浏览器的Hack写法主要分为两种从CSS选择器和CSS属性上来区别不同的Hack写法。\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<div>\n    <hr>\n     <h2>慎用\\0的CSS Hack</h2>\n\n</div>\n<div>在 Web 页面制作中尽量不要使用 CSS Hack 来处理兼容问题。因为任何浏览器下出现渲染不一致都极有可能是我们自己的结构或样式不符合 W3C 的某些要求，或者说违背了浏览器的某些规则而造成的，所以我们应该尽量通过结构或 CSS 的修改来达到各浏览器渲染一致效果，除非到了万不得已情况下，才考虑CSS的Hack。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>网上许多与 CSS Hack 相关的文章中说，在 CSs 的属性值和分号之间添加字符 \\0，可以实现对 IE 8 或  IE 9的 CSS hack (有的说，仅支持 IE8)。\n    <br>\n    <br>网上的示例是这样的：\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.css-hack {</p>\n    <p>    color: red; /* 其他浏览器显示红色 */</p>\n    <p>    color: blue\\0; /* IE8、IE9 显示蓝色 */</p>\n    <p>    +color: green; /* IE7 显示绿色 */</p>\n    <p>    _color: brown; /* IE6 显示棕色 */</p>\n    <p>}</p>\n    </div>\n</div>\n<div>通过实际测试发现，关于使用字符 \\0 实现的上述 CSS Hack 有3点需要注意。\n    <br>\n    <br>1、IE10 也能够识别添加了字符 \\0 的 CSS 属性值(笔者这里没有 IE 11，不知道 IE 11 是否也能识别)。\n    <br>\n    <br>2、属性值和 \\0 之间不能有空格，有一个空格的话(例如：blue \\0)，在 IE 8 中就失效了，仅对 IE 9/IE 10有效。\n    <br>\n    <br>3、如果我们只想对 IE 8/IE 9进行CSS Hack 呢？这个时候，我们去掉后面两行与 IE6、IE7 有关的代码。\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.css-hack {</p>\n    <p>    color: red; /* 其他浏览器显示红色 */</p>\n    <p>    color: blue\\0; /* IE8、IE9 显示蓝色 */</p>\n    <p>}</p>\n    </div>\n</div>\n<div>这个时候，在 IE 6、IE 7 浏览器中，你会发现你看到的不是红色，而是黑色(也就是默认的字体颜色)！\n    <br>\n    <br>这是因为一般浏览器的思路是，先过滤掉无效的css属性值，然后再从正确的属性设置中根据优先级获取最后面的css属性值。而 IE 6/7 浏览器不是先过滤掉无效的属性值，而是先根据优先级，获取最后面的 CSS 属性值，然后再来判断该属性值是否，无效就忽略掉。因此，如果按照网上所说，仅仅使用 \\0 来实现 IE 8+ 的 CSS Hack，则会对 IE6/7 中的显示效果造成破坏。你必须通过额外的css属性设置来复原IE6/7的样式。\n    <br>\n    <br>因为，我们不能够简单地下结论说，使用 \\0 可以实现对 IE 8、IE 9 甚至 IE 10 +的 CSS Hack。\n    <br>\n</div>\n<div>\n    <hr>\n     <h2>浏览器识别字符标准对应表</h2>\n\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;!--[if !IE]&gt;&lt;!--&gt; 除IE外都可识别 &lt;!--&lt;![endif]--&gt;</p>\n    <p>&lt;!--[if IE]&gt; 所有的IE可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if IE 6]&gt; 仅IE6可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if lt IE 6]&gt; IE6以及IE6以下版本可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if IE 7]&gt; 仅IE7可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if gte IE 7]&gt; IE7以及IE7以上版本可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if IE 8]&gt; 仅IE8可识别 &lt;![endif]--&gt;</p>\n    <p>&lt;!--[if IE 9]&gt; 仅IE9可识别 &lt;![endif]--&gt;</p>\n    </div>\n</div>\n<p>从上表可以分析出以下几种情况：</p>\n<p>1.大部分特殊字符 IE 浏览器支持，其他主流浏览器 firefox，chrome，opera，safari不支持 (opera 可识别除外)。\n    <br>2. \\9    ：所有 IE 浏览器都支持\n    <br>3. _和-  ：仅 IE6 支持\n    <br>4. *     ：IE6、E7 支持\n    <br>5. \\0    ：IE8、IE9 支持，opera 部分支持\n    <br>6. \\9\\0  ：IE8 部分支持、IE9 支持\n    <br>7. \\0\\9  ：IE8、IE9 支持\n    <br>\n</p>\n<hr>\n\n<h2>css hack兼容技巧</h2>\n\n<div>1, FF下给 div 设置 padding 后会导致 width 和 height 增加, 但 IE 不会.(可用 !important 解决)</div>\n<div>\n    <br>2, 居中问题\n    <br>①.垂直居中.将 line-height 设置为 当前 div 相同的高度, 再通过 vertical-align: middle.( 注意内容不要换行.)\n    <br>②.水平居中. margin: 0 auto;(当然不是万能)</div>\n<div>\n    <br>3, 若需给 a 标签内内容加上样式, 需要设置 display: block;(常见于导航标签)</div>\n<div>\n    <br>4, FF 和 IE 对 BOX 理解的差异导致相差 2px 的还有设为 float的div在ie下 margin加倍等问题</div>\n<div>\n    <br>5, ul 标签在 FF 下面默认有 list-style 和 padding . 最好事先声明, 以避免不必要的麻烦. (常见于导航标签和内容列表)</div>\n<div>\n    <br>6, 作为外部 wrapper 的 div 不要定死高度, 最好还加上 overflow: hidden.以达到高度自适应</div>\n<div>\n    <br>7, 关于手形光标. cursor: pointer. 而hand 只适用于 IE\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div><strong>针对 firefox ie6 ie7 的 css 样式</strong>\n\n</div><span>现在大部分都是用 !important 来 hack，对于 ie6 和 firefox 测试可以正常显示，</span><span>但是 ie7 对 !important 可以正确解释，会导致页面没按要求显示！找到一个针</span><span>对 IE7 不错的 hack 方式就是使用“*+html”，现在用IE7浏览一下，应该没有问题了。</span>\n\n<br><span><br></span>\n\n<p><span>现在写一个CSS可以这样：</span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#1 { color: #333; } /* Moz */</p>\n    <p>* html #1 { color: #666; } /* IE6 */</p>\n    <p>*+html #1 { color: #999; } /* IE7 */</p>\n    </div>\n</div>\n<p>那么在 firefox 下字体颜色显示为#333，IE6 下字体颜色显示为 #666，IE7 下字体颜色显示为#999。</p>\n<p>\n    <br>\n</p>\n<p><strong>CSS 布局中的居中问题</strong>\n\n</p>\n<p><strong><br></strong>\n\n</p>\n<p><span>主要的样式定义如下：</span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>body {TEXT-ALIGN: center;}</p>\n    <p>#center { MARGIN-RIGHT: auto; MARGIN-LEFT: auto; }</p>\n    </div>\n</div>\n<p>说明：</p>\n<br>\n<p>首先在父级元素定义 <code>text-align: center</code>; 这个的意思就是在父级元素内的内容居中；对于 IE 这样设定就已经可以了。</p>\n<br>\n<p>但在 mozilla 中不能居中。解决办法就是在子元素定义时候设定时再加上<code>margin-right: auto;margin-left: auto; </code>\n</p>\n<p>\n    <br>需要说明的是，如果你想用这个方法使整个页面要居中，建议不要套在一个 DIV 里，你可以依次拆出多个div，\n    <br>只要在每个拆出的 div 里定义 <code>margin-right: auto;margin-left: auto; </code>就可以了。\n    <br>\n    <br>\n    <br><strong>盒模型不同解释</strong>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#box{ width:600px; //for ie6.0- w\\idth:500px; //for ff+ie6.0}</p>\n    <p>#box{ width:600px!important //for ff width:600px; //for ff+ie6.0 width /**/:500px; //for ie6.0-}</p>\n    </div>\n</div>\n<p><strong>浮动 IE 产生的双倍距离</strong>\n\n    <br>\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#box{ float:left; width:100px; margin:0 0 0 100px; //这种情况之下IE会产生200px的距离 <code>display:inline;</code> //使浮动忽略}</p>\n    </div>\n</div>\n<p>这里细说一下 <code>block</code>,<code>inline</code> 两个元素,<code>Block</code> 元素的特点是:总是在新行上开始,高度,宽度,行高,边距都可以控制(块元素);<code>Inline</code>元素的特点是:和其他元素在同一行上,…不可控制(内嵌元素);</p>\n<br>\n<p>#box{ display:block; //可以为内嵌元素模拟为块元素 display:inline; //实现同一行排列的的效果 diplay:table;</p>\n<br>\n<br>\n<p>IE 不认得 min-这个定义，但实际上它把正常的 <code>width</code> 和 <code>height </code>当作有 <code>min</code> 的情况来使。这样问题就大了，如果只用宽度和高度，正常的浏览器里这两个值就不会变，如果只用 <code>min-width</code> 和 <code>min-height</code> 的话，IE下面根本等于没有设置宽度和高度。比如要设置背景图片，这个宽度是比较重要的。要解决这个问题，可以这样：</p>\n<br>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#box{ width: 80px; height: 35px;}html&gt;body #box{ width: auto; height: auto; min-width: 80px; min-height: 35px;}</p>\n    </div>\n</div>\n<br>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091503383247.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"css\">\n</div>\n<br><span><strong>页面的最小宽度</strong></span>\n\n<p><span><br></span>\n\n</p>\n<p><span><code>min-width</code> 是个非常方便的 CSS 命令，它可以指定元素最小也不能小于某个宽度，这样就能保证排版一直正确。但 IE 不认得这个，</span><span>而它实际上把 <code>width</code> 当做最小宽度来使。为了让这一命令在 IE 上也能用，可以把一个<code>&lt;div&gt;</code> 放到 <code>&lt;body&gt;</code> 标签下，然后为 div 指定一个类：</span>\n\n</p>\n<p>\n    <br><span>然后 CSS 这样设计：</span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#container{ min-width: 600px; width:expression(document.body.clientWidth &lt; 600? “600px”: “auto” );}</p>\n    </div>\n</div>\n<p>第一个<code>min-width</code>是正常的；但第2行的 <code>width</code> 使用了 JavaScript，这只有IE才认得，这也会让你的 HTML 文档不太正规。它实际上通过 Javascript 的判断来实现最小宽度。</p>\n<p>\n    <br>\n</p>\n<p><span><strong>清除浮动</strong></span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.hackbox{ display:table; //将对象作为块元素级的表格显示}或者.hackbox{ clear:both;}</p>\n    </div>\n</div>\n<p>或者加入 <code>:after</code>（伪对象）,设置在对象后发生的内容，通常和 <code>content</code> 配合使用，IE 不支持此伪对象，非 IE 浏览器支持，</p>\n<p>所以并不影响到 IE/WIN 浏览器。这种的最麻烦的……</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>#box:after{ content: “.”; display: block; height: 0; clear: both; visibility: hidden;}</p>\n    </div>\n</div>\n<br><strong>属性选择器(这个不能算是兼容,是隐藏 CSS 的一个bug)</strong>\n\n<p>\n    <br>p[id]{}div[id]{}\n    <br>这个对于IE6.0和IE6.0以下的版本都隐藏,FF和OPera作用属性选择器和子选择器还是有区别的,子选择器的范围从形式来说缩小了,属性选择器的范围比较大,如<code>p[id]</code>中,所有<code>p</code>标签中有<code>id</code>的都是同样式的。\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<p><strong>IE捉迷藏的问题</strong>\n\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<p>当div应用复杂的时候每个栏中又有一些链接，DIV等这个时候容易发生捉迷藏的问题。有些内容显示不出来，当鼠标选择这个区域是发现内容确实在页面。</p>\n<p>\n    <br>解决办法：对<code>#layout</code>使用<code>line-height</code>属性 或者给<code>#layout</code>使用固定高和宽。页面结构尽量简单。\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<p>\n    <br>\n</p>\n<p><span><strong>高度不适应</strong></span>\n\n</p>\n<p>\n    <br>\n</p>\n<p>高度不适应是当内层对象的高度发生变化时外层高度不能自动进行调节，特别是当内层对象使用\n    <br><code>margin</code> 或 <code>paddign</code> 时。\n    <br>\n    <br>\n</p>\n<p>例：\n    <br>\n</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>#box {background-color:#eee; }</p>\n        <p>#box p {margin-top: 20px;margin-bottom: 20px; text-align:center; }</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_hack_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<p>解决方法：在 P 对象上下各加 2个空的 div 对象 CSS 代码：.1{height:0px;overflow:hidden;}或者为 DIV 加上 border 属性。</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b14db09dc494edc0bcb8738d1ea7d33f",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 透明度设置方法及常见问题解析",
      "chapter_level_two_url": "/css/css-transparent.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p><span>看完 w3cschool《</span><a href=\"//www.w3cschool.cn/css\" target=\"_blank\">css 教程</a><span>》中的《</span><a href=\"//www.w3cschool.cn/css/css-image-transparency.html\" target=\"_blank\">css 图像透明/不透明</a><span>》，你对 CSS 中的半透明颜色可能已经有了基础的了解，</span><span>CSS 透明算得上是一种相当流行的技术，但在跨浏览器支持上，对于开发者来说，可以说是一件令人头疼的事情。目前还没有一个通用方法，以确保透明度设置可以在目前使用的所有浏览器上有效，</span><span>但是总得来说它是一个巨大的变革。</span><span>关于 CSS 透明度，有一点需要注意的是，它虽然使用了很多年，但它一直以来都不是一个标准属性，它是一种非标准技术，应该是 CSS3 规范的一部分。</span>\n\n</p>\n<p style=\"text-align: center;\"><span><br></span>\n\n</p>\n<p style=\"text-align: center;\"><span><img src=\"https://atts.w3cschool.cn/attachments/image/20161109/1478662645680003.jpg\" alt=\"css透明度\" class=\"\"><br></span>\n\n</p>\n\n<h2><span>怎样在CSS样式中设置背景的透明度</span></h2>\n\n<div><span>怎样在 CSS 样式中设置背景的透明度,下面给出一个具体的实例。把类为 box 的层设为透明。</span>\n\n</div>\n<div><span><br></span>\n\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.box{</p>\n            <p>   width:300px;</p>\n            <p>   height:200px;</p>\n            <p>   margin:0 auto;</p>\n            <p>   boxder:1px solid #ccc;</p>\n            <p>   background:#000;</p>\n            <p>   filter:alpha(opacity:30);</p>\n            <p>   opacity:0.3;</p>\n            <p>   color:red;}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>其中 background:#000; filter:alpha(opacity:30); opacity:0.3;为关键代码，当 opacity 值为1时，表示完全不透明，为0时表示完全透明。</div>\n<div><span><br><strong>其他的属性介绍如下:</strong><br>opacity: 0.3；这是“最重要的”，因为它是在 CSS 的现行标准。这将在 Firefox，Safari 和 Opera 的大多数版本的工作。这将是你所需要的一切如果所有的浏览器都支持目前的标准。当然是他们不会错。</span>\n\n</div>\n<div><span><br>filter:alpha(opacity=30);这一个是针对IE浏览器</span>\n\n</div>\n<div><span><br>-moz-opacity:0.3;你需要这一个支持老版本的 Mozilla 浏览器如 Netscape Navigator。</span>\n\n</div>\n<div><span><br>-khtml-opacity: 0.3;这是旧版本的 Safari（1.×）当渲染引擎是使用仍被称为 kthml，而不是目前的WebKit。<br></span>\n\n</div>\n<div><span><br></span>\n\n</div>\n\n<h2><span>CSS 中用 javascript 或 jquery 实现透明度的改变</span></h2>\n\n<div><span></span>\n\n    <p>如何用 CSS 实现背景半透明效果？我们一般的做法是用两个层，一个用于放文字，另一个用于做透明背景，因为透明滤镜的效果会影响到里面的内容。</p>\n    <p>\n        <br>\n    </p>\n    <p>不过如果你只需求在 IE 下实现，使用 CSS 实现透明度有很多方案，这里只是介绍大家通用的方法：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>.transparent_class {</p>\n        <p>filter:alpha(opacity=50);//标准的css透明度，在大部分的标准浏览器Firefox, Safari, and Opera都有效</p>\n        <p>opacity:0.5;//兼容IE解决方案</p>\n        <p>-moz-opacity:0.5;//老的Mozilla browsers如NetscapeNavigator.几乎没有可以不需要</p>\n        <p>-khtml-opacity:0.5;//兼容老的Safari (1.x) 版本,很少可以不用    }</p>\n    </div>\n</div>\n    <br>\n    <div><span>知道了CSS改变透明度的原理，那么使用 javascript 动态改变透明度就简单了：</span>\n\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2> \n            <div class=\"example_code notranslate\">\n                <p>&lt;script&gt;</p>\n                <p>   window.onload =function(){</p>\n                <p>   var myDiv = document.getElementById(\"transparent_div\");</p>\n                <p>   myDiv.onclick =function(){</p>\n                <p>       myDiv.style.opacity =\".4\";//针对所有通用浏览器</p>\n                <p>       myDiv.style.filter =\"alpha(opacity=40)\";//针对IE浏览器}}</p>\n                <p>&lt;/script&gt;</p>\n            </div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n        </div><span></span>\n\n        <div><span><br></span>\n\n        </div>jQuery改变透明度实现如下：\n        <br>\n    </div>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>$(document).ready(function(){</p>\n            <p>$(\"#btn1\").click(function(){</p>\n            <p>$(\"#box\").animate({opacity:\"0\"});});</p>\n            <p>$(\"#btn2\").click(function(){</p>\n            <p>$(\"#box\").animate({opacity:\"1\"});});});</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_3\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n</div>\n<hr>\n\n<h2>CSS透明技巧汇总</h2>\n\n<div>\n    <p><strong>一、旧的Opacity设置</strong>\n\n    </p>\n    <p><strong><br></strong>\n\n    </p>以下代码是 Firefox 和 Safari 旧版本所需的透明度设置:\n    <br>\n</div>\n<div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#myElement {  -khtml-opacity: .5;  -moz-opacity: 0.5;  }</p>\n        <p>-khtml-opacity 设置是针对旧版本的Webkit渲染引擎，这种专用属性现在已经过时了，除非你还有需要兼容Safari 1.x.的用户。</p>\n        </div>\n</div>第二行使用专用属性 -moz-opacity是 为了兼容 Mozilla 渲染引擎的早期版本，以及追溯到 Netscape Navigator。 Firefox 0.9 以后就不要求使用 -moz-opacity 属性，Firefox 3.5（现在使用 Gecko 引擎）已经不在支持这个属性。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>\n    <div style=\"text-align: center;\"><strong style=\"font-size: 13px; line-height: 1.7;\"><img src=\"https://atts.w3cschool.cn/attachments/day_161109/201611091138311831.jpg\" alt=\"透明样例\"></strong>\n\n    </div><strong><br></strong>\n\n</div>\n<div><strong><br></strong>\n\n</div>\n<div><strong>二、在Firefox, Safari, Chrome和Opera下的CSS透明度 </strong>\n\n</div>\n<div><strong><br></strong>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">以下代码是除了IE外的所有当前浏览器的最简单，最新的不透明度设置的CSS语法：</span>\n\n    <br>\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"></span>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#myElement { opacity: 0.7; }</p>\n       </div>\n</div>上述语法将设置一个元素为70％不透明（或30%透明）。设置opacity:1将使元素不透明，而设置opacity:0将使得元素完全不可见。你 只要记住“opacity”等同于“不透明”就很容易记住了，opacity值越小就越接近透明。</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">opacity属性可以精确地小数点后两位，所以值取\".01\"和\".02\"实际上是不同的，虽然可见度很难被发觉。一般情况下，精确到一位就可以了，取值如\".3\"或\".7\"。</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br></span>\n\n</div>\n\n<h2><span style=\"font-size: 13px; line-height: 1.7;\">三、IE下的CSS透明度</span></h2>\n\n<div></div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><span>IE下照旧有别于其他浏览器，并且目前也有三个不同版本的IE在广泛使用，透明度设置是不同的，有时需要额外的CSS来控制：</span>\n\n    <br>\n    </span>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#myElement {      filter: alpha(opacity=40);  }</p>\n    </div>\n</div>上面的CSS使用专用的filter属性来设置IE6-8透明度。对于IE6和IE7需要注意：为了使得透明设置生效，元素必须是“有布局”。一个元素 可以通过使用一些CSS属性来使其被布局，有如width和position。</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br>另外一个设置IE8的CSS透明度的方法语法如下：<br></span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"></span>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#myElement {      filter: progid:DXImageTransform.Microsoft.Alpha(opacity=40);</p>\n        <p>/* 第一行在IE6, IE7和IE8下有效 */</p>\n        <p>-ms-filter:       “progid:DXImageTransform.Microsoft.Alpha(opacity=40)”;</p>\n        <p>/*第二行仅在IE8下有效 */}</p>\n    </div>\n</div>第一行代码针对当前所有IE版本，第二行仅针对 IE8。\n    <br>注意两行代码的不同之处：在第二行代码中，在filter属性前跟着-ms-前缀，并且属性值有加引号，这些都是语法所必须的。</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">说实在，有了之前一个例子中用 alpha(opacity=40）的语法来作用于任何版本的 IE 下的任何有布局的元素之后，并不能确定是否还有必要用”progid“的方法</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"></span>\n\n    <hr>\n     <h2><span style=\"font-size: 13px;\">CSS 如何值改变背景透明的，不改变子元素透明度？</span><br></h2>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">一般情况下，我们可以使用 css 的 opcity 属性改变某个元素的透明度，但是其元素下的子元素的透明度也会被改变，即使对子元素重新定义也没有用，例如：<br></span>\n\n</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;div style=\"opacity:0.4; background-image:url(/statics/images/w3c/intro.png)\"&gt;</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_4\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<div>文字元素的透明度也会是 0.4。于是想一想，如果有方法只改变背景的透明度就能解决此问题了。\n    <br> \n    <br>方法1：使用一张透明的图片做背景可以达成效果，但是有没有更简单的方法呢？\n    <br> \n    <br>方法2：使用 RGBA。\n    <br>\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br></span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><span>例如：</span>\n\n    <br>\n    </span>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>&lt;div style=\"background-color:rgba(0, 0, 0, 0.4)\"&gt;  </p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_5\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <br>\n</div>\n\n<h2><span style=\"font-size: 13px; line-height: 1.7;\">CSS在设置了透明度的层里，怎么让里面的层不透明</span></h2>\n\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><span>在外层DIV设置了CSS代码如下</span>\n\n    <br>\n    </span>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>opacity: 0.8;</p>\n            <p>-moz-opacity: 0.8;</p>\n            <p>filter: alpha(opacity=80);</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_opa_6\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div><span>但在此层里面的层都透明了，怎么让里面的层不透明？</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br></span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">方法：</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">如果是颜色，完全可以用背景色透明 rgba 来代替 opacity，<br>如果是图片，就用 ps 简单处理一下即可。<br>opacity 这个属性指定的透明是包括里面的元素的，不可能只有外面透明，里面不透明</span>\n\n</div>\n\n<h2><span style=\"font-size: 13px; line-height: 1.7;\">css里边写透明样式怎么写</span></h2>\n\n<div><span style=\"font-size: 13px; line-height: 1.7;\">如果是用样式的话需要用到滤镜<br>style=\"filter:Alpha(Opacity=opacity, FinishOpacity=finishopacity，Style=style, StartX=startX，StartY=startY，FinishX=finishX，FinishY=finishY)\"<br><br></span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\">说明：<br>Opacity：起始值，取值为0～100, 0为透明，100为原图。<br>FinishOpacity：目标值。<br>Style：1或2或3<br>StartX：任意值<br>StartY：任意值</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"><br>语法如下：</span>\n\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"></span>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>filter:Alpha(Opacity=\"0\",FinishOpacity=\"75\",Style=\"2\") </p>\n    </div>\n</div>但是因为滤镜的兼容性问题，最好是不要用，可以用 ps 做图的时候，把背景调一下透明度后导成 png 格式的图片就行了，如果透明的背景颜色一样的话，那么你可以切成 1px*1px 大小的 png 图片平铺，gif 只支持透明度 100% 也就是完全透明的图片，半透明的不支持，而 png 格式的图片则不存在什么问题，唯一会有问题的地方就只是 IE6 不兼容透明 png 格式而已。</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "7c25ec253f2c92433b5c15100ecaf733",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 样式参考标准",
      "chapter_level_two_url": "/css/css-style.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>如今我们的网站、页面更加需要注重细节，不论是字体的样式、还是图片的分辨率清晰度都会影响到用户的访问体验和 PV，以及用户以后是否会回访我们的网站/博客。为了让我们的网页变得更加美观个性化，我们需要了解更多的 CSS 样式属性。<span>CSS 不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化，<span>CSS 拥有对网页对象和模型样式编辑的能力。为了方便大家学习 CSS 样式，下面大家整理 CSS 样式知识点及参考样式合集。</span></span>\n</p>\n<p><span><span><br></span></span>\n</p>\n<p style=\"text-align: center;\"><span><span><img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081829431336.png\" alt=\"css样式\"><br></span></span>\n</p>\n\n<h2><span><span>一些常见不必要 CSS 样式</span></span></h2>\n\n<div>\n    <p><span><span><strong>1、与默认 CSS 样式一致</strong></span></span>\n    </p><span><span><span>我们有时候写的 CSS 样式会与浏览器默认的 CSS 样式一致，有时候您自己都可能没有意识到。</span>\n\n    <br><span><br></span></span>\n    </span>\n</div>\n<div><span><span>常见的例子有：</span>\n\n    <br>\n    </span>\n    <div>\n        <div>①</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n            <p>div{width:auto; height:auto;}</p>\n           </div>\n</div>对于一些刚使用 CSS 的朋友，有时候，其为了表达这段 div 高度是自动适应于内部元素的，会情不自禁的加上 <code>height:auto;</code> 的样式。很显然，这段样式是没有必要的，默认的任何块状元素的高度几乎都是 auto。\n        <br>\n        <br>\n    </div>\n    <div>我们来看看人人网个人首页的 CSS 样式文件（<a href=\"http://s.xnimg.cn/a6807/csspro/apps/home-all.css\" rel=\"external nofollow\" target=\"_blank\">链接点这里</a>），在 chrome 浏览器下 Ctrl+F 搜索  <code>height:auto</code>，居然显示了九条（见下图）。\n        <br>\n    </div>\n    <div>\n        <br>\n    </div>\n    <div>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081809587074.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"height:auto\">\n        </div>\n        <div style=\"text-align: center;\">\n            <br>\n        </div>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081810089813.png\" alt=\"height:auto;的样式\">\n        </div>\n        <div style=\"text-align: center;\">\n            <br>\n        </div>\n        <div style=\"text-align: center;\">\n            <div style=\"text-align: left;\"><span>按照常规来讲，<code>height:auto</code> 只有在使用 CSS 优先级抹掉之前的 <code>height</code> 定值的样式的时候使用，其余情况基本上都是可以去掉的。就像是上面人人网的例子，居然9个 <code>height:auto</code>，这里至少有一半是没有必要的。</span>\n\n            </div>\n            <div style=\"text-align: left;\">\n                <br>\n            </div>\n            <div style=\"text-align: left;\">\n                <div>②</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">                    <p>body,p,h1,h2,h3,h4,h5,h6{margin:0; padding:0;}</p>\n               v\n                <p>上面有关 body,p 等标签的样式中有个样式是无效的，与默认值一致的，这个样式就是 <code>padding:0</code>;，对于 <code>body</code>,<code>p</code>,<code>h1~6</code> 这些标签，本身的 <code>padding</code> 值就是0，所以只需要<code> margin:0 </code>就可以了。</p>\n                <p>\n                    <br>\n                </p>\n                <p>在CSS reset中，为了方便，都是一堆标签直接套个 <code>margin:0</code>;<code>padding:0</code>; 了事。还拿人人网的 CSS 样式文件举例，人人网个人首页样式第一行就是一长串标签带个 <code>margin:0</code>;<code>padding:0</code>; 先不管其把 <code>span</code>,<code>div</code>,<code>em</code> 之类的标签也加进入，就算是没有这些标签，也是极不推荐这种写法，完全的浪费资源，浪费\n                    CSS 的渲染。比较推荐的做法是把 <code>ul</code>,<code>ol</code> 独立出来，因为<code>ul</code>,<code>ol</code>还要独立设置 <code>list-style</code> 样式，而且常用的标签就 <code>ul</code>,<code>ol </code>列表元素有默认的 padding 值，所以高效的写法应该是：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">                    <p>body,p,h1,h2,h3,h4,h5,h6{margin:0;}</p>\n                    <p>ul,ol{list-stype:none; margin:0; padding:0;}</p>\n                    </div>\n</div>\n                <div>③</div>\n            <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>span{display:inline; float:left; margin-left:3px;}</p>\n                   </div>\n</div>\n                <p>这也是常出现的。出现这种情况的原因可能与 IE6 的浮动双边距 bug 有关，我们可以用设置 <code>display:inline</code> 的方法修复 IE6 的这个 bug，但是，如果对这个 bug 理解不够，对 CSS 的理解不足，就会出现滥用的情况。上面是滥用的情况之一，对于 <code>span/a/em/cite/i/b/strong</code> 等行内元素默认就是 <code>display:inline</code> 的，所以给其设置 <code>display:inline</code> 属性是多此一举。</p>\n                <p>\n                    <br>\n                </p>\n                <p>类似的情况还有对本身就是 <code>block</code> 水平的元素设置 <code>display:block </code>属性，例如：</p>\n                <div>\n                   <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                        <p>li{display:block; padding:4px 0;}</p>\n                       </div>\n</div>\n                </div>\n                <p>上面的情况屡见不鲜，甚至在比较优秀的网站上也会有这类低级的样式问题。</p>\n                <p>\n                    <br>\n                </p>\n                <div>④<span style=\"line-height: 1.7; font-size: 13px;\">其他一些情况</span>\n\n                </div>\n              <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>div{margin:auto;}</p>\n                    </div>\n</div>\n           <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>textarea{overflow:auto;}</p>\n                  </div>\n</div>\n             <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>img,input,button{vertical-align:baseline;}</p>\n                   </div>\n</div>\n           <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>div{background-position:0 0;}</p>\n                  </div>\n</div>\n                <hr>\n                 <h2>css参考样式集合</h2>\n\n                <p><span><strong><span>一. </span><span>字体属性：(font)</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p><span>1. 大小 {font-size: x-large;}(特大) xx-small;(极小) 一般中文用不到，只要用数值就可以，单位：PX、PD</span>\n\n                    <br>\n                </p>\n                <p><span>2. <span>样式 {font-style: oblique;}(偏斜体) italic;(斜体) normal;(正常)</span></span>\n                </p>\n                <p><span>3. <span>行高 {line-height: normal;}(正常) 单位：PX、PD、EM</span></span>\n                </p>\n                <p><span>4. <span>粗细 {font-weight: bold;}(粗体) lighter;(细体) normal;(正常)</span></span>\n                </p>\n                <p><span>5. <span>变体 {font-variant: small-caps;}(小型大写字母) normal;(正常)</span></span>\n                </p>\n                <p><span>6. <span>大小写 {text-transform: capitalize;}(首字母大写) uppercase;(大写) lowercase;(小写) none;(无)</span></span>\n                </p>\n                <p><span>7. <span>修饰 {text-decoration: underline;}(下划线) overline;(上划线) line-through;(删除线) blink;(闪烁)</span></span>\n                </p>\n                <p><span><span><br></span></span>\n                </p>\n                <p><span><span><strong>二. <span>常用字体： (font-family)</span>\n\n                    </strong>\n                    </span>\n                    </span>\n                </p>\n                <p><span>\"Courier New\", Courier, monospace, \"Times New Roman\", Times, serif, Arial, Helvetica, sans-serif, Verdana</span>\n\n                    <br>\n                </p>\n                <p><span><br></span>\n\n                </p>\n                <p><span><span><strong>三. <span>背景属性： (background)</span>\n\n                    </strong>\n                    </span>\n                    </span>\n                </p>\n                <p><span>1. 色彩 {background-color: #FFFFFF;}</span>\n\n                    <br>\n                </p>\n                <p>2. 图片 {background-image: none;}</p>\n                <p>3. 重复 {background-repeat: no-repeat;}repeat-x(水平);repeat-y(垂直)</p>\n                <p>4. 滚动 {background-attachment: fixed;}(固定) scroll;(滚动)</p>\n                <p>5. 位置 {background-position: left;}(水平) top(垂直);</p>\n                <p>简写方法 {background:#000 url(..) repeat fixed left top;} /*简写·这个在阅读代码中经常出现.</p>\n                <p>\n                    <br>\n                </p>\n                <p><strong><span>四. </span><span>区块属性： (Block)</span></strong>\n\n                </p>\n                <p><span>1. 字间距 {letter-spacing: normal;} 数值 </span>\n\n                    <br>\n                </p>\n                <p>2. 对齐 {text-align: justify;}(两端对齐) left;(左对齐) right;(右对齐) center;(居中)</p>\n                <p>3. 缩进 {text-indent: 数值px;}</p>\n                <p>4. 垂直对齐 {vertical-align: baseline;}(基线) sub;(下标) sup;(上标) top; text-top; middle; bottom; text-bottom;</p>\n                <p>5. 词间距word-spacing: normal; 数值</p>\n                <p>6. 空格white-space: pre;(保留) nowrap;(不换行)</p>\n                <p>7. 显示 {display:block;}(块) inline;(内嵌) list-item;(列表项) run-in;(追加部分) compact;(紧凑) marker;(标记) table; inline-table; table-raw-group; table-header-group; table-footer-group; table-raw; table-column-group; table-column; table-cell; table-caption;(表格标题) /*display\n                    属性的了解很模糊*/</p>\n                <p>\n                    <br>\n                </p>\n                <p style=\"text-align: center;\">\n                    <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081831117206.png\" alt=\"css\">\n                    <br>\n                </p>\n                <p style=\"text-align: center;\">\n                    <br>\n                </p>\n                <p><span><strong>五. <span>方框属性： (Box)</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p><span>1. <span>width:; height:; float:; clear:both; margin:; padding:; 顺序：上右下左</span></span>\n                </p>\n                <p><span><br></span>\n\n                </p>\n                <p><span><strong>六. <span>边框属性： (Border)</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p><span>1. </span><span>border-style: dotted;(点线) dashed;(虚线) solid; double;(双线) groove;(槽线) ridge;(脊状) inset;(凹陷) outset; border-width:; 边框宽度</span>\n\n                </p>\n                <p>border-color:#;</p>\n                <p>简写方法border：width style color; /*简写*/</p>\n                <p>\n                    <br>\n                </p>\n                <p><span><strong><span>七. </span><span>列表属性： (List-style)</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p>1. 类型list-style-type: disc;(圆点) circle;(圆圈) square;(方块) decimal;(数字) lower-roman;(小罗码数字) upper-roman; lower-alpha; upper-alpha;</p>\n                <p>2. 位置list-style-position: outside;(外) inside;</p>\n                <p>3. 图像list-style-image: url(..);</p>\n                <p>\n                    <br>\n                </p>\n                <p><span><strong>八. 定位属性： (Position)</strong></span>\n\n                </p>\n                <p>1.Position: absolute; relative; static;</p>\n                <p>visibility: inherit; visible; hidden;</p>\n                <p>overflow: visible; hidden; scroll; auto;</p>\n                <p>clip: rect(12px,auto,12px,auto) (裁切)</p>\n                <p>\n                    <br>\n                </p>\n                <p><span><strong>九. <span>CSS文字属性：</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p><span><span><span>1. </span>color : #999999; /*文字颜色*/</span>\n                    </span>\n                </p>\n                <p>2. font-family : 宋体,sans-serif; /*文字字体*/</p>\n                <p>3. font-size : 9pt; /*文字大小*/</p>\n                <p>4. font-style:itelic; /*文字斜体*/</p>\n                <p>5. font-variant:small-caps; /*小字体*/</p>\n                <p>6. letter-spacing : 1pt; /*字间距离*/</p>\n                <p>7. line-height : 200%; /*设置行高*/</p>\n                <p>8. font-weight:bold; /*文字粗体*/</p>\n                <p>9. vertical-align:sub; /*下标字*/</p>\n                <p>10. vertical-align:super; /*上标字*/</p>\n                <p>11. text-decoration:line-through; /*加删除线*/</p>\n                <p>12. text-decoration: overline; /*加顶线*/</p>\n                <p>13. text-decoration:underline; /*加下划线*/</p>\n                <p>14. text-decoration:none; /*删除链接下划线*/</p>\n                <p>15. text-transform : capitalize; /*首字大写*/</p>\n                <p>16. text-transform : uppercase; /*英文大写*/</p>\n                <p>17. text-transform : lowercase; /*英文小写*/</p>\n                <p>18. text-align:right; /*文字右对齐*/</p>\n                <p>19. text-align:left; /*文字左对齐*/</p>\n                <p>20. text-align:center; /*文字居中对齐*/</p>\n                <p>21. text-align:justify; /*文字分散对齐*/</p>\n                <p><span>vertical-align属性</span>\n\n                </p>\n                <p>22. vertical-align:top; /*垂直向上对齐*/</p>\n                <p>23. vertical-align:bottom; /*垂直向下对齐*/</p>\n                <p>24. vertical-align:middle; /*垂直居中对齐*/</p>\n                <p>25. vertical-align:text-top; /*文字垂直向上对齐*/</p>\n                <p>26. vertical-align:text-bottom; /*文字垂直向下对齐*/</p>\n                <p><span></span>\n\n                    <br>\n                </p>\n                <p><span><strong>十. <span>CSS边框空白</span>\n\n                    </strong>\n                    </span>\n                </p>\n                <p><span>1. </span><span>padding-top:10px; /*上边框留空白*/</span>\n\n                </p>\n                <p>2. padding-right:10px; /*右边框留空白*/</p>\n                <p>3. padding-bottom:10px; /*下边框留空白*/</p>\n                <p>4. padding-left:10px; /*左边框留空白</p>\n                <hr>\n                 <h2>CSS 样式表中的样式覆盖顺序</h2><span>有时候在写 CSS 的过程中，某些限制总是不起作用，这就涉及了 CSS 样式覆盖的问题，如下所示：</span>\n\n              <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>#navigator {  </p>\n                    <p>    height: 100%;  </p>\n                    <p>    width: 200;  </p>\n                    <p>    position: absolute;  </p>\n                    <p>    left: 0;  </p>\n                    <p>     border: solid 2 #EEE;  }    </p>\n                    <p>.current_block {  </p>\n                    <p>     border: solid 2 #AE0;  }  </p>\n                    </div>\n</div>在一些教材中，只说 CSS 的顺序是“元素上的 style” &gt; “文件头上的 style 元素” &gt;“外部样式文件”，但对于样式文件中的多个相同样式的优先级怎样排列，没有详细说明。经过测试和继续搜索，得知优先级如下排列：\n                <br> \n                <br>1. 样式表的元素选择器选择越精确，则其中的样式优先级越高：\n                <p>id选择器指定的样式 &gt; 类选择器指定的样式 &gt; 元素类型选择器指定的样式\n                    <br>所以上例中，<code>#navigator</code> 的样式优先级大于<code>.current_block</code> 的优先级，及时 <code>.current_block </code>是最新添加的，也不起作用。\n                    <br> \n                    <br>2. 对于相同类型选择器制定的样式，在样式表文件中，越靠后的优先级越高：</p>\n                <p>注意，这里是样式表文件中越靠后的优先级越高，而不是在元素 class 出现的顺序。比如 .class2 在样式表中出现在 .class1 之后：</p>\n             <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>.class1 {  </p>\n                    <p>    color: black;  }    </p>\n                    <p>.class2 {  </p>\n                    <p>    color: red;  }</p>\n                  </div>\n</div>\n                <p>而某个元素指定 class 时采用 <code>class=\"class2 class1\"</code>这种方式指定，此时虽然class1在元素中指定时排在class2的后面，但因为在样式表文件中class1处于class2前面，此时仍然是class2的优先级更高，color的属性为red，而非black。</p>\n                <p> </p>\n                <p>3. 如果要让某个样式的优先级变高，可以使用<code>!important</code>来指定：</p>\n          <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>.class1 {  </p>\n                    <p>    color: black !important;  }    </p>\n                    <p>.class2 {  </p>\n                    <p>    color: red;  } </p>\n                    </div>\n</div>\n                <p>这时 class 将使用 black，而非 red。</p>\n                <p> </p>\n                <p>对于一开始遇到的问题，有两种解决方案：</p>\n                <p>1. 将 border 从 <code>#navigator</code> 中拿出来，放到一个class .block中，而<code>.block</code>放到<code>.current_block</code>之前：</p>\n            <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>#navigator {  </p>\n                    <p>    height: 100%;  </p>\n                    <p>    width: 200;  </p>\n                    <p>    position: absolute;  </p>\n                    <p>    left: 0;  }    </p>\n                    <p>.block {  </p>\n                    <p>    border: solid 2 #EEE;  }    </p>\n                    <p>.current_block {  </p>\n                    <p>    border: solid 2 #AE0;  }  </p>\n                    </div>\n</div><span> 需要默认为<code>#navigator</code>元素指定<code>class=\"block\"</code></span>\n\n                <br>\n                <br>\n                <p><span>2. 使用!important:</span>\n\n                    <br>\n                </p>\n             <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>#navigator {  </p>\n                    <p>    height: 100%;  </p>\n                    <p>    width: 200;  </p>\n                    <p>    position: absolute;  </p>\n                    <p>    left: 0;  </p>\n                    <p>    border: solid 2 #EEE;  }    </p>\n                    <p>.current_block {  </p>\n                    <p>    border: solid 2 #AE0 !important;  }  </p>\n                    </div>\n</div><span>此时无需作任何其他改动即可生效。可见第二种方案更简单一些。</span><span> </span>\n\n                <br>\n                <br>\n                <p>大家都知道CSS的全称叫做“层叠样式表”，但估计很多人都不知道“层叠”二字的含义。其实，“层叠”指的就是样式的覆盖，当一个元素被运用上多种样式，并且出现重名的样式属性时，浏览器必须从中选择一个属性值，这个过程就叫“层叠”。样式覆盖（这种叫法更大众化些）遵循一定的规则。</p>\n                <p>\n                    <br>\n                </p>\n                <p><span></span>\n\n                </p>\n                <p>首先需要明确的是，很多情况都会导致一个元素被运用上多种样式，样式覆盖的规则也需要根据不同的情况来定，具体规则如下。</p>\n                <p>\n                    <br>\n                </p>\n                 <h2>规则一：由于继承而发生样式冲突时，最近祖先获胜。</h2>\n\n                <p>CSS的继承机制使得元素可以从包含它的祖先元素中继承样式，考虑下面这种情况：</p>\n          <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>&lt;style&gt;</p>\n                    <p>body</p>\n                    <p> {color:black;}</p>\n                    <p>p</p>\n                    <p> {color:blue;}</p>\n                    <p>&lt;/style&gt;</p>\n                    <p>&lt;p&gt;welcome to &lt;strong&gt;w3cschool&lt;/strong&gt;&lt;/p&gt;</p>\n                    </div>\n</div><span><code>strong</code>分别从<code>body</code>和<code>p</code>中继承了<code>color</code>属性，但是由于<code>p</code>在继承树上离<code>strong</code>更近，因此<code>strong</code>中的文字最终继承<code>p</code>的蓝色。</span>\n\n                <br>\n                <br>\n                 <h2>规则二：继承的样式和直接指定的样式冲突时，直接指定的样式获胜。</h2>\n\n                <p>在上面的例子中，假如还指定了<code>strong</code>元素的样式，如：</p>\n        <div class=\"example\">\n    <div class=\"example_code notranslate\">\n                    <p>strong</p>\n                    <p> {color:red;}</p>\n                    </div>\n</div><span>那么根据规则二，<code>strong</code>中的文字最终显示为红色。</span>\n\n                <br>\n                <br>\n                 <h2>规则三：直接指定的样式发生冲突时，样式权值高者获胜。</h2>\n\n                <p>样式的权值取决于样式的选择器，权值定义如下表。</p>\n                <br>\n                <div style=\"text-align: center;\">\n                    <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081825261924.png\" style=\"font-size: 13px; line-height: 1.7;\" alt=\"css选择器\">\n                </div>\n            </div>\n            <br>\n        </div><span>可以看到，</span><span>内联样式的权值&gt;&gt;ID选择器&gt;&gt;类选择器&gt;&gt;标签选择器</span><span>，除此以外，后代选择器的权值为每项权值之和，比如<code>#nav </code><code>.current</code> <code>a</code>”的权值为100 + 10 + 1 = 111。</span>\n\n        <br>\n        <br>\n    </div>\n</div>\n\n<h2>规则四：样式权值相同时，后者获胜。</h2><span>考虑下面这种情况</span>\n\n<br>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>&lt;p class=\"byline\"&gt;Written by &lt;a class=\"email\" href=\"mailto:3400982550@qq.com\"&gt;Jean Graine de Pomme&lt;/a&gt;&lt;/p&gt;</p>\n    <p>.byline a {color:red;}</p>\n    <p>p .email {color:blue;}</p>\n    </div>\n</div>\n<p><code>.byline a</code>与<code>p .email</code>都直接指定了上面的<code>a</code>元素，且权值都为11，根据规则四，最终显示蓝色。</p>\n<p>由于样式表可以是外部的，也可以是内部的，规则四提醒我们要注意外部样式表引入的顺序（及<code>&lt;link&gt;</code>元素的顺序），以及外部样式表与内部样式表的出现位置。一般来说，内部样式表出现在所有外部样式表的引入之后，一般是在<code>&lt;/head&gt;</code>之前。</p>\n<p>\n    <br>\n</p>\n\n<h2>规则五：<code>!important</code>的样式属性不被覆盖。</h2><span><code>!important</code>可以看做是万不得已的时候，打破上述四个规则的”金手指”。如果你一定要采用某个样式属性，而不让它被覆盖的，可以在属性值后加上<code>!important</code>，以规则四的例子为例，<code>.byline a {color:red !important;}</code>可以强行使链接显示红色。大多数情况下都可以通过其他方式来控制样式的覆盖，不能滥用<code>!important</code>。</span>\n\n<br>\n<hr>\n\n<h2>JQuery中操作CSS样式的方法</h2>\n\n<div>\n   <div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>//1、获取和设置样式</p>\n        <p>$(\"#tow\").attr(\"class\")获取ID为tow的class属性</p>\n        <p>$(\"#two\").attr(\"class\",\"divClass\")设置Id为two的class属性。</p>\n        <p>//2、追加样式</p>\n        <p>$(\"#two\").addClass(\"divClass2\")为ID为two的对象追加样式divClass2</p>\n        <p>//3、移除样式</p>\n        <p>$(\"#two\").removeClass(\"divClass\")移除 ID为two的对象的class名为divClass的样式。</p>\n        <p>$(#two).removeClass(\"divClass divClass2\")移除多个样式。</p>\n        <p>//4、切换类名</p>\n        <p>$(\"#two\").toggleClass(\"anotherClass\") //重复切换anotherClass样式</p>\n        <p>//5、判断是否含有某项样式</p>\n        <p>$(\"#two\").hasClass(\"another\")==$(\"#two\").is(\".another\");</p>\n        <p>//6、获取css样式中的样式</p>\n        <p>$(\"div\").css(\"color\") 设置color属性值. $(element).css(style)</p>\n        <p>//设置单个样式</p>\n        <p>$(\"div\").css(\"color\",\"red\")</p>\n        <p>//设置多个样式</p>\n        <p>$(\"div\").css({fontSize:\"30px\",color:\"red\"})</p>\n        <p>$(\"div\").css(\"height\",\"30px\")==$(\"div\").height(\"30px\")</p>\n        <p>$(\"div\").css(\"width\",\"30px\")==$(\"div\").width(\"30px\")</p>\n        <p>//7.offset()方法</p>\n        <p>//它的作用是获取元素在当前视窗的相对偏移，其中返回对象包含两个属性,即top和left 。</p>\n        <p>//注意：只对可见元素有效。</p>\n        <p>var offset=$(\"div\").offset();</p>\n        <p>var left=offset.left;         //获取左偏移</p>\n        <p>var top=offset.top;        //获取右偏移</p>\n        <p>//8、position()方法</p>\n        <p>//它的作用是获取元素相对于最近的一个position样式属性设置为relative或者absolute的祖父节点的相对偏移，与offset()一样，它返回的对象也包括两个属性即top和left。</p>\n        <p>//9、scrollTop()v方法和scrollLeft()方法</p>\n        <p>$(\"div\").scrollTop();        //获取元素的滚动条距顶端的距离。</p>\n        <p>$(\"div\").scrollLeft();         //获取元素的滚动条距左侧的距离。</p>\n        <p>//10、jQuery中的 toggle和slideToggle 方法，都可以实现对一个元素的显示和隐藏。区别是：</p>\n        <p>//toggle：动态效果为从右至左。横向动作。</p>\n        <p>//slideToggle：动态效果从下至上。竖向动作。</p>\n        <p>//比如想实现一个树由下至上收缩的动态效果，就使用slideToggle就ok了。</p>\n        <p>$('input').attr(\"readonly\",true)//将input元素设置为readonly</p>\n        <p>$('input').attr(\"readonly\",false)//去除input元素的readonly属性</p>\n        <p>$('input').attr(\"disabled\",true)//将input元素设置为disabled</p>\n        <p>$('input').attr(\"disabled\",false)//去除input元素的disabled属性</p>\n    </div>\n</div>\n</div>\n<p>\n    <br>\n</p></div></div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "0b58981d41d785cc3c71e2adab097a48",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 居中布局方法",
      "chapter_level_two_url": "/css/css-center.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p><span style=\"line-height: 1.7; font-size: 13px;\">我们在使用 CSS 来布局时经常需要进行</span><span style=\"line-height: 1.7; font-size: 13px;\">居中</span><span style=\"line-height: 1.7; font-size: 13px;\">，有时一个属性就能搞定，有时则需要一定的技巧才能兼容到所有浏览器，</span><span style=\"line-height: 1.7; font-size: 13px;\">利用 CSS 来实现对象的垂直居中有许多不同的方法，比较难的是应该选择哪种正确的方法。比如<span>我们都知道<code> margin:0 auto;</code>的样式能让元素水平居中，而<code>margin: auto;</code>却不能做到垂直居中……</span></span>\n    <span style=\"line-height: 1.7; font-size: 13px;\">下面就 CSS 居中的一些常用方法做个集中的介绍。</span>\n</p>\n<p><span style=\"line-height: 1.7; font-size: 13px;\"><br></span>\n\n</p>\n<p><span style=\"line-height: 1.7; font-size: 13px;\">首先是水平居中，最简单的办法当然就是：</span>\n\n</p>\n<p><span style=\"line-height: 1.7; font-size: 13px;\"></span>\n\n</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>margin:0 auto;</p>\n    </div>\n</div>\n\n<p>也就是将 <code>margin-left<code> 和 </code>margin-right</code>属性设置为 <code>auto</code>，从而达到水平居中的效果。</p>\n\n<h2><span>文字的水平居中方法：</span></h2>\n\n<div class=\"wrap\" style=\"text-align: left;\"><span>利用 <code>line-height  </code>设为  <code>height </code> 的一样即可：</span>\n\n</div>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>.wrap{</p>\n        <p>line-height: 200px;/*垂直居中关键*/</p>\n        <p>text-align:center;</p>\n        <p>height: 200px;</p>\n        <p>font-size: 36px;</p>\n        <p>background-color: #ccc;</p>\n        <p>}</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<div class=\"wrap\" style=\"text-align: left;\">效果如下所示：</div>\n<div class=\"wrap\" style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20161108/1478592901273014.png\" alt=\"文字居中\">\n    <br>\n</div>\n\n<h2 style=\"text-align: left;\">padding填充</h2>\n\n<div><span>利用 <code>padding</code> 和 <code>background-clip</code> 配合实现div的水平垂直居中：</span> </div>\n<div><span>通过 <code>background-clip</code> 设置为 <code>content-box</code>, 将背景裁剪到内容区外沿，再利用 <code>padding </code>设为外 div 减去内 div 的差的一半，来实现：</span>\n\n</div>\n<div>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.children {</p>\n            <p> width: 100px;</p>\n            <p> height: 100px;</p>\n            <p> padding: 50px;</p>\n            <p> background-color: black;</p>\n            <p> background-clip:content-box;/*居中的关键*/</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>效果如下所示：</div>\n<div>\n    <br>\n</div>\n<p style=\"text-align: center; \">\n    <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605147496658431.png\" alt=\"微信截图_20201112101718\" style=\"text-align: left;\" class=\"\">\n</p>\n<p><b>提示：</b>关于 <code>padding </code>的使用，你可以参考 <a href=\"https://www.w3cschool.cn/cssref/pr-padding.html\" target=\"_blank\">CSS padding 属性</a>部分。</p>\n<div style=\"text-align: left;\">\n     <h2><strong>hacks, hacks（小技巧）</strong></h2>\n\n    <p>有许多 <code>hacks</code> ，负 <code>margin</code>，影子元素 <code>: : before</code> 等。如果你的内容不是固定大小的话，它们大部分是很脆弱的。</p>\n     <h2><strong>translate(-50%,-50%)</strong></h2>\n\n    <p>用 <code>position</code> 加<code> translate(-50%,-50%) </code>比较奇特，百分比计算不是以父元素为基准，而是以自己为基准。</p>\n    <p>示例：</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>#ex3_content{</p>\n            <p>left:50%; top:50%; </p>\n            <p>transform:translate(-50%,-50%);</p>\n            <p>-webkit-transform:translate(-50%,-50%);</p>\n            <p>background-color:gray; color:white; position:absolute; }</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_7\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p>这个技巧相当嚣张，同样适用于没固定大小的内容，<code>min-width</code>，<code>max-height</code>，<code>overflow:scroll</code>等。</p>\n     <h2><strong>绝对定位居中</strong></h2>\n\n    <p>绝对定位的元素的位置相对于最近的已定位祖先元素，如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块。\n        <br>\n    </p>\n    <p><code>父容器元素：position: relative</code>\n\n    </p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center {</p>\n            <p>  width: 50%;</p>\n            <p>  height: 50%;</p>\n            <p>  overflow: auto;</p>\n            <p>  margin: auto;</p>\n            <p>  position: absolute;</p>\n            <p>  top: 0; left: 0; bottom: 0; right: 0;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_8\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p><strong>注意：高度必须定义，建议加 <code>overflow: auto</code>，防止内容溢出。</strong>\n\n    </p>\n    <p><strong><br></strong>\n\n    </p>\n     <h2 style=\"font-weight: bold;\"><strong>视口居中</strong></h2>\n\n    <p>内容元素：<code>position: fixed</code>，<code>z-index: 999</code>，记住父容器元素<code>position: relative</code> </p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center.is-Fixed {</p>\n            <p>  width: 50%;</p>\n            <p>  height: 50%;</p>\n            <p>  overflow: auto;</p>\n            <p>  margin: auto;</p>\n            <p>  position: fixed;</p>\n            <p>  top: 0; left: 0; bottom: 0; right: 0;</p>\n            <p>  z-index: 999;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_9\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p style=\"font-weight: bold;\"><strong><br></strong>\n\n    </p>\n     <h2 style=\"font-weight: bold;\"><strong>响应式</strong></h2>\n\n    <p>百分比宽高，最大、最小宽度均可以，加 <code>padding</code> 也可以</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center.is-Responsive {</p>\n            <p>  width: 60%;</p>\n            <p>  height: 60%;</p>\n            <p>  min-width: 400px;</p>\n            <p>  max-width: 500px;</p>\n            <p>  padding: 40px;</p>\n            <p>  overflow: auto;</p>\n            <p>  margin: auto;</p>\n            <p>  position: absolute;</p>\n            <p>  top: 0; left: 0; bottom: 0; right: 0;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryss_cen_10\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p style=\"font-weight: bold;\"><strong><br></strong>\n\n    </p>\n     <h2 style=\"font-weight: bold;\"><strong>偏移</strong></h2>\n\n    <p>只要<code>margin: auto;</code> 在，内容块将垂直居中，<code>top</code>, <code>left</code>, <code>bottom</code>, <code>right </code>可以设置偏移。</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center.is-Right {</p>\n            <p>  width: 50%;</p>\n            <p>  height: 50%;</p>\n            <p>  margin: auto;</p>\n            <p>  overflow: auto;</p>\n            <p>  position: absolute;</p>\n            <p>  top: 0; left: auto; bottom: 0; right: 20px;</p>\n            <p>  text-align: right;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryss_cen_11\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p style=\"font-weight: bold;\"><strong><br></strong>\n\n    </p>\n     <h2 style=\"font-weight: bold;\"><strong>溢出</strong></h2>\n\n    <p>居中内容比父容器高时，防止溢出，加 <code>overflow: auto</code> （没有任何 <code>padding</code> 时，也可以加 <code>max-height: 100%;</code>）。\n        <br>\n    </p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center.is-Overflow {</p>\n            <p>  width: 50%;</p>\n            <p>  height: 300px;</p>\n            <p>  max-height: 100%;</p>\n            <p>  margin: auto;</p>\n            <p>  overflow: auto;</p>\n            <p>  position: absolute;</p>\n            <p>  top: 0; left: 0; bottom: 0; right: 0;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryss_cen_12\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <p style=\"font-weight: bold;\"><strong><br></strong>\n\n    </p>\n     <h2 style=\"font-weight: bold;\"><strong>调整尺寸</strong></h2>\n\n    <p><code>resize</code> 属性可以让尺寸可调。 设置<code> min- /max-</code> 限制尺寸，确定加了 <code>overflow: auto</code> 。\n        <br>\n    </p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.Absolute-Center.is-Resizable {</p>\n            <p>  min-width: 20%;</p>\n            <p>  max-width: 80%;</p>\n            <p>  min-height: 20%;</p>\n            <p>  max-height: 80%;</p>\n            <p>  resize: both;</p>\n            <p>  overflow: auto;</p>\n            <p>  margin: auto;</p>\n            <p>  position: absolute;</p>\n            <p>  top: 0; left: 0; bottom: 0; right: 0;</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryss_cen_13\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n    <br>\n     <h2><strong>margin填充</strong></h2>\n\n    <p>首先我们还是定义父子div：</p>\n    <p>这里我们利用将子 div 的 <code>margin-top</code> 设置为父 div 高度减去子 div 高度的一半，然后再通过 <code>overflow </code>设置为 <code>hidden </code>来触发父 div 的 BFC，CSS代码如下：</p>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">\n            <p>.parent {</p>\n            <p> margin:0 auto;</p>\n            <p> height:@parentWidth;</p>\n            <p> width:@parentWidth;</p>\n            <p> background: red;</p>\n            <p> overflow:hidden;/*触发BFC*/</p>\n            <p>}</p>\n        </div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_3\" class=\"tryitbtn\">尝试一下 »</a>\n\n    </div>\n<span>效果如下所示：</span>\n\n    <br>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605149603512899.png\" alt=\"微信截图_20201112105305\">\n        <br>\n    </div>\n     <h2 style=\"text-align: left;\">absolute定位</h2>\n\n    <div><span>利用 <code>position:absolute</code> 搭配<code>top</code>，<code>left 50%</code>，再将 <code>margin </code>设为负值也可以对 div 进行水平垂直居中，首先还是需要定义父子 div：</span>\n\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2> \n            <div class=\"example_code notranslate\">\n                <p>.children {</p>\n                <p> position:absolute; </p>\n                <p> left:50%; </p>\n                <p> top:50%; </p>\n                <p> margin:-25px 0 0 -25px ;</p>\n                <p> height:50px;</p>\n                <p> width:50px;</p>\n                <p> background-color: black;</p>\n                <p>}</p>\n            </div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryss_cen_17\" class=\"tryitbtn\">尝试一下 »</a>\n\n        </div><span>其中的 <code>margin</code> 中的值为该 div 宽度的一半，最后效果图：</span>\n\n        <br>\n        <br>\n    </div>\n    <div style=\"text-align: left;\">\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605150043985090.png\" alt=\"微信截图_20201112105956\" style=\"text-align: left;\">\n        </div>\n        <br>\n    </div>\n     <h2>图片居中</h2>\n\n    <div>\n        <p>一般的图片居中都是和<code> text-align</code> 一样，将图片包装在一个 div 中，将该 div 的 <code>text-align</code> 设为 <code>center</code> 即可。  </p>\n        <p>有一种特殊的方式，利用了一个图片进行占位，以让父容器获得高宽，从而让进行 -50% 偏移的图片能有一个参照容器作百分比计算。优点是可以不知道图片的大小，随便放张尺寸不超过父容器的图片上去都能做到居中。另外，兼容性好，IE6 都是能顺利兼容的。代码如下：</p>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2> \n            <div class=\"example_code notranslate\">\n                <p>p {</p>\n                <p> position:absolute;</p>\n                <p> top:50%;</p>\n                <p> left:50%;}</p>\n                <p>.show-img {</p>\n                <p> position:absolute;</p>\n                <p> right:50%;</p>\n                <p> bottom:50%;}</p>\n            </div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_4\" class=\"tryitbtn\">尝试一下 »</a>\n\n        </div>效果如下所示：</div>\n    <div>\n        <br>\n    </div>\n    <div style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605150758571897.png\" alt=\"微信截图_20201112111221\" style=\"text-align: left;\">\n    </div>\n    <div style=\"text-align: left;\">\n         <h2><strong>transform居中</strong></h2>\n\n        <div>\n            <p>上面讲到的 div 居中的例子中，div 的宽度都是固定的，然而实际项目中，有可能遇到不定宽的 div，特别是响应式或者移动端的设计中，更加常见。所以下面介绍一种不需要定宽的 div 水平垂直居中方法。 \n                <br>先上代码：</p>\n        </div>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2> \n            <div class=\"example_code notranslate\">\n                <p>.children-inline {</p>\n                <p> position: relative;</p>\n                <p> left: -50%;</p>\n                <p> -webkit-transform : translate3d(0, -50%, 0);</p>\n                <p> transform : translate3d(0, -50%, 0);</p>\n                <p> background-color: black;</p>\n                <p> color:white;</p>\n                <p>}</p>\n            </div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_5\" class=\"tryitbtn\">尝试一下 »</a>\n\n        </div>\n<span>效果如下所示：</span>\n\n        <br>\n        <br>\n        <div style=\"text-align: center;\">\n            <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605150867339783.png\" alt=\"微信截图_20201112111417\" style=\"text-align: left;\">\n        </div>\n        <div style=\"text-align: center;\">\n            <br>\n        </div>\n        <div style=\"text-align: left;\"><span>首先我们利用<code> float</code>，将需要居中的div的父 div 也就是 <code>children</code> 的宽度收缩，然后<code> left:50%</code>,将 <code>children</code> 的左边与水平中线对齐。这个时候，还没有真正居中，我们需要将 <code>children-inner</code> 左移动 -50%，这样就水平居中了。 </span>\n\n        </div>\n        <div style=\"text-align: left;\">\n            <br><span>再来说说垂直方向，先将 <code>children</code> 的 top 设为50%，然后其上边和垂直中线对齐了，同样，我们需要将<code>children-inner</code> 上移动 -50%。但是这个 50% 是计算不出来的，所以我们用到了 <code>transform : translate3d(0, -50%, 0);</code> </span>\n\n            <br><span>这个方法非常好用噢。</span>\n\n            <br>\n            <br>\n        </div>\n        <div style=\"text-align: left;\">\n             <h2><strong>flex居中</strong></h2>\n\n            <div>最后来介绍一下 CSS3 中的<code> display:flex </code>来实现的水平垂直居中的方法。</div>\n            <div>\n                <div class=\"example\">\n                     <h2 class=\"example\">实例</h2> \n                    <div class=\"example_code notranslate\">\n                        <p>.parent {</p>\n                        <p> display:flex;</p>\n                        <p> align-items: center;/*垂直居中*/</p>\n                        <p> justify-content: center;/*水平居中*/</p>\n                        <p> width:100%;</p>\n                        <p> height:100%;</p>\n                        <p> background-color:red;</p>\n                        <p>}</p>\n                    </div>\n                    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_cen_6\" class=\"tryitbtn\">尝试一下 »</a>\n\n                </div>效果如下所示：</div>\n            <div>\n                <br>\n            </div>\n            <div style=\"text-align: center;\">\n                <img src=\"https://atts.w3cschool.cn/attachments/image/20201112/1605150990812989.png\" alt=\"微信截图_20201112111606\" style=\"text-align: left;\">\n            </div><span>这种方式最为简便，就是兼容性不好，不过随着时间的前进，各大浏览器一定会都兼容的。</span>\n\n            <br>\n            <br>\n             <h2>扩展阅读</h2>\n\n            <p>flex 除了可以用于表示居中之外，它还是一个强大的开源应用程序框架，允许使用相同的编程模型，工具和代码库构建针对浏览器，移动设备和桌面的传统应用程序。你可以在本站的<a href=\"https://www.w3cschool.cn/flex/flex_overview.html\" target=\"_blank\">《Flex教程》</a>中掌握更多有关于Flex框架的详细信息。</p>\n        </div>\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 5,
      "chapter_level_one_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 拓展阅读",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f159fc71d5b625a268375b4d42b9d4be",
      "chapter_level_two_parent_id": "53ee6f5e3ac805df9421c7fb8ddc9cf7",
      "chapter_level_two_name": "CSS 选择器汇总",
      "chapter_level_two_url": "/css/css-selector.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p>对大多技术人员来说都比较熟悉 CSS 选择器，举一例子来说，假设给一个 p 标签增加一个类（class），可是执行后该 class 中的有些属性并没有起作用。通过 Firebug 查看，发现没有起作用的属性被覆盖了，这个时候突然意识到了 CSS 选择器的优先级问题。严格来讲，选择器的种类可以分为三种：标签名选择器、类选择器和ID选择器。而所谓的后代选择器和群组选择器只不过是对前三种选择器的扩展应用。而在标签内写入 style=\"\" 的方式，应该是 CSS 的一种引入方式，而不是选择器，因为根本就没有用到选择器。而一般人们将上面这几种方式结合在一起，所以就有了5种或6种选择器了。\n    <br>\n</p>\n<p><span><span><br></span></span>\n</p>\n<div style=\"text-align: center;\">\n    <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081520585048.png\" style=\"line-height: 1.7; font-size: 13px;\" alt=\"css选择器\">\n</div><span><span><br></span>\n\n<br>\n</span>\n<p>最基本的选择器是元素选择器(比如 div),ID 选择器(比如 #header)还有类选择器(比如.tweet)。\n    <br>\n</p>\n\n<h2><span style=\"font-weight: normal;\"><span style=\"line-height: 1.7; font-size: 13px;\">一些的不常见的选择器包括伪类选择器 (:hover)，很多复杂的 CSS3 和正则选择器，比如：first-child，class ^= “grid-”。</span><span style=\"line-height: 1.7; font-size: 13px;\">CSS选择器具有高效的继承性，引用 Steve Souders 的话， CSS 选择器效率从高到低的排序如下：</span></span></h2>\n\n<div></div>\n<p></p>\n<table class=\"reference\">\n    <tbody>\n        <tr>\n            <td>选择器</td>\n            <td>用法</td>\n        </tr>\n        <tr>\n            <td>id选择器</td>\n            <td>#myid</td>\n        </tr>\n        <tr>\n            <td>类选择器</td>\n            <td>.myclassname</td>\n        </tr>\n        <tr>\n            <td>标签选择器</td>\n            <td>div,h1,p</td>\n        </tr>\n        <tr>\n            <td>相邻选择器</td>\n            <td>h1+p</td>\n        </tr>\n        <tr>\n            <td>子选择器</td>\n            <td>ul &gt; li</td>\n        </tr>\n        <tr>\n            <td>后代选择器</td>\n            <td>li a</td>\n        </tr>\n        <tr>\n            <td>通配符选择器</td>\n            <td>*</td>\n        </tr>\n        <tr>\n            <td>属性选择器</td>\n            <td>a[rel=\"external\"]</td>\n        </tr>\n        <tr>\n            <td>伪类选择器</td>\n            <td>a:hover, li:nth-child</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n    <br>\n</p>\n<p><span>纵使ID选择器很快、高效，但是它也仅仅如此。从 Steve Souders 的 CSS Test 我们可以看出ID选择器和类选择器在速度上的差异很小很小。</span>\n\n    <br>\n    <br><span>在 Windows 系统上的 Firefox 6 上，我测得了一个简单类选择器的（reflow figure）重绘速度为 10.9ms，而ID选择器为 12.5ms，所以事实上ID比类选择器重绘要慢一点点。</span>\n\n    <br>\n    <br><span>ID选择器和类选择器在速度上的差异基本上没有关系。</span>\n\n    <br>\n    <br><span>在一个标签选择器(a)的测试上显示，它比类或ID选择器的速度慢了很多。在一个嵌套很深的后代选择器的测试上，显示数据为440左右！从这里我们可以看出ID/类选择器 和 元素/后代选择器中间的差异较大，但是相互之间的差异较小。</span>\n\n    <br>\n</p>\n<p><span><br></span>\n\n</p>\n\n<h2>选择器的优先级是怎么规定的呢？</h2>\n\n<div><span>一般而言，选择器越特殊，它的优先级越高。也就是选择器指向的越准确，它的优先级就越高。通常我们用1表示标签名选择器的优先级，用10表示类选择器的优先级，用 100 标示 ID选择器的优先级。比如上例当中 .polaris span {color:red;}的选择器优先级是 10 + 1 也就是11；而 .polaris 的优先级是10；浏览器自然会显示红色的字。理解了这个道理之后下面的优先级计算自是易如反掌：</span>\n\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>div.test1 .span var 优先级 1+10 +10 +1</p>\n    <p>span#xxx .songs li 优先级1+100 + 10 + 1</p>\n    <p>#xxx li 优先级 100 + 1</p>\n  </div>\n</div>\n<div><span></span>\n\n<span>对于什么情况下使用什么选择器，用不同选择器的原则是：</span>\n</div>\n<div></div>\n<div>\n    <ol>\n        <li><span><span>准确的选到要控制的标签；</span></span>\n        </li>\n        <li><span><span>使用最合理优先级的选择器；</span></span>\n        </li>\n        <li><span><span>HTML 和 CSS 代码尽量简洁美观。通常：</span></span>\n        </li>\n    </ol>\n</div>\n<div></div>\n<div></div>\n<div><span><span><br></span></span>\n</div>\n<div><span></span>\n\n    <p>①最常用的选择器是类选择器。</p>\n    <p>②li、td、dd等经常大量连续出现，并且样式相同或者相类似的标签，我们采用类选择器跟标签名选择器结合的后代选择器  .xx li/td/dd {}  的方式选择。</p>\n    <p>③极少的情况下会用 ID 选择器，当然很多前端开发人员喜欢 header，footer，banner，conntent 设置成 ID 选择器的，因为相同的样式在一个页面里不可能有第二次。</p>\n    <p>\n        <br>\n    </p>\n    <p>在这里不得不提使用在标签内引入 CSS 的方式来写 CSS，即：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;div style=\"color:red\"&gt;polaris&lt;/div&gt;\n            <br>\n        </p>\n      </div>\n</div>\n<code class=\"html hljs xml\">\n</code><span>这时候的优先级是最高的。我们给它的优先级是 1000，这种写法不推荐使用，特别是对新手来说。这也完全违背了内容和显示分离的思想。DIV+CSS 的优点也不能再有任何体现。</span>\n\n    <br>\n    <hr>\n</div>\n\n<h2>怎么提升CSS选择器性能？</h2>\n\n<div><strong>1、避免使用通用选择器</strong>\n\n    <br>\n</div>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>.content  {color: red;}</p>\n    </div>\n</div>\n\n<div>\n    <p>浏览器匹配文档中所有的元素后分别向上逐级匹配 class 为 content 的元素，直到文档的根节点。因此其匹配开销是非常大的，所以应避免使用关键选择器是通配选择器的情况。</p>\n    <p>\n        <br>\n    </p>\n    <p><strong>2、避免使用标签或 class 选择器限制 id 选择器</strong>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>避免使用</p>\n        <p>button#backButton {…}</p>\n        <p>避免使用\n            <br>\n        </p>\n        <p>.menu-left#newMenuIcon {…}</p>\n        <p>推荐使用\n            <br>\n        </p>\n        <p>#backButton {…}</p>\n        <p>推荐使用\n            <br>\n        </p>\n        <p>#newMenuIcon {…}</p>\n    </div>\n</div>\n\n    <p><strong>3、避免使用标签限制 class 选择器</strong>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>避免使用\n            <br>\n        </p>\n        <p>treecell.indented {…}</p>\n        <p>推荐使用\n            <br>\n        </p>\n        <p>.treecell-indented {…}</p>\n        <p>最优使用</p>\n        <p>.hierarchy-deep {…}</p>\n    </div>\n</div>\n\n    <p><strong>4、避免使用多层标签选择器。使用 class 选择器替换，减少 css 查找</strong>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>避免使用\n            <br>\n        </p>\n        <p>treeitem[mailfolder=\"true\"] &gt; treerow &gt; treecell {…}</p>\n        <p>推荐使用\n            <br>\n        </p>\n        <p>.treecell-mailfolder {…}</p>\n    </div>\n</div>\n\n    <p><strong>5、避免使用子选择器</strong>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>避免使用\n            <br>\n        </p>\n        <p>treehead treerow treecell {…}</p>\n        <p>BETTER, BUT STILL BAD </p>\n        <p>treehead &gt; treerow &gt; treecell {…}</p>\n        <p>推荐使用\n            <br>\n        </p>\n        <p>.treecell-header {…}</p>\n    </div>\n</div>\n\n    <p><strong>6、使用继承</strong>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>避免使用\n            <br>\n        </p>\n        <p>#bookmarkMenuItem &gt; .menu-left { list-style-image: url(blah) }</p>\n        <p>推荐使用</p>\n        <p>#bookmarkMenuItem { list-style-image: url(blah) }</p>\n    </div>\n</div>\n\n    <hr>\n</div>\n<div>\n     <h2><strong>简洁、高效的CSS</strong></h2><span>所谓高效的 CSS 就是让浏览器在查找 style 匹配的元素的时候尽量进行少的查找，下面列出一些我们常见的写 CSS 犯一些低效错误：</span>\n\n    <br>\n    <p style=\"text-align: center;\">\n        <br>\n    </p>\n    <p style=\"text-align: center;\">\n        <img src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081521457105.png\" alt=\"高效的CSS\">\n        <br>\n    </p>\n    <p style=\"text-align: center;\">\n        <br>\n    </p>\n    <p><strong>不要在ID选择器前使用标签名</strong>\n\n    </p>\n    <p>一般写法：DIV#divBox</p>\n    <p>更好写法：#divBox</p>\n    <p>解释： 因为ID选择器是唯一的，加上 div 反而增加不必要的匹配。</p>\n    <p>\n        <br>\n    </p>\n    <p><strong>不要再class选择器前使用标签名</strong>\n\n    </p>\n    <p>一般写法：span.red</p>\n    <p>更好写法：.red</p>\n    <p>解释：同第一条，但如果你定义了多个 .red，而且在不同的元素下是样式不一样，则不能去掉，比如你 CSS 文件中定义如下：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p.red{color:red;}  </p>\n        <p>span.red{color:#ff00ff}\n            <br>\n        </p>\n    </div>\n</div>\n\n    <p>如果是这样定义的就不要去掉，去掉后就会混淆，不过建议最好不要这样写</p>\n    <p>\n        <br>\n    </p>\n    <p><strong>尽量少使用层级关系</strong>\n\n    </p>\n    <p>一般写法：#divBox p .red{color:red;}</p>\n    <p>更好写法：.red{..}</p>\n    <p>\n        <br>\n    </p>\n    <p><strong>使用class代替层级关系</strong>\n\n    </p>\n    <p>一般写法：#divBox ul li a{display:block;}</p>\n    <p>更好写法：.block{display:block;}</p>\n    <hr>\n</div>\n\n<h2>必须记住的30类CSS选择器</h2>\n\n<div>大概大家都知道“id”,“class”以及“descendant”选择器，并且整体都在使用它们，那么你正在错误拥有更大级别的灵活性的选择方式。下面提到的大部分选择器都是在CSS3标准下的，所以它们只能在相应最新版本的浏览器中才能生效，你完全应该把这些都记在你聪明的脑袋里面。\n    <br>\n</div>\n<div>\n    <br>\n</div>\n<div>\n     <h2>1.*</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>*{</p>\n        <p>margin: 0;</p>\n        <p>padding: 0;}</p>\n       </div>\n</div>\n\n    <p>在我们看比较高级的选择器之前，应该认识下这个众所周知的清空选择器。星号呢会将页面上所有每一个元素都选到。许多开发者都用它来清空 margin 和 padding。当然你在练习的时候使用这个没问题，但是我不建议在生产环境中使用它。它会给浏览器凭添许多不必要的东西。* 也可以用来选择某元素的所有子元素。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#container * {</p>\n        <p>border: 1px solid black;}</p>\n     </div>\n</div>\n\n    <p>它会选中 #container 下的所有元素。当然，我还是不建议你去使用它，如果可能的话。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE6+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>2. #X</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>#container {</p>\n        <p>width: 960px;</p>\n        <p>margin: auto;}</p>\n        </div>\n</div>\n\n    <p>在选择器中使用#可以用 id 来定位某个元素。大家通常都会这么使用，然后使用的时候大家还是得相当小心的。需要问自己一下：我是不是必须要给这个元素来赋值个 id 来定位它呢？</p>\n    <p>id选择器是很严格的并且你没办法去复用它。如果可能的话，首先试试用标签名字，HTML5中的新元素，或者是伪类。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE6+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>3. .X</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>.error {</p>\n        <p>color: red;}</p>\n      </div>\n</div>\n\n    <p>这是个 class 选择器。它跟id选择器不同的是，它可以定位多个元素。当你想对多个元素进行样式修饰的时候就可以使用 class。当你要对某个特定的元素进行修饰那就是用 id 来定位它。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE6+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>4. X Y</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>li a {</p>\n        <p>text-decoration: none;}</p>\n    </div>\n</div>\n\n    <p>下一个常用的就是 descendant 选择器。如果你想更加具体的去定位元素，你可以使用它。例如，假如，你不需要定位所有的 a 元素，而只需要定位li标签下的 a 标签？这时候你就需要使用 descendant 选择器了。</p>\n    <p>专家提示：如果你的选择器像 X Y Z A B.error 这样，那你就错了。时刻都提醒自己，是否真的需要对那么多元素修饰。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE6+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>5. X</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a { color: red; }</p>\n        <p>ul { margin-left: 0; }</p>\n      </div>\n</div>\n\n    <p>如果你想定位页面上所有的某标签，不是通过id或者是‘class’，这简单，直接使用类型选择器。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE6+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>6. X:visited and X:link</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a:link {color:red;}</p>\n        <p>a:visited {color: purple;}</p>\n      </div>\n</div>\n\n    <p>我们使用:link这个伪类来定位所有还没有被访问过的链接。</p>\n    <p>另外，我们也使用:visited来定位所有已经被访问过的链接。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>7. X+Y</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul + p {</p>\n        <p>color: red;}</p>\n      </div>\n</div>\n\n    <p>这个叫相邻选择器。它指挥选中指定元素的直接后继元素。上面那个例子就是选中了所有ul标签后面的第一段，并将它们的颜色都设置为红色。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>8. X&gt;Y</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div#container &gt; ul {</p>\n        <p>border: 1px solid black;}</p>\n    </div>\n</div>\n\n    <p>X Y 和 X &gt; Y的差别就是后面这个指挥选择它的直接子元素。看下面的例子：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;div id=\"container\"&gt;</p>\n        <p>&lt;ul&gt;&lt;li&gt; List Item</p>\n        <p>&lt;ul&gt;&lt;li&gt; Child &lt;/li&gt;</p>\n        <p>&lt;/ul&gt;&lt;/li&gt;&lt;li&gt; List Item &lt;/li&gt;&lt;li&gt; List Item &lt;/li&gt;&lt;li&gt; List Item &lt;/li&gt;&lt;/ul&gt;</p>\n        <p>&lt;/div&gt;</p>\n       </div>\n</div>\n\n    <p>#container &gt; ul 只会选中id为‘container’的div下的所有直接ul元素。它不会定位到如第一个 li 下的 ul 元素。</p>\n    <p>由于某些原因，使用子节点组合选择器会在性能上有许多的优势。事实上，当在 javascript 中使用 css 选择器时候是强烈建议这么做的。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>9. X ~ Y</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul ~ p {</p>\n        <p>color: red;}</p>\n      </div>\n</div>\n\n    <p>兄弟节点组合选择器跟 X+Y 很相似，然后它又不是那么的严格。ul + p选择器只会选择紧挨跟着指定元素的那些元素。而这个选择器，会选择跟在目标元素后面的所有匹配的元素。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>10. X[title]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[title] {</p>\n        <p> color: green;}</p>\n        </div>\n</div>\n\n    <p>这个叫属性选择器，上面的这个例子中，只会选择有title属性的元素。那些没有此属性的锚点标签将不会被这个代码修饰。那再想想如果你想更加具体的去筛选？那…</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>11. X[href=\"foo\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[href=\"http://strongme.cn\" rel=\"external nofollow\" target=\"_blank\" ] {</p>\n        <p>color: #1f6053; /* nettuts green */}</p>\n     </div>\n</div>\n\n    <p>上面这片代码将会把 href 属性值为<a href=\"http://strongme.cn/\" rel=\"external nofollow\" target=\"_blank\">http://strongme.cn</a> 的锚点标签设置为绿色，而其他标签则不受影响。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">注意我们将值用双引号括起来了。那么在使用 Javascript 的时候也要使用双引号括起来。可以的话，尽量使用标准的 CSS3 选择器。    </div>\n</div>\n\n    <p>这样可以用了，但是还是有点死，如果不是这个链接，而是类似的链接，那么这时就得用正则表达式了。</p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>IE7+</li>\n        <li>Firefox</li>\n        <li>Chrome</li>\n        <li>Safari</li>\n        <li>Opera</li>\n    </ul>\n     <h2>12. X[href=\"strongme\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[href=\"strongme\"] {</p>\n        <p>color: #1f6053;}</p>\n       </div>\n</div>\n\n    <p>Tada,正是我们需要的，这样，就指定了<code>strongme</code>这个值必须出现在锚点标签的<code>href</code>属性中，不管是<code>strongme.cn</code>还是<code>strongme.com</code>还是<code>www.strongme.cn</code>都可以被选中。\n        <br>但是记得这是个很宽泛的表达方式。如果锚点标签指向的不是<code>strongme</code>相关的站点，如果要更加具体的限制的话，那就使用<code>^</code>和<code>$</code>，分别表示字符串的开始和结束。</p>\n    <p>兼容性</p>\n    <ul>\n        <li>\n            <p>IE7+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>13. X[href^=\"href\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[href^=\"http\"] {</p>\n        <p>background: url(path/to/external/icon.png) no-repeat;</p>\n        <p>padding-left: 10px; }</p>\n      </div>\n</div>\n\n    <p>大家肯定好奇过，有些站点的锚点标签旁边会有一个外链图标，我也相信大家肯定见过这种情况。这样的设计会很明确的告诉你会跳转到别的网站。\n        <br>用克拉符号就可以轻易做到。它通常使用在正则表达式中标识开头。如果我们想定位锚点属性<code>href</code>中以<code>http</code>开头的标签，那我们就可以用与上面相似的代码。</p>\n    <p>注意我们没有搜索​<code>http://</code>​，那是没必要的，因为它都不包含​<code>https://</code>​。\n\n    </p>\n    <p>那如果我们想找到所有指向一张图片的锚点标签呢？那我们来使用下<code>&amp;</code>字符。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE7+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>14. X[href$=\".jpg\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[href$=\".jpg\"] {</p>\n        <p>color: red; }</p>\n        </div>\n</div>\n\n    <p>这次我们又使用了正则表达式<code>$</code>，表示字符串的结尾处。这段代码的意思就是去搜索所有的图片链接，或者其它链接是以<code>.jpg</code>结尾的。但是记住这种写法是不会对<code>gifs</code>和<code>pngs</code>起作用的。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE7+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>15. X[data-*=\"foo\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[data-filetype=\"image\"] {</p>\n        <p>color: red;}</p>\n        </div>\n</div>\n\n    <p>在回到第8条，我们如何把所有的图片类型都选中呢<code>png</code>,<code>jpeg</code>,’​<code>jpg</code>​’,'​<code>gif</code>​’？我们可以使用多选择器。看下面：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[href$=\".jpg\"],</p>\n        <p>a[href$=\".jpeg\"],</p>\n        <p>a[href$=\".png\"],</p>\n        <p>a[href$=\".gif\"] {</p>\n        <p>color: red; }</p>\n    </div>\n</div>\n\n    <p>但是这样写着很蛋疼啊，而且效率会很低。另外一个办法就是使用自定义属性。我们可以给每个锚点加个属性<code>data-filetype</code>指定这个链接指向的图片类型。\n        <br>[html]\n        <br>Image Link 那有了这个钩子，我们就可以去用标准的办法只去选定文件类型为<code>image</code>的锚点了。\n        <br>\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[data-filetype=\"image\"] {</p>\n        <p>color: red; }</p>\n     </div>\n</div>\n\n    <p>\n        <br>\n    </p>\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>\n            <p>IE7+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>16. X[foo~=\"bar\"]</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>a[data-info~=\"external\"] {</p>\n        <p>color: red; }</p>\n        <p>a[data-info~=\"image\"] {</p>\n        <p>border: 1px solid black; }</p>\n      </div>\n</div>\n\n    <p>这个我想会让你的小伙伴惊呼妙极了。很少有人知道这个技巧。这个<code>~</code>符号可以定位那些某属性值是空格分隔多值的标签。\n        <br>继续使用第15条那个例子，我们可以设置一个<code>data-info</code>属性，它可以用来设置任何我们需要的空格分隔的值。这个例子我们将指示它们为外部连接和图片链接。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p> Click Me, Fool\n            <br>\n        </p>\n        </div>\n</div>\n\n    <p>给这些元素设置了这个标志之后，我们就可以使用<code>~</code>来定位这些标签了。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>/ Target data-info attr that contains the value \"external\" /</p>\n        <p>a[data-info~=\"external\"] {</p>\n        <p>color: red;}</p>\n        <p>/ And which contain the value \"image\" /</p>\n        <p>a[data-info~=\"image\"] {</p>\n        <p>border: 1px solid black;}</p>\n     </div>\n</div>\n\n    <p>## 17. X:checked</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>input[type=radio]:checked {</p>\n        <p>border: 1px solid black; }</p>\n     </div>\n</div>\n\n    <p>上面这个伪类写法可以定位那些被选中的单选框和多选框，就是这么简单。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>18. X:after</h2>\n\n    <p><code>before</code>和<code>after</code>这俩伪类。好像每天大家都能找到使用它们的创造性方法。它们会在被选中的标签周围生成一些内容。\n        <br>当使用<code>.clear-fix</code>技巧时许多属性都是第一次被使用到里面的。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>.clearfix:after {</p>\n        <p>    content: \"\";</p>\n        <p>    display: block;</p>\n        <p>    clear: both;</p>\n        <p>    visibility: hidden;</p>\n        <p>    font-size: 0;</p>\n        <p>    height: 0;</p>\n        <p>  }</p>\n        <p>.clearfix { </p>\n        <p>   display: inline-block; </p>\n        <p>   _height: 1%;</p>\n        <p>}</p>\n      </div>\n</div>\n\n    <p>上面这段代码会在目标标签后面补上一段空白，然后将它清除。这个方法你一定得放你的聚宝盆里面。特别是当<code>overflow:hidden</code>方法不顶用的时候，这招就特别管用了。\n        <br>\n        <br>\n    </p>\n    <p><span>根据 CSS3 标准规定，可以使用两个冒号<code>::</code>。然后为了兼容性，浏览器也会接受一个双引号的写法。其实在这个情况下，用一个冒号还是比较明智的。</span>\n\n    </p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE8+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>19. X:hover</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div:hover {</p>\n        <p>background: #e3e3e3; }</p>\n    </div>\n</div>\n\n    <p>不用说，大家肯定知道它。官方的说法是<code>user action pseudo class</code>.听起来有点儿迷糊，其实还好。如果想在用户鼠标飘过的地方涂点儿彩，那这个伪类写法可以办到。</p>\n    <p><span>注意旧版本的IE只会对加在锚点<code>a</code>标签上的<code>:hover</code>伪类起作用。</span>\n\n    </p>\n    <p>通常大家在鼠标飘过锚点链接时候加下边框的时候用到它。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">        <p>a:hover {</p>\n        <p> border-bottom: 1px solid black;</p>\n        <p>}</p>\n      </div>\n</div>\n\n    <p>专家提示：​<code>border-bottom:1px solid black</code>​;比​<code>text-decoration:underline</code>​;要好看很多。\n\n    </p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE6+(IE6只能在锚点标签上起作用)</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>20. X:not(selector)</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div:not(#container) {</p>\n        <p>   color: blue;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p><code>取反</code>伪类是相当有用的，假设我们要把除<code>id</code>为<code>container</code>之外的所有<code>div</code>标签都选中。那上面那么代码就可以做到。</p>\n    <p>或者说我想选中所有出段落标签之外的所有标签。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>:not(p) {</p>\n        <p>  color: green;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>21. X::pseudoElement</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p : : first-line {</p>\n        <p>  font-weight: bold;</p>\n        <p>  font-size:1.2em;</p>\n        <p>}</p>\n       </div>\n</div>\n\n    <p>我们可以使用<code>::</code>来选中某标签的部分内容，如第一段，或者是第一个字没有。但是记得必须使用在块式标签上才起作用。</p>\n    <p>伪标签是由两个冒号 ​<code>::</code>​ 组成的。</p>\n    <p><span>定位第一个字</span>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p::first-letter {</p>\n        <p>   float: left;</p>\n        <p>   font-size: 2em;</p>\n        <p>   font-weight: bold;</p>\n        <p>   font-family: cursive;</p>\n        <p>   padding-right: 2px;</p>\n        <p>}</p>\n     </div>\n</div>\n\n    <p>上面这段代码会找到页面上所有段落，并且指定为每一段的第一个字。</p>\n    <p>它通常在一些新闻报刊内容的重点突出会使用到。</p>\n    <p>定位某段的第一行</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p::first-line {</p>\n        <p>   font-weight: bold;</p>\n        <p>   font-size: 1.2em;</p>\n        <p>}</p>\n       </div>\n</div>\n\n    <p>跟<code>::first-line</code>相似，会选中段落的第一行 。</p>\n    <p>为了兼容性，之前旧版浏览器也会兼容单冒号的写法，例如<code>:first-line</code>,<code>:first-letter</code>,<code>:before</code>,<code>:after</code>.但是这个兼容对新介绍的特性不起作用。</p>\n    <p>兼容性</p>\n    <ul>\n        <li>\n            <p>IE6+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>22. X:nth-child(n)</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>li:nth-child(3) {</p>\n        <p>   color: red;</p>\n        <p>}</p>\n       </div>\n</div>\n\n    <p>还记得我们面对如何取到推跌式标签的第几个元素是无处下手的时光么，有了<code>nth-child</code>那日子就一去不复返了。</p>\n    <p>请注意<code>nth-child</code>接受一个整形参数，然后它不是从0开始的。如果你想获取第二个元素那么你传的值就是<code>li:nth-child(2)</code>.</p>\n    <p>我们甚至可以获取到由变量名定义的个数个子标签。例如我们可以用<code>li:nth-child(4n)</code>去每隔3个元素获取一次标签。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n    </ul>\n     <h2>23. X:nth-last-child(n)</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>li:nth-last-child(2) {</p>\n        <p>   color: red;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>假设你在一个<code>ul</code>标签中有N多的元素，而你只想获取最后三个元素，甚至是这样<code>li:nth-child(397)</code>，你可以用<code>nth-last-child</code>伪类去代替它。</p>\n    <p>这个技巧可以很正确的代替第16个TIP，不同的就是它是从结尾处开始的，倒回去的。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>24. X:nth-of-type(n)</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul:nth-of-type(3) {</p>\n        <p>   border: 1px solid black;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>曾几何时，我们不想去选择子节点，而是想根据元素的类型来进行选择。</p>\n    <p>想象一下有5个<code>ul</code>标签。如果你只想对其中的第三个进行修饰，而且你也不想使用<code>id</code>属性，那你就可以使用<code>nth-of-type(n)</code>伪类来实现了，上面的那个代码，只有第三个<code>ul</code>标签会被设置边框。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n    </ul>\n     <h2>25. X:nth-last-of-type(n)</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul:nth-last-of-type(3) {</p>\n        <p>   border: 1px solid black;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>同样，也可以类似的使用<code>nth-last-of-type</code>来倒序的获取标签。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>26. X:first-child</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul li:first-child {</p>\n        <p>   border-top: none;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>这个结构性的伪类可以选择到第一个子标签，你会经常使用它来取出第一个和最后一个的边框。</p>\n    <p>假设有个列表，每个标签都有上下边框，那么效果就是第一个和最后一个就会看起来有点奇怪。这时候就可以使用这个伪类来处理这种情况了。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE7+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>27. X:last-child</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul &gt; li:last-child {</p>\n        <p>   color: green;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>跟<code>first-child</code>相反，<code>last-child</code>取的是父标签的最后一个标签。</p>\n    <p><span>例如</span>\n\n        <br><span>标签</span>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p> List Item    </p>\n        <p> List Item </p>\n        <p> List Item </p>\n    </div>\n</div>\n\n    <p>这里没啥内容，就是一个了 List。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul {</p>\n        <p> width: 200px;</p>\n        <p> background: #292929;</p>\n        <p> color: white;</p>\n        <p> list-style: none;</p>\n        <p> padding-left: 0;</p>\n        <p>}</p>\n        <p>li {</p>\n        <p> padding: 10px;</p>\n        <p> border-bottom: 1px solid black;</p>\n        <p> border-top: 1px solid #3c3c3c;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>上面的代码将设置背景色，移除浏览器默认的内边距，为每个<code>li</code>设置边框以凸显一定的深度。</p>\n    <p style=\"text-align: center;\">\n        <img alt=\"背景色\" src=\"https://atts.w3cschool.cn/attachments/day_161108/201611081507131880.jpg\">\n    </p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>28. X:only-child</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>div p:only-child {</p>\n        <p>   color: red;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>说实话，你会发现你几乎都不会用到这个伪类。然而，它是可用的，有会需要它的。</p>\n    <p>它允许你获取到那些只有一个子标签的父标签。就像上面那段代码，只有一个段落标签的<code>div</code>才被着色。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p> My paragraph here. </p>\n        <p> Two paragraphs total. </p>\n        <p> Two paragraphs total. </p>\n      </div>\n</div>\n\n    <p>上面例子中，第二个<code>div</code>不会被选中。一旦第一个<code>div</code>有了多个子段落，那这个就不再起作用了。</p>\n    <p>兼容性</p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>29. X:only-of-type</h2>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>li:only-of-type {</p>\n        <p>   font-weight: bold;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>结构性伪类可以用的很聪明。它会定位某标签只有一个子标签的目标。设想你想获取到只有一个子标签的<code>ul</code>标签？</p>\n    <p>使用<code>ul li</code>会选中所有<code>li</code>标签。这时候就要使用<code>only-of-type</code>了。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul &gt; li:only-of-type {</p>\n        <p>   font-weight: bold;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>兼容性\n        <br>\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox 3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n    <p><strong><br></strong>\n\n    </p>\n    <p><strong>30. X:first-of-type <code>first-of-type</code></strong>\n\n    </p>\n    <p>伪类可以选择指定标签的第一个兄弟标签。</p>\n    <p><span>测试</span>\n\n    </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>My paragraph here.    </p>\n        <p> List Item 1   </p>\n        <p> List Item 2       </p>\n        <p> List Item 3     </p>\n        <p> List Item 4 </p>\n    </div>\n</div>\n\n    <p>来你把List Item 2取出来，如果你已经取出来或者是放弃了，来继续。</p>\n    <p>解决办法1\n        <br>办法很多，我们看一些比较方便的。首先是<code>first-of-type</code>。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul:first-of-type &gt; li:nth-child(2) {</p>\n        <p>   font-weight: bold;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>找到第一个<code>ul</code>标签，然后找到直接子标签<code>li</code>，然后找到第二个子节点。\n        <br><span>解决办法2</span>\n\n        <br>另一个解决办法就是邻近选择器。</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p + ul li:last-child {</p>\n        <p>   font-weight: bold;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>这种情况下，找到<code>p</code>下的直接<code>ul</code>标签，然后找到它的最后一个直接子标签。</p>\n    <p><span>解决办法3</span>\n\n        <br>我们可以随便玩耍这些选择器。来看看：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>ul:first-of-type li:nth-last-child(1) {</p>\n        <p>   font-weight: bold;</p>\n        <p>}</p>\n    </div>\n</div>\n\n    <p>先获取到页面上第一个<code>ul</code>标签，然后找到最后一个子标签。</p>\n    <p><span>兼容性</span>\n\n    </p>\n    <ul>\n        <li>\n            <p>IE9+</p>\n        </li>\n        <li>\n            <p>Firefox 3.5+</p>\n        </li>\n        <li>\n            <p>Chrome</p>\n        </li>\n        <li>\n            <p>Safari</p>\n        </li>\n        <li>\n            <p>Opera</p>\n        </li>\n    </ul>\n     <h2>结论</h2>\n\n    <p>如果你想向旧版本浏览器妥协，比如IE6，那你用这些新的选择器的时候还是得小心点。但别让IE6阻止你去学这些新的技能。那你就对自己太残忍了。记得多查查<a href=\"http://www.quirksmode.org/css/contents.html\" rel=\"external nofollow\" target=\"_blank\">兼容性列表</a>，或者使用<a href=\"http://code.google.com/p/ie7-js/\" rel=\"external nofollow\" target=\"_blank\">Dean Edward's excellent IE9.js script </a>来让你的浏览器具有这些特性。</p>\n    <p>第二个，使用向 jQuery 的时候，尽量使用原生的 CSS3 选择器。可能 活让你的代码跑的很快。这样选择器引擎就可以使用浏览器原生解析器，而不是选择器自己的。</p>\n    <br>\n</div>\n<div><span style=\"font-size: 13px; line-height: 1.7;\"></span>\n\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 4,
      "chapter_level_one_id": "88b9abc5ec53c93123234a9284537150",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 相关教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b3ba5b8365ead0aad73814878c763b6e",
      "chapter_level_two_parent_id": "88b9abc5ec53c93123234a9284537150",
      "chapter_level_two_name": "CSS 入门教程",
      "chapter_level_two_url": "https://www.w3cschool.cn/css/introduction2mci2080.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h3>CSS概述</h3>\n<p> 1. Cascading Style Sheets 层叠样式表，它可以控制多重网页的样式和布局；</p>\n<p> 2. 需具备的基础知识：HTML、XHTML；</p>\n<p> 3. 主要实现：</p>\n<p>    样式</p>\n<p>     ----- 定义如何显示 HTML 元素；</p>\n<p>     ----- 存储在样式表中；</p>\n<p>     ----- 添加到 HTML4.0 中，解决内容与表现分离；</p>\n<p>     ----- 多个样式定义可以层叠为一。</p>\n<p>\n    <br>\n</p><h3>CSS解决的问题--更好的利用HTML</h3>\n<p>1. 背景</p><p>HTML 标签原本被设计为用于定义文档内容。即通过使用 &lt;h1&gt;、&lt;p&gt;、&lt;table&gt; 这样的标签，来表达“这是标题”、“这是段落”、“这是表格”之类的信息。</p><p>同时文档的布局由浏览器来完成，而不使用任何的格式化标签。</p><p>由于两种主要的浏览器（Netscape和Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档，内容清晰地独立于文档表现层的站点变得越来越困难。</p><p><br></p><p>2. 样式</p><p></p><ul><li>为解决这个问题，样式（Style）肩负起了 HTML 标准化的使用，这样所有的主流浏览器均支持层叠样式表；</li><li>极大地提高了工作效率。样式表定义如何显示 HTML 元素，就像 HTML3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</li><li>多重样式层叠为一个。样式表允许以多种方式规定样式信息。它可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。</li><li> 甚至可以在同一个 HTML 文档内部引用多个外部样式表。</li></ul><p></p>\n\n<h2>例子<br></h2>\n\n<p><span>CSS代表层叠样式表。它定义如何显示 HTML 元素。</span>\n\n</p>\n<p><span>以下 HTML 代码包含样式的 CSS。</span>\n\n</p><pre lang=\"html\"><code class=\"html\">&lt;!DOCTYPE HTML&gt; \n&lt;html&gt; \n    &lt;head&gt; \n        &lt;style&gt; \n        a {\n            background-color:grey; \n            color:white \n        } \n        &lt;/style&gt; \n    &lt;/head&gt; \n    &lt;body&gt; \n        &lt;a href = \"https://www.w3cschool.cn\"&gt;Visit the website&lt;/a&gt; \n    &lt;/body&gt; \n&lt;/html&gt;</code></pre>\n\n<p><span>上面的代码设置背景颜色和前景颜色。</span>\n\n</p>\n<p><span><span>样式通常保存在外部 .css 文件中。</span>\n\n    <br>\n    </span>\n</p>\n<p><span></span>\n\n</p>\n\n<h2><span>浏览器样式</span></h2><span>浏览器使用级联和继承来确定在显示元素时要用于属性的值。</span>\n\n<br>\n<p><span><span>每个元素都有一些 CSS 属性。</span>\n\n    <br>\n    </span>\n</p>\n<p><span><span>对于每个属性，浏览器需要遍历所有样式的源。</span>\n\n    <br>\n    </span>\n</p>\n<p><span><span>你已经看到了三种不同的方式来定义样式</span>\n\n    <br>\n    </span>\n</p>\n<p><span></span>\n\n</p>\n<ul>\n    <li>内联</li>\n    <li><span>嵌入式</span>\n\n    </li>\n    <li><span>外部样式表</span>\n\n    </li>\n</ul><span>还有两个其他的样式来源，你需要知道。</span>\n\n<br>\n<p><span><span>如果没有指定其他样式，浏览器样式或用户代理样式是浏览器应用于元素的默认样式。</span>\n\n    <br>\n    </span>\n</p>\n<p><span><span>这些样式在浏览器之间略有不同。</span>\n\n    <br>\n    </span>\n</p>\n<p><span>以下代码显示了一个不包含样式的简单 HTML 文档。</span>\n\n</p><pre lang=\"html\"><code class=\"html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;a href=\"https://www.w3cschool.cn\"&gt;Visit the website&lt;/a&gt;\n    &lt;p&gt;I  like &lt;span&gt;apples&lt;/span&gt; and oranges.&lt;/p&gt;\n    &lt;a href=\"https://www.w3.org\" rel=\"external nofollow\" target=\"_blank\" &gt;Visit the W3C website&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><span>链接的文本内容显示为蓝色，带下划线。</span>\n\n</p>\n<p><span><span>浏览器正在应用类似于以下代码中所示的样式。</span></span>\n</p><pre lang=\"css\"><code class=\"css\">a  {\n    color: blue;\n    text-decoration:  underline;\n}</code></pre><span>浏览器没有每个 HTML 元素的默认样式。</span> <h3>小结</h3><p>以上是从CSS的基本作用谈起的，它内部的需要基础知识，在下文中会提到，如 CSS 基础语法、选择器、样式、框模型定位等内容。<br></p><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 3,
      "chapter_level_one_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS实例",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "6fcf720527a2d9b29d8b5a0174db4451",
      "chapter_level_two_parent_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_two_name": "CSS 测验",
      "chapter_level_two_url": "/css/css-css_quiz.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><div><p><strong>您可以通过 W3Cschool 的测验程序来测试您的 CSS 技能。</strong></p></div><div><h2>关于本测验</h2><p>本测验包含 20 道题，每道题的最长答题时间是 20 分钟（这是由于每个 session 的默认有效时间是 20 分钟）。</p><p>本测验是非官方的测试，它仅仅提供了一个了解您对 CSS 的掌握程度的工具。</p></div><div><h2>测验会被记分</h2><p>每道题的分值是 1 分。在您完成全部的 20 道题之后，系统会为您的测验打分，并提供您做错的题目的正确答案。其中，绿色为正确答案，而红色为错误答案。</p><p><a href=\"//www.w3cschool.cn/exam/test?id=97453\" target=\"_blank\">现在就开始测验</a>！祝您好运。</p></div><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 3,
      "chapter_level_one_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS实例",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "cbd6476ef35b502833d463e6cbdc95ce",
      "chapter_level_two_parent_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_two_name": "CSS 实例",
      "chapter_level_two_url": "/css/css-csse_examples.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><div class=\"article-body\"><div class=\"article-intro\" id=\"content\"><h1>CSS <span class=\"color_h1\">实例</span></h1><h2 class=\"tutheader\">CSS背景</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_body\" target=\"_blank\">设置页面的背景颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_elements\" target=\"_blank\">设置不同元素的背景颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image\" target=\"_blank\">设置一个图像作为页面的背景</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_bad\" target=\"_blank\">错误的的背景图片</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_gradient2\" target=\"_blank\">如何在水平方向重复背景图像</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_position\" target=\"_blank\">如何定位背景图像</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-attachment\" target=\"_blank\">一个固定的背景图片（这个图片不会随页面的其余部分滚动）</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand\" target=\"_blank\">在一个声明的所有背景属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand2\" target=\"_blank\">高级的背景例子</a></p><p><a href=\"css-background.html\"><strong>背景属性的解释</strong></a></p><h2 class=\"tutheader\">CSS文本</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_color\" target=\"_blank\">设置不同元素的文本颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-align_all\" target=\"_blank\">文本对齐</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration_link\" target=\"_blank\">移除链接下划线</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration\" target=\"_blank\">装饰文字</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-transform\" target=\"_blank\">控制文本中的字母</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-indent\" target=\"_blank\">缩进文本</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_letter-spacing\" target=\"_blank\">指定了字符之间的空间</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_line-height\" target=\"_blank\">指定了行与行之间的空间</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-direction\" target=\"_blank\">设置元素的文本方向</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-word-spacing\" target=\"_blank\">增加单词之间的空格</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-white-space\" target=\"_blank\">在一个元素内禁用文字换行</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_vertical-align\" target=\"_blank\">内部文字图像的垂直对齐</a></p><p> </p><p><a href=\"css-text.html\" target=\"_blank\"><strong>Text属性的解释</strong></a></p><h2 class=\"tutheader\">CSS的字体</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-family\" target=\"_blank\">设置文本的字体</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size\" target=\"_blank\">设置字体大小</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_px\" target=\"_blank\">用px设置的字体的大小</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_em\" target=\"_blank\">用em设置的字体的大小</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_percent_em\" target=\"_blank\">用百分比和em设置字体的大小</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-style\" target=\"_blank\">设置字体样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-variant\" target=\"_blank\">设置字体的异体</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-weight\" target=\"_blank\">设置字体的粗细</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font\" target=\"_blank\">在一个声明的所有字体属性</a></p><p> </p><p><a href=\"css-font.html\" target=\"_blank\"><strong>Font属性的解释</strong></a></p><h2 class=\"tutheader\">CSS链接</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" target=\"_blank\">为访问/未访问链接添加不同的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_decoration\" target=\"_blank\">在链接上使用文本装饰</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_background\" target=\"_blank\">指定链接的背景颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\" target=\"_blank\">超链接添加其他样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_advanced\" target=\"_blank\">高级 - 创建链接框</a></p><p> </p><p><a href=\"css-link.html\" target=\"_blank\"><strong>链接属性的解释</strong></a></p><h2 class=\"tutheader\">CSS列表</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-type_all\" target=\"_blank\">列表中所有不同的列表项标记</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image\" target=\"_blank\">设置作为列表项标记的图像</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image_crossbrow\" target=\"_blank\">使用Crossbrowser解决方案设置一个列表项标记的图像</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style\" target=\"_blank\">在一个声明中的所有列表属性</a></p><p> </p><p><a href=\"css-list.html\" target=\"_blank\"><strong>列表属性的解释</strong></a></p><h2 class=\"tutheader\">CSS表格</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border\" target=\"_blank\">指定一个表的Th，TD元素和黑色边框</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border-collapse\" target=\"_blank\">使用border-collapse</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_width\" target=\"_blank\">指定表格的宽度和高度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_align\" target=\"_blank\">设置内容的水平对齐方式（文本对齐）</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_vertical-align\" target=\"_blank\">设置内容的垂直对齐（垂直对齐）</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_padding\" target=\"_blank\">指定TH和TD元素的填充</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_color\" target=\"_blank\">指定表格边框的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_caption-side\" target=\"_blank\">设置表格标题的位置</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_fancy\" target=\"_blank\">创建一个奇特的表</a></p><p> </p><p><a href=\"css-table.html\" target=\"_blank\"><strong>表格属性的解释</strong></a></p><h2 class=\"tutheader\">CSS盒模型</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_boxmodel_width\" target=\"_blank\">指定元素的总宽度为250像素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_boxmodel_width_doctype\" target=\"_blank\">使用Crossbrowser解决方案指定元素的总宽度为250像素的 </a></p><p> </p><p><a href=\"css-boxmodel.html\" target=\"_blank\"><strong>盒模型的解释</strong></a></p><h2 class=\"tutheader\">CSS边框</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-width\" target=\"_blank\">设置四个边框的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-width\" target=\"_blank\">设置上边框的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-width\" target=\"_blank\">设置底部边框的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-width\" target=\"_blank\">设置左边框的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-width\" target=\"_blank\">设置右边框的宽度</a></p><p> </p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-style\" target=\"_blank\">设置四个边框的样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-style\" target=\"_blank\">设置上边框的样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-style\" target=\"_blank\">设置下边框的样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-style\" target=\"_blank\">设置左边框的样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-style\" target=\"_blank\">设置右边框的样式</a></p><p> </p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-color\" target=\"_blank\">设置四个边框的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-color\" target=\"_blank\">设置上边框的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-color\" target=\"_blank\">设置下边框的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-color\" target=\"_blank\">设置左边框的颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-color\" target=\"_blank\">设置右边框的颜色</a></p><p> </p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border\" target=\"_blank\">在一个声明中的所有边框属性</a></p><p> </p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-style2\" target=\"_blank\">每边设置不同的边框</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top\" target=\"_blank\">在一个声明中的所有顶部边框属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom\" target=\"_blank\">在一个声明中的所有下边框属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left\" target=\"_blank\">在一个声明中的所有左边框属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right\" target=\"_blank\">在一个声明中的所有右边框属性</a></p><p> </p><p><a href=\"css-border.html\" target=\"_blank\"><strong>边框属性的解释</strong></a></p><h2 class=\"tutheader\">CSS轮廓</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline\" target=\"_blank\">围绕一个元素（outline），绘制一条线</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-style\" target=\"_blank\">设置轮廓的样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-color\" target=\"_blank\">设置轮廓颜色</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-width\" target=\"_blank\">设置轮廓的宽度</a></p><p> </p><p><a href=\"css-outline.html\" target=\"_blank\"><strong>轮廓属性的解释</strong></a></p><h2 class=\"tutheader\">CSS边距</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin_sides\" target=\"_blank\">指定一个元素的边距</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin_shorthand\" target=\"_blank\">边距缩写属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-top\" target=\"_blank\">文本顶部边距设置的值使用厘米</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-bottom_percent\" target=\"_blank\">使用百分比值设置文本的底部边缘</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-left\" target=\"_blank\">使用厘米值设置文本的左边距</a></p><p> </p><p><a href=\"css-margin.html\" target=\"_blank\"><strong>Margin属性的解释</strong></a></p><h2 class=\"tutheader\">CSS填充</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-left\" target=\"_blank\">设置元素的左部填充</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-right\" target=\"_blank\">设置元素的右部填充</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-top\" target=\"_blank\">设置元素的顶部填充</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-bottom\" target=\"_blank\">设置元素的底部填充</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding\" target=\"_blank\">在一个声明中的所有填充属性</a></p><p> </p><p><a href=\"css-padding.html\" target=\"_blank\"><strong>padding属性的解释</strong></a></p><h2 class=\"tutheader\">CSS分组和嵌套</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_grouping\" target=\"_blank\">组选择器</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_nesting\" target=\"_blank\">嵌套选择器</a></p><p> </p><p><a href=\"css-grouping-nesting.html\" target=\"_blank\"><strong>分组和嵌套解释</strong></a></p><h2 class=\"tutheader\">CSS尺寸</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height\" target=\"_blank\">使用像素值设置图像的高度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height_percent\" target=\"_blank\">使用百分比设置图像的高度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_width\" target=\"_blank\">使用像素值来设置元素的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_width_percent\" target=\"_blank\">使用百分比来设置元素的宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-height\" target=\"_blank\">设置元素的最大高度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-width\" target=\"_blank\">使用像素值设置元素的最大宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-width_percent\" target=\"_blank\">使用百分比来设置元素的最大宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-height\" target=\"_blank\">设置元素的最低高度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-width\" target=\"_blank\">使用像素值来设置元素的最小宽度</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-width_percent\" target=\"_blank\">使用百分比来设置元素的最小宽度</a></p><p> </p><p><a href=\"css-dimension.html\" target=\"_blank\"><strong>尺寸属性的解释</strong></a></p><h2 class=\"tutheader\">CSS显示</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_hidden\" target=\"_blank\">如何隐藏一个元素(visibility:hidden)</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_none\" target=\"_blank\">如何不显示元素(display:none)</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display\" target=\"_blank\">如何显示一个元素的内联元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_block\" target=\"_blank\">如何显示一个元素的块元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_collapse\" target=\"_blank\">H如何使用表格的collapse属性</a></p><p> </p><p><a href=\"css-display-visibility.html\" target=\"_blank\"><strong>Display属性的解释</strong></a></p><h2 class=\"tutheader\">CSS定位</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_fixed\" target=\"_blank\">元素相对浏览器窗口的位置</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_relative\" target=\"_blank\">元素的相对定位</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_absolute\" target=\"_blank\">元素的绝对定位</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_zindex\" target=\"_blank\">重叠的元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_clip\" target=\"_blank\">设置元素的形状</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_overflow\" target=\"_blank\">如何使用滚动条来显示元素内溢出的内容</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_pos_overflow_auto\" target=\"_blank\">如何设置浏览器自动溢出处理</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_top\" target=\"_blank\">使用像素值设置图像的顶部</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_bottom\" target=\"_blank\">使用像素值设置图像的底部</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_left\" target=\"_blank\">使用像素值设置图像的左边</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_right\" target=\"_blank\">使用像素值设置图像的右边</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_cursor\" target=\"_blank\">更改光标</a></p><p> </p><p><a href=\"css-positioning.html\" target=\"_blank\"><strong>定位属性的解释</strong></a></p><h2 class=\"tutheader\">CSS浮动</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float\" target=\"_blank\">简单的使用float属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float2\" target=\"_blank\">为图像添加边框和边距并浮动到段落的左侧</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float3\" target=\"_blank\">标题和图片向右侧浮动</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float4\" target=\"_blank\">让段落的第一个字母浮动到左侧</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_elements\" target=\"_blank\">使用float属性创建一个图片廊</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_clear\" target=\"_blank\">开启float - clear属性</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float5\" target=\"_blank\">创建一个水平菜单</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float6\" target=\"_blank\">创建一个没有表格的网页</a></p><p> </p><p><a href=\"css-float.html\" target=\"_blank\"><strong>Float属性的解释</strong></a></p><h2 class=\"tutheader\">CSS对齐元素</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_container\" target=\"_blank\">使用margin的中间调整</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_pos\" target=\"_blank\">左/右位置对齐</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_pos_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float\" target=\"_blank\">左/右对齐，浮动</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐，浮动</a></p><p> </p><p><a href=\"css-align.html\" target=\"_blank\"><strong>对齐属性解释</strong></a></p><h2 class=\"tutheader\">CSS生成的内容</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_content\" target=\"_blank\">把括号内的URL用content属性插入到每个链接后面</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_counter-reset\" target=\"_blank\">章节和分节的编号是\"第1节\"，\"1.1\"，\"1.2\"等</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_quotes\" target=\"_blank\">quotes 属性指定了引号</a></p><h2 class=\"tutheader\">CSS伪类</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" target=\"_blank\">添加不同颜色的超链接</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\" target=\"_blank\">给超链接添加其他样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_focus\" target=\"_blank\">使用：焦点</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child1\" target=\"_blank\">:first-child - 匹配了第一个p元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child2\" target=\"_blank\">:first-child - 匹配了p元素中的第一个I元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child3\" target=\"_blank\">:first-child - 匹配了第一个p元素中的所有I元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_lang\" target=\"_blank\">使用:lang</a></p><p> </p><p><a href=\"css-pseudo-classes.html\" target=\"_blank\"><strong>伪类的解释</strong></a></p><h2 class=\"tutheader\">CSS伪元素</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstletter\" target=\"_blank\">把文本的第一个字母设为特殊的字母</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline\" target=\"_blank\">把第一行文字设置为特殊</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline_letter\" target=\"_blank\">把第一行文字的第一个字母设置为特殊</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_before\" target=\"_blank\">使用：在一个元素之前插入一些内容</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_after\" target=\"_blank\">使用：在一个元素之后插入一些内容</a></p><p> </p><p><a href=\"https://www.w3cschool.cn/css/css-pseudo-elements.html\" target=\"_blank\"><b>伪元素的解释</b></a></p><h2 class=\"tutheader\">CSS导航栏</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_vertical_advanced\" target=\"_blank\">垂直导航栏的全样式</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal_float_advanced\" target=\"_blank\">水平导航栏的全样式</a></p><p> </p><p><a href=\"css-navbar.html\" target=\"_blank\"><strong>导航栏的解释</strong></a></p><h2 class=\"tutheader\">CSS图片廊</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_gallery\" target=\"_blank\">图片廊</a></p><p> </p><p><a href=\"css-image-gallery.html\" target=\"_blank\"><strong>图片廊解释</strong></a></p><h2 class=\"tutheader\">CSS图像的不透明度</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_transparency\" target=\"_blank\">创建透明图像 - 鼠标悬停效果</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_transparency\" target=\"_blank\">创建一个背景图像与文本的透明框</a></p><p> </p><p><a href=\"css-image-transparency.html\" target=\"_blank\"><strong>图像的不透明度解释</strong></a></p><h2 class=\"tutheader\">CSS图像拼合</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_img\" target=\"_blank\">图像拼合</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_nav\" target=\"_blank\">图像拼合-导航列表</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_hover_nav\" target=\"_blank\">悬停效果与图像拼合</a></p><p> </p><p><a href=\"css-image-sprites.html\" target=\"_blank\"><strong>图像拼合解释</strong></a></p><h2 class=\"tutheader\">CSS属性选择器</h2><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_att\" target=\"_blank\">选择具有title属性的元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_value\" target=\"_blank\">选择标题=一个特定值的元素</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_space\" target=\"_blank\">选择标题=一个特定值的元素(使用（~）分隔属性和值)</a></p><p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_hyphen\" target=\"_blank\">选择标题=一个特定值的元素(使用（|）分隔属性和值)</a></p><p> </p><p><a href=\"css-attribute-selectors.html\" target=\"_blank\"><strong>属性选择器解释</strong></a></p></div></div><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 3,
      "chapter_level_one_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS实例",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "e5b7ee065f01f2dd20a938b9cd4ab321",
      "chapter_level_two_parent_id": "75877ebcd4e58cc3866aebd0218b9457",
      "chapter_level_two_name": "CSS 编程实战闯关",
      "chapter_level_two_url": "/css/css-codecamp.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><div><h2>HTML5&amp;CSS课程列表</h2></div><p>为了帮助广大学习者，做到学以致用，我们为大家准备了大量的CSS编程实战题，通过这些实战题，您可以一边学习一边操作，来达到巩固学习的作用。</p><p>请选择你喜欢的实战提，开始进行编程闯关。</p><div><ul><li><h4><a href=\"//www.w3cschool.cn/codecamp/style-the-html-body-element.html\" title=\"h\" target=\"_self\">CSS 样式的继承</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/inherit-styles-from-the-body-element.html\" title=\"h\" target=\"_self\">CSS 继承Body元素样式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/prioritize-one-style-over-another.html\" title=\"h\" target=\"_self\">CSS 样式的覆盖</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/override-styles-in-subsequent-css.html\" title=\"h\" target=\"_self\">CSS 多个class处理样式覆盖</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/override-class-declarations-by-styling-id-attributes.html\" title=\"h\" target=\"_self\">CSS 通过ID的样式属性覆盖class类的声明</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/override-class-declarations-with-inline-styles.html\" title=\"h\" target=\"_self\">CSS 通过内联样式覆盖class类的声明</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/override-all-other-styles-by-using-important.html\" title=\"h\" target=\"_self\">CSS 通过使用Important覆盖所有其他样式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-for-specific-colors.html\" title=\"h\" target=\"_self\">CSS 通过使用十六进制代码设置特定的颜色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-color-elements-white.html\" title=\"h\" target=\"_self\">CSS 十六进制白色表达方式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-color-elements-red.html\" title=\"h\" target=\"_self\">CSS 十六进制RGB红色表达方式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-color-elements-green.html\" title=\"h\" target=\"_self\">CSS 十六进制RGB绿色表达方式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-color-elements-blue.html\" title=\"h\" target=\"_self\">CSS 十六进制RGB蓝色表达方式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-mix-colors.html\" title=\"h\" target=\"_self\">CSS 十六进制RGB混合颜色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-to-color-elements-gray.html\" title=\"h\" target=\"_self\">CSS 灰色度设置</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-hex-code-for-specific-shades-of-gray.html\" title=\"h\" target=\"_self\">CSS 不同等级的灰度设置</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-abbreviated-hex-code.html\" title=\"h\" target=\"_self\">CSS 十六进制RGB表达式缩写</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-values-to-color-elements.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定颜色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-to-color-elements-white.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定白色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-to-color-elements-red.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定红色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-to-color-elements-green.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定绿色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-to-color-elements-blue.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定蓝色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-rgb-to-mix-colors.html\" title=\"h\" target=\"_self\">CSS 使用rgb属性设定混合颜色</a></h4></li></ul></div><div><ul><li><h4><a href=\"//www.w3cschool.cn/codecamp/say-hello-to-html-element.html\" title=\"h\" target=\"_self\">开始学习HTML标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/headline-with-the-h2-element.html\" title=\"h\" target=\"_self\">HTML 学习H2标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/inform-with-the-paragraph-element.html\" title=\"h\" target=\"_self\">HTML p标签实战</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/uncomment-html.html\" title=\"h\" target=\"_self\">清楚HTML的注释</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/comment-out-html.html\" title=\"h\" target=\"_self\">HTML注释语句学习</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/fill-in-the-blank-with-placeholder-text.html\" title=\"h\" target=\"_self\">HTML用占位符文本填补空白</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/delete-html-elements.html\" title=\"h\" target=\"_self\">删除HTML标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/change-the-color-of-text.html\" title=\"h\" target=\"_self\">HTML 更换文本的颜色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-css-selectors-to-style-elements.html\" title=\"h\" target=\"_self\">使用CSS选择器定义标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-a-css-class-to-style-an-element.html\" title=\"h\" target=\"_self\">使用一个CSS Class去给标签定义Style</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/style-multiple-elements-with-a-css-class.html\" title=\"h\" target=\"_self\">HTML 为多个元素使用CSS类定义样式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/change-the-font-size-of-an-element.html\" title=\"h\" target=\"_self\">HTML 设置标签的字体大小</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/set-the-font-family-of-an-element.html\" title=\"h\" target=\"_self\">HTML 设置标签的字体样式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/import-a-google-font.html\" title=\"h\" target=\"_self\">引入Google字体</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/specify-how-fonts-should-degrade.html\" title=\"h\" target=\"_self\">HTML 处理多个字体降级</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-images-to-your-website.html\" title=\"h\" target=\"_self\">HTML 给页面添加图片</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/size-your-images.html\" title=\"h\" target=\"_self\">HTML 调整网页里图片大小</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-borders-around-your-elements.html\" title=\"h\" target=\"_self\">HTML 给标签增加边框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-rounded-corners-with-a-border-radius.html\" title=\"h\" target=\"_self\">HTML 给标签增加圆角边框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/make-circular-images-with-a-border-radius.html\" title=\"h\" target=\"_self\">HTML 给图像设置圆角边框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/link-to-external-pages-with-anchor-elements.html\" title=\"h\" target=\"_self\">HTML 设置链接锚元素外部页面</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/nest-an-anchor-element-within-a-paragraph.html\" title=\"h\" target=\"_self\">HTML 在p标签内设置锚链接</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/make-dead-links-using-the-hash-symbol.html\" title=\"h\" target=\"_self\">HTML 使用#符合设置固定链接</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/turn-an-image-into-a-link.html\" title=\"h\" target=\"_self\">HTML 为图片设置超链接</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-alt-text-to-an-image-for-accessibility.html\" title=\"h\" target=\"_self\">HTML 为图片添加alt描述</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-a-bulleted-unordered-list.html\" title=\"h\" target=\"_self\">HTML 创建项目符号无序列表</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-an-ordered-list.html\" title=\"h\" target=\"_self\">HTML 创建有序列表</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-a-text-field.html\" title=\"h\" target=\"_self\">HTML 创建文本输入框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-placeholder-text-to-a-text-field.html\" title=\"h\" target=\"_self\">HTML 为文本输入框设定预定值</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-a-form-element.html\" title=\"h\" target=\"_self\">HTML 添加表单</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-a-submit-button-to-a-form.html\" title=\"h\" target=\"_self\">HTML 为表单添加提交按钮</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-html5-to-require-a-field.html\" title=\"h\" target=\"_self\">HTML 使用HTML5技术把表单设置为必填</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-a-set-of-radio-buttons.html\" title=\"h\" target=\"_self\">HTML 添加单选框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/create-a-set-of-checkboxes.html\" title=\"h\" target=\"_self\">HTML 添加复选框</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/check-radio-buttons-and-checkboxes-by-default.html\" title=\"h\" target=\"_self\">HTML 使用checked属性设置复选按钮和单选按钮默认被选中</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/nest-many-elements-within-a-single-div-element.html\" title=\"h\" target=\"_self\">HTML 在div元素中嵌套多个元素</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/give-a-background-color-to-a-div-element.html\" title=\"h\" target=\"_self\">HTML 为div元素设置背景颜色</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/set-the-id-of-an-element.html\" title=\"h\" target=\"_self\">HTML 为标签添加ID属性</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-an-id-attribute-to-style-an-element.html\" title=\"h\" target=\"_self\">HTML 使用ID属性设置标签样式</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/adjusting-the-padding-of-an-element.html\" title=\"h\" target=\"_self\">HTML 使用padding布局页面标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/adjust-the-margin-of-an-element.html\" title=\"h\" target=\"_self\">HTML 使用margin布局页面标签</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-a-negative-margin-to-an-element.html\" title=\"h\" target=\"_self\">HTML 使用负值设置页面元素的margin属性</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-different-padding-to-each-side-of-an-element.html\" title=\"h\" target=\"_self\">HTML 为不同方向padding设置不同的值</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/add-different-margins-to-each-side-of-an-element.html\" title=\"h\" target=\"_self\">HTML 为不同方向margin设置不同的值</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-clockwise-notation-to-specify-the-padding-of-an-element.html\" title=\"h\" target=\"_self\">HTML CSS中padding简写</a></h4></li><li><h4><a href=\"//www.w3cschool.cn/codecamp/use-clockwise-notation-to-specify-the-margin-of-an-element.html\" title=\"h\" target=\"_self\">HTML CSS中margin简写</a></h4></li></ul></div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 6,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "0cf323b66c008b87f04dc3f2413d5534",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – 框架",
      "chapter_level_two_url": "/css/css-rwd-frameworks.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - 框架</h2> <p>本章节为大家介绍响应式 Web 设计框架 Bootstrap。</p> <p>Bootstrap，来自 Twitter，是目前最受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。</p><p>Bootstrap支持HTML和CSS规范，是由CSS的动态<a href=\"https://www.w3cschool.cn/less/less-16wt1yuk.html\" target=\"_blank\">Less语言</a>写成。</p> <div class=\"example\"> <h2 class=\"example_head\">实例</h2> <div class=\"example_code notranslate htmlHigh\"> <span class=\"highGT\"></span><span class=\"highGT\"></span><span class=\"highLT\">&lt;</span><span class=\"highELE\">meta</span> <span class=\"highATT\">charset=</span><span class=\"highVAL\">\"utf-8\"</span><span class=\"highGT\">&gt;</span><br><span class=\"highLT\">&lt;</span><span class=\"highELE\">meta</span> <span class=\"highATT\">name=</span><span class=\"highVAL\">\"viewport\"</span> <span class=\"highATT\">content=</span><span class=\"highVAL\">\"width=device-width, initial-scale=1\"</span><span class=\"highGT\">&gt;</span><br><span class=\"highLT\">&lt;</span><span class=\"highELE\">link</span> <span class=\"highATT\">rel=</span><span class=\"highVAL\">\"stylesheet\"</span> <span class=\"highATT\">href=</span><span class=\"highVAL\">\"http://apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css\"</span><span class=\"highGT\">&gt;</span><br> <span class=\"highLT\">&lt;</span><span class=\"highELE\">script</span> <span class=\"highATT\">src=</span><span class=\"highVAL\">\"http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js\"</span><span class=\"highGT\">&gt;</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/script</span><span class=\"highGT\">&gt;</span><br> <span class=\"highLT\">&lt;</span><span class=\"highELE\">script</span> <span class=\"highATT\">src=</span><span class=\"highVAL\">\"http://apps.bdimg.com/libs/bootstrap/3.3.4/js/bootstrap.min.js\"</span><span class=\"highGT\">&gt;</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/script</span><span class=\"highGT\">&gt;</span><br> <span class=\"highGT\"></span></div> <br><a target=\"_blank\" href=\"/statics/demosource/tryresponsive_bootstrap.htm\" class=\"tryitbtn\">尝试一下 »</a> </div> <p>更多内容，请查看我们的 <a href=\"//www.w3cschool.cn/bootstrap\" target=\"_blank\">Bootstrap 教材</a>。</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 5,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "2fac38096c646013ed3e05a70f080c95",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – 视频(Video)",
      "chapter_level_two_url": "/css/css-rwd-videos.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - 视频(Video)</h2> \n<hr>\n <h2>使用 width 属性</h2> \n<p>如果 width 属性设置为 100%，视频播放器会根据屏幕大小自动调整比例：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">video </span>{\n        <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_video2\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>注意在以上实例中，视频播放器根据屏幕大小自动调整比例，且可以比原始尺寸大。更多情况下我们可以使用 <code>max-width</code> 属性来替代。</p>\n<hr>\n <h2>使用 max-width 属性</h2> \n<p>如果<code>max-width</code> 属性设置为 100%, 视频播放器会根据屏幕自动调整比例，但不会超过其原始大小：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">video </span>{\n        <br><span class=\"highATT\">max-width:</span><span class=\"highVAL\"> 100%;</span>\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_video\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n <h2>在网页中添加视频</h2>\n<p>我们可以在网页中添加视频。以下实例视频根据 div 区域大小自动调整并占满整个 div 区域：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">video </span>{\n        <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_video3\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "3633fc2a8373606733b7039fe5a635cf",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – 图片",
      "chapter_level_two_url": "/css/css-rwd-images.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - <span class=\"color_h1\">图片</span></h2> \n<hr>\n <h2>使用 width 属性</h2> \n<p>如果 width 属性设置为 100%，图片会根据上下范围实现响应式功能：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">img </span>{\n        <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>\n\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>\n\n        }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image2\" class=\"tryitbtn\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p>注意在以上实例中，图片会比它的原始图片大。我们可以使用 <code><strong>max-width</strong></code> 属性很好的解决这个问题。</p>\n<hr>\n <h2>使用 <code>max-width</code> 属性</h2> \n<p>如果 <code>max-width</code> 属性设置为 100%, 图片永远不会大于其原始大小：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">img </span>{\n        <br><span class=\"highATT\">max-width:</span><span class=\"highVAL\"> 100%;</span>\n\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>\n}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image\" class=\"tryitbtn\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p><b>\n提示：</b>关于<code>max-width</code> 属性的更多内容，请参考本站 CSS 参考手册中的 <a href=\"https://www.w3cschool.cn/cssref/pr-dim-max-width.html\" target=\"_blank\">CSS max-width属性</a>部分。</p>\n<hr>\n <h2>网页中添加图片</h2> \n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">img </span>{\n        <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>\n\n        <br><span class=\"highATT\">height:</span><span class=\"highVAL\"> auto;</span>\n}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image3\" class=\"tryitbtn\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<hr>\n <h2>背景图片</h2>\n\n<p>背景图片可以响应调整大小或缩放。</p>\n<p>以下是三个不同的方法：</p>\n<p>1. 如果 <code>background-size</code> 属性设置为 <code>contain</code>, 背景图片将按比例自适应内容区域。图片保持其比例不变：</p>\n<div class=\"bg1\"></div>\n<p>这是 CSS 代码:</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highELE\">div </span>{  <span class=\"highVAL\"></span>\n        <br><span class=\"highATT\">background-repeat:</span><span class=\"highVAL\"> no-repeat;</span>\n\n        <br><span class=\"highATT\">background-size:</span><span class=\"highVAL\"> contain;</span>\n}</div>\n    <br> <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_background1\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p>2. 如果 <code>background-size</code> 属性设置为 \"100% 100%\" ，背景图片将延展覆盖整个区域：</p>\n<div class=\"bg2\"></div>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <p>这是 CSS 代码:</p>\n    <div class=\"example_code\"> <span class=\"highELE\">div </span>{  <span class=\"highVAL\"></span>\n        <br><span class=\"highATT\">background-size:</span><span class=\"highVAL\"> 100% 100%;</span>\n}</div>\n    <br> <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_background2\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p>3. 如果 <code>background-size</code> 属性设置为 <code>cover</code>，则会把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。注意该属性保持了图片的比例因此 背景图像的某些部分无法显示在背景定位区域中。</p>\n<div class=\"bg3\"></div>\n<p>这是 CSS 代码:</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code notranslate cssHigh\"> <span class=\"highELE\">div </span>{\n        <br><span class=\"highVAL\"></span><span class=\"highATT\">background-size:</span><span class=\"highVAL\"> cover;</span>\n\n        <br><span class=\"highATT\">border:</span><span class=\"highVAL\"> 1px solid red;</span>}</div>\n    <br> <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_background3\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<hr>\n <h2>不同设备显示不同图片</h2> \n<p>大尺寸图片可以显示在大屏幕上，但在小屏幕上确不能很好显示。我们没有必要在小屏幕上去加载大图片，这样很影响加载速度。所以我们可以使用媒体查询，根据不同的设备显示不同的图片。</p>\n<p>以下大图片和小图片将显示在不同设备上：</p>\n<p>\n    <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212145265410.jpg\" alt=\"\"><span> </span>\n\n    <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212145268887.jpg\" alt=\"\">\n    <br>\n    <br>\n</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code notranslate cssHigh\"> <span class=\"highCOM\">/* For width smaller than 400px: */</span>\n\n        <br><span class=\"highELE\">body </span>{\n        <br><span class=\"highATT\">background-image:</span><span class=\"highVAL\"> url('img_smallflower.jpg');</span> \n        <br>}\n        <br><span class=\"highCOM\">/* For width 400px and larger: */</span>\n\n        <br><span class=\"highELE\">@media only screen and (min-width: 400px) </span>{\n        <br><span class=\"highELE\">body </span>{\n        <br><span class=\"highATT\">background-image:</span><span class=\"highVAL\"> url('img_flowers.jpg');</span> } }</div>\n    <br>  <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_mediaq\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p>你可以使用媒体查询的 <code>min-device-width</code> 替代<code> min-width</code> 属性，它将检测的是设备宽度而不是浏览器宽度。浏览器大小重置时，图片大小不会改变。</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highCOM\">/* 设备小于 400px: */</span>\n\n        <br><span class=\"highELE\">body </span>{\n        <br><span class=\"highATT\">background-image:</span><span class=\"highVAL\"> url('img_smallflower.jpg');</span> }\n        <br><span class=\"highCOM\">/* 设备大于 400px (也等于): */</span>\n\n        <br><span class=\"highELE\">@media only screen and (min-device-width: 400px) </span>{\n        <br><span class=\"highELE\">body </span>{\n        <br><span class=\"highATT\">background-image:</span><span class=\"highVAL\"> url('img_flowers.jpg');</span> } }</div>\n    <br> <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_mediaq2\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<hr>\n <h2>HTML5 <span>&lt;</span><span>picture</span><span>&gt; </span>元素</h2> \n<p>HTML5 的 <span>&lt;</span><span>picture</span><span>&gt;</span>元素可以设置多张图片。</p>\n <h3>浏览器支持</h3> \n<table class=\"browserref                                              \">\n    <tbody>\n        <tr>\n            <th style=\"width:15%;font-size:16px;text-align:left\">元素</th>\n            <th style=\"width:15%\" class=\"bsIE\" title=\"Internet Explorer\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212146438056.png\" alt=\"\">\n            </th>\n            <th style=\"width:17%\" class=\"bsChrome\" title=\"Chrome\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212146537205.png\" alt=\"\">\n            </th>\n            <th style=\"width:18%\" class=\"bsFirefox\" title=\"Firefox\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212147008732.png\" alt=\"\">\n            </th>\n            <th style=\"width:18%\" class=\"bsSafari\" title=\"Safari\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212147131597.png\" alt=\"\">\n            </th>\n            <th style=\"width:17%\" class=\"bsOpera\" title=\"Opera\">\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212147248347.png\" alt=\"\">\n            </th>\n        </tr>\n        <tr>\n            <td style=\"text-align:left\"><span>&lt;</span><span>picture</span><span>&gt;</span>\n\n            </td>\n            <td><span class=\"deprecated\">不支持</span>\n\n            </td>\n            <td>38.0</td>\n            <td>38.0</td>\n            <td><span class=\"deprecated\">不支持</span>\n\n            </td>\n            <td>25.0</td>\n        </tr>\n    </tbody>\n</table>\n<span>&lt;</span><span>picture</span><span>&gt; </span>元素类似于<code>&lt;video&gt;</code> 和 <code>&lt;audio&gt;</code> 元素。可以设备不同的资源，第一个设置的资源为首选使用的：<span></span>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <div class=\"example_code\"> <span class=\"highLT\">&lt;</span><span class=\"highELE\">picture</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">source</span>  <span class=\"highATT\">srcset=</span><span class=\"highVAL\">\"img_smallflower.jpg\"</span>  <span class=\"highATT\">media=</span><span class=\"highVAL\">\"(max-width: 400px)\"</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">source</span>  <span class=\"highATT\">srcset=</span><span class=\"highVAL\">\"img_flowers.jpg\"</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">img</span>  <span class=\"highATT\">src=</span><span class=\"highVAL\">\"img_flowers.jpg\"</span>  <span class=\"highATT\">alt=</span><span class=\"highVAL\">\"Flowers\"</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">/picture</span><span class=\"highGT\">&gt;</span>\n\n    </div>\n    <br> <a class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_image_picture\" target=\"_blank\" link24300740147009492=\"1\">尝试一下 »</a> \n</div>\n<p> <code>srcset</code> 属性的必须的，定义了图片资源。</p>\n<p> <code>media</code> 属性是可选的，可以在媒体查询的 <a href=\"/cssref/css3-pr-mediaquery.html\" link24300740147009492=\"1\">CSS @media 规则</a> 查看详情。</p>\n<p>对于不支持<span>&lt;</span><span>picture</span><span>&gt; </span>元素的浏览器你也可以定义<code>&lt;img&gt;</code>元素来替代。</p>\n<hr>\n\n<h2>扩展阅读</h2>\n\n<p><a href=\"https://www.w3cschool.cn/responsive_images_101/\" target=\"_blank\">《响应式图片101》</a>：介绍为什么需要响应式图片以及如何选择正确的响应式图片解决方案。</p></div>\r\n<style>\r\n.bg1 {\r\n    width: 100%;\r\n    height:400px;\r\n    background-image:url('/statics/images/course/img_flowers.jpg');    \r\n    background-repeat:no-repeat;\r\n    background-size:contain;\r\n    border:1px solid red;    \r\n}\r\n.bg2 {\r\n    width: 100%;\r\n    height:400px;\r\n    background-image:url('/statics/images/course/img_flowers.jpg');        \r\n    background-size:100% 100%;\r\n    border:1px solid red;\r\n}\r\n.bg3 {\r\n    width: 100%;\r\n    height:400px;\r\n    background-image:url('/statics/images/course/img_flowers.jpg');        \r\n    background-size:cover;\r\n    border:1px solid red;\r\n}\r\n</style><div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "7ef16c3549cde077c10ca7ab7c6bb548",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – 媒体查询",
      "chapter_level_two_url": "/css/css-rwd-mediaqueries.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - <span class=\"color_h1\">媒体查询</span></h2> \n<hr>\n<p>媒体(media)查询在 CSS3 上有介绍：<a href=\"/cssref/css3-pr-mediaquery.html\" target=\"_blank\">CSS3 @media 查询</a>。</p>\n<p>使用 @media 查询，你可以针对不同的媒体类型定义不同的样式。</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <p>如果浏览器窗口小于 500px, 背景将变为浅蓝色：</p>\n    <div class=\"example_code notranslate cssHigh\"> <span class=\"highELE\">@media only screen and (max-width: 500px) </span>{\n        <br><span class=\"highELE\">body </span>{ <span class=\"highATT\">background-color:</span><span class=\"highVAL\"> lightblue;</span>}}\n        <br>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_mediaquery\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n <h2>添加断点</h2> \n<p>在先前的教程中我们使用行和列来制作网页，它是响应式的，但在小屏幕上并不能友好的展示。</p>\n<p>媒体查询可以帮我们解决这个问题。我们可以在设计稿的中间添加断点，不同的断点有不同的效果。</p>\n <h3>桌面设备</h3> \n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/rwd_desktop.png\">\n <h3>手机设备</h3> \n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/rwd_phone.png\">\n<p>使用媒体查询在 768px 添加断点：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <p>当屏幕 (浏览器窗口) 小于 768px, 每一列的宽度是 100%:</p>\n    <div class=\"example_code notranslate cssHigh\"> <span class=\"highCOM\">/* For desktop: */</span>\n\n        <br><span class=\"highELE\">.col-1 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}\n        <br><span class=\"highELE\">.col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}\n        <br><span class=\"highELE\">.col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}\n        <br> <span class=\"highELE\">.col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}\n        <br><span class=\"highELE\">.col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}\n        <br><span class=\"highELE\">.col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}\n        <br> <span class=\"highELE\">.col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}\n        <br><span class=\"highELE\">.col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}\n        <br><span class=\"highELE\">.col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}\n        <br> <span class=\"highELE\">.col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}\n        <br><span class=\"highELE\">.col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}\n        <br><span class=\"highELE\">.col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}\n        <br><span class=\"highELE\">@media only screen and (max-width: 768px) </span>{<span class=\"highELE\"><span class=\"highCOM\">  /* For mobile phones: */</span>\n\n        <br>[class*=\"col-\"] {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}}\n        <br>\n        </span>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_breakpoints\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n <h2>为移动端优先设计</h2> \n<p>移动端优先意味着在设计桌面和其他设备时优先考虑移动端的设计。</p>\n<p>这就意味着我们必须对 CSS 做一些改变。</p>\n<p>我们在屏幕小于 768px 进行样式修改，同样在屏幕宽度大于 768px 时也需要修改样式。以下是移动端优先实例：</p>\n<div class=\"example_code\"> <span class=\"highCOM\">/* 为移动端设计: */</span>\n\n    <br><span class=\"highELE\">[class*=\"col-\"] </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}\n    <br><span class=\"highELE\">@media only screen and (min-width: 768px) </span>{<span class=\"highELE\">  <span class=\"highCOM\">/* For desktop: */</span>\n\n    <br>.col-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}\n    <br><span class=\"highELE\">.col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}\n    <br><span class=\"highELE\">.col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}\n    <br><span class=\"highELE\">.col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}\n    <br><span class=\"highELE\">.col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}\n    <br><span class=\"highELE\">.col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}\n    <br><span class=\"highELE\">.col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}\n    <br><span class=\"highELE\">.col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}\n    <br><span class=\"highELE\">.col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}\n    <br><span class=\"highELE\">.col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}\n    <br><span class=\"highELE\">.col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}\n    <br><span class=\"highELE\">.col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}}\n    <br>\n    </span>\n</div>\n<hr>\n <h2>其他断点</h2> \n<p>你可以根据自己的需要添加断点。</p>\n<p>我们同样可以为平板设备和移动手机设备设置断点。</p>\n <h3>桌面设备</h3> \n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/rwd_desktop.png\">\n <h3>平板设备</h3> \n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/rwd_tablet.png\">\n <h3>手机设备</h3> \n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/rwd_phone.png\">\n<p>在屏幕为 600px 时添加媒体查询，并设置新的样式（屏幕大于 600px 但小于 768px）：</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <p>注意两组类样式是相同的，但名称不同 (col- 和 col-m-):</p>\n    <div class=\"example_code notranslate cssHigh\"> <span class=\"highCOM\">/* For mobile phones: */</span>\n\n        <br><span class=\"highELE\">[class*=\"col-\"] </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}\n        <br><span class=\"highELE\">@media only screen and (min-width: 600px) </span>{<span class=\"highELE\">   <span class=\"highCOM\">/* For tablets: */</span>\n\n        <br>.col-m-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}\n        <br><span class=\"highELE\">.col-m-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}\n        <br><span class=\"highELE\">.col-m-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}\n        <br><span class=\"highELE\">.col-m-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}\n        <br><span class=\"highELE\">.col-m-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}\n        <br><span class=\"highELE\">.col-m-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}\n        <br><span class=\"highELE\">.col-m-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}\n        <br><span class=\"highELE\">.col-m-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}\n        <br><span class=\"highELE\">.col-m-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}\n        <br><span class=\"highELE\">.col-m-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}\n        <br><span class=\"highELE\">.col-m-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}\n        <br><span class=\"highELE\">.col-m-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}}\n        <br><span class=\"highELE\">@media only screen and (min-width: 768px) </span>{<span class=\"highELE\"> <span class=\"highCOM\">/* For desktop: */</span>\n\n        <br>.col-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}\n        <br><span class=\"highELE\">.col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}\n        <br><span class=\"highELE\">.col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}\n        <br><span class=\"highELE\">.col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}\n        <br><span class=\"highELE\">.col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}\n        <br><span class=\"highELE\">.col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}\n        <br><span class=\"highELE\">.col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}\n        <br><span class=\"highELE\">.col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}\n        <br><span class=\"highELE\">.col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}\n        <br><span class=\"highELE\">.col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}\n        <br><span class=\"highELE\">.col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}\n        <br><span class=\"highELE\">.col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>} }</span>\n        </span>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_col-s\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>以上代码看起来很多余，但是他可以根据屏幕大小自动设置不同的样式，所以还是非常必要的。</p>\n<div class=\"example\">\n     <h2 class=\"example_head\">HTML 实例</h2> \n    <p>针对桌面设备:</p>\n    <p>第一和第三部分跨越 3 列。中间部分跨域 6 列。</p>\n    <p>针对平板设备:</p>\n    <p>第一跨域 3列，第二部分跨越 9 列，第三部分跨域 12 列：</p>\n    <div class=\"example_code\"> <span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"row\"</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"col-3 col-m-3\"</span><span class=\"highGT\">&gt;</span>...<span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"col-6 col-m-9\"</span><span class=\"highGT\">&gt;</span>...<span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n        <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"col-3 col-m-12\"</span><span class=\"highGT\">&gt;</span>...<span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span>\n\n        <span class=\"highGT\">&gt;</span>\n            <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n    </div>\n</div>\n<hr>\n <h2>方向：横屏/竖屏</h2> \n<p>结合 CSS 媒体查询,可以创建适应不同设备的方向(横屏 landscape、竖屏 portrait 等)的布局。</p>\n <h3>语法：</h3> \n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n    <p>orientation：portrait | landscape</p>\n    </div>\n</div>\n<ul>\n    <li><strong> portrait：</strong>指定输出设备中的页面可见区域高度大于或等于宽度</li>\n    <li><strong> landscape：</strong> 除 portrait 值情况外，都是 landscape</li>\n</ul>\n<div class=\"example\">\n     <h2 class=\"example_head\">实例</h2> \n    <p>如果是横屏背景将是浅蓝色：</p>\n    <div class=\"example_code\"> <span class=\"highELE\">@media only screen and (orientation: landscape) </span>{\n        <br><span class=\"highELE\">body </span>{ <span class=\"highATT\">background-color:</span><span class=\"highVAL\"> lightblue;</span>}}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_mediaquery_orientation\" class=\"tryitbtn\">尝试一下 »</a> \n</div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "4082c7d9af093ab82ad925478d017c4d",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – 网格视图",
      "chapter_level_two_url": "/css/css-rwd-grid.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - <span class=\"color_h1\">网格视图</span></h2> \n<hr>\n <h2>什么是网格视图?</h2> \n<p>很多网页都是基于网格设计的，这说明网页是按列来布局的。</p>\n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/viewgrid1.jpg\" alt=\"\">\n<p>使用网格视图有助于我们设计网页。这让我们向网页添加元素变的更简单。</p>\n<img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/viewgrid2.jpg\" alt=\"\">\n<p>响应式网格视图通常是 12 列，宽度为100%，在浏览器窗口大小调整时会自动伸缩。</p>\n<p><a href=\"/statics/demosource/tryresponsive_grid.htm\" target=\"_blank\">响应式网格视图</a> \n</p>\n<hr>\n\n<h2>创建响应式网格视图</h2>\n\n<p>接下来我们来创建一个响应式网格视图。</p>\n<p>首先确保所有的 HTML 元素都有 <strong>box-sizing</strong> 属性且设置为 <strong>border-box</strong>。</p>\n<p>确保边距和边框包含在元素的宽度和高度间。</p>\n<p>添加如下代码：</p>\n<blockquote>* {\n    box-sizing: border-box;\n}\n    </blockquote>\n<pre>* {\n    box-sizing: border-box;\n}\n</pre> \n        <p>查看更多 box-sizing 内容请点击：<a href=\"/cssref/css3-pr-box-sizing.html\" target=\"_blank\">CSS3 box-sizing 属性 </a>。</p>\n        <p>以下实例演示了简单的响应式网页，包含两列：</p>\n        <div class=\"example\">\n             <h2 class=\"example_head\">实例</h2> \n            <div class=\"example_code\"> <span class=\"highELE\">.menu </span>{\n                <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>\n\n                <br><span class=\"highATT\">float:</span><span class=\"highVAL\"> left;</span>}\n                <br> <span class=\"highELE\">.main </span>{\n                <br><span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>\n\n                <br><span class=\"highATT\">float:</span><span class=\"highVAL\"> left;</span>}\n                <br>\n            </div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_webpage\" class=\"tryitbtn\">尝试一下 »</a> \n        </div>\n        <p>以上实例包含两列。</p>\n        <p>12 列的网格系统可以更好的控制响应式网页。</p>\n        <p>首先我们可以计算每列的百分比: 100% / 12 列 = 8.33%。</p>\n        <p>在每列中指定 class， <strong>class=\"col-\"</strong> 用于定义每列有几个 span ：</p>\n        <div class=\"example\">\n             <h2 class=\"example_head\">CSS:</h2> \n            <div class=\"example_code notranslate cssHigh\"> <span class=\"highELE\">.col-1 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}\n                <br><span class=\"highELE\">.col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}\n                <br><span class=\"highELE\">.col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}\n                <br> <span class=\"highELE\">.col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}\n                <br><span class=\"highELE\">.col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}\n                <br><span class=\"highELE\">.col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}\n                <br> <span class=\"highELE\">.col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}\n                <br><span class=\"highELE\">.col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}\n                <br><span class=\"highELE\">.col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}\n                <br> <span class=\"highELE\">.col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}\n                <br><span class=\"highELE\">.col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}\n                <br><span class=\"highELE\">.col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}</div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_cols\" class=\"tryitbtn\">尝试一下 »</a> \n        </div>\n        <p>所有的列向左浮动，间距(padding) 为 15px：</p>\n        <div class=\"example\">\n             <h2 class=\"example_head\">CSS:</h2> \n            <div class=\"example_code\"> <span class=\"highELE\">[class*=\"col-\"] </span>{\n                <br><span class=\"highATT\">float:</span><span class=\"highVAL\"> left;</span>\n\n                <br><span class=\"highATT\">padding:</span><span class=\"highVAL\"> 15px;</span>\n\n                <br><span class=\"highATT\">border:</span><span class=\"highVAL\"> 1px solid red;</span>}</div>\n        </div>\n        <p>每一行使用 &lt;div&gt; 包裹。所有列数加起来应为 12：</p>\n        <div class=\"example_code\"> <span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"row\"</span><span class=\"highGT\">&gt;</span>\n\n            <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"col-3\"</span><span class=\"highGT\">&gt;</span>...<span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n            <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span>  <span class=\"highATT\">class=</span><span class=\"highVAL\">\"col-9\"</span><span class=\"highGT\">&gt;</span>...<span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n            <br><span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span>\n\n        </div>\n        <p>列中行为左浮动，并添加清除浮动：</p>\n        <div class=\"example\">\n             <h2 class=\"example_head\">CSS:</h2> \n            <div class=\"example_code\"> <span class=\"highELE\">.row:after </span>{\n                <br><span class=\"highATT\">content:</span><span class=\"highVAL\"> \"\";</span>\n\n                <br><span class=\"highATT\">clear:</span><span class=\"highVAL\"> both;</span>\n\n                <br><span class=\"highATT\">display:</span><span class=\"highVAL\"> block;</span>}</div>\n        </div>\n        <p>我们可以添加一些样式和颜色，让其更好看：</p>\n        <div class=\"example\">\n             <h2 class=\"example_head\">实例</h2> \n            <div class=\"example_code\"> <span class=\"highELE\">.header </span>{\n                <br><span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #9933cc;</span>\n\n                <br><span class=\"highATT\">color:</span><span class=\"highVAL\"> #ffffff;</span>\n\n                <br><span class=\"highATT\">padding:</span><span class=\"highVAL\"> 15px;</span>}\n                <br><span class=\"highELE\">.menu li </span>{\n                <br><span class=\"highATT\">padding:</span><span class=\"highVAL\"> 8px;</span>\n\n                <br><span class=\"highATT\">margin-bottom:</span><span class=\"highVAL\"> 7px;</span>\n\n                <br><span class=\"highATT\">background-color :</span><span class=\"highVAL\">#33b5e5;</span>\n\n                <br><span class=\"highATT\">color:</span><span class=\"highVAL\"> #ffffff;</span>\n\n                <br><span class=\"highATT\">box-shadow:</span><span class=\"highVAL\"> 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);</span>}\n                <br><span class=\"highELE\">.menu li:hover </span>{\n                <br><span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #0099cc;</span>}</div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/tryresponsive_styles\" class=\"tryitbtn\">尝试一下 »</a> \n        </div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 1,
      "parent_sort_index": 2,
      "chapter_level_one_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 响应式设计",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "ccef213b2811ba1f091b35f7246be947",
      "chapter_level_two_parent_id": "be0185cb4724ad1a9c0f73ad3651d769",
      "chapter_level_two_name": "响应式 Web 设计 – Viewport",
      "chapter_level_two_url": "/css/css-rwd-viewport.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>响应式 Web 设计 - <span class=\"color_h1\">Viewport</span></h2> \n<hr>\n <h2>什么是 Viewport?</h2> \n<p><code>viewport </code>是用户网页的可视区域。</p>\n<p><code>viewport</code> 翻译为中文可以叫做\"视区\"。</p>\n<p>手机浏览器是把页面放在一个虚拟的\"窗口\"<code>（viewport）</code>中，通常这个虚拟的\"窗口\"<code>（viewport）</code>比屏幕宽，这样就不用把每个网页挤到很小的窗口中（这样会破坏没有针对手机浏览器优化的网页的布局），用户可以通过平移和缩放来看网页的不同部分。</p>\n<hr>\n <h2>设置 Viewport</h2>\n\n<p>一个常用的针对移动网页优化过的页面的 <code>viewport meta</code> 标签大致如下：</p>\n<ul>\n    <li><code>width</code>：控制 <code>viewport</code> 的大小，可以指定的一个值，如果 600，或者特殊的值，如<code> device-width</code> 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</li>\n    <li><code>height</code>：和 <code>width</code> 相对应，指定高度。</li>\n    <li><code>initial-scale</code>：初始缩放比例，也即是当页面第一次 <code>load</code> 的时候缩放比例。</li>\n    <li><code>maximum-scale</code>：允许用户缩放到的最大比例。</li>\n    <li><code>minimum-scale</code>：允许用户缩放到的最小比例。</li>\n    <li><code>user-scalable</code>：用户是否可以手动缩放。</li>\n</ul>\n<p>以下实例演示了使用 <code>viewport</code> 和没使用 <code>viewport</code> 在移动端上的效果：</p>\n <h3>实例1、没有添加 <code>viewport</code>：<a target=\"_blank\" href=\"/statics/demosource/example_withoutviewport.html\">点击查看</a></h3> \n<p>\n    <img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/img_viewport1.png\" alt=\"\" class=\"\">\n</p>\n <h3>实例2、添加 viewport：<a target=\"_blank\" href=\"/statics/demosource/example_withviewport.html\">点击查看</a></h3> \n<p>\n    <img src=\"https://atts.w3cschool.cn/attachments/uploads/2015/06/img_viewport2.png\" alt=\"\">\n</p>\n<p>如果你在平板电脑或手机上访问，可以直接点击查看效果。</p>\n<hr>\n\n<h2>相关文章</h2>\n\n<p>CSS教程：<a href=\"https://www.w3cschool.cn/css/css-rwd-intro.html\" target=\"_blank\">响应式 Web 设计</a>\n</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 34,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a105c5d803998833aa9b03ef6fcbfe5b",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 实例",
      "chapter_level_two_url": "/css/css-examples.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">实例</span></h2> \n <h2 class=\"tutheader\">CSS背景</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_body\" target=\"_blank\">设置页面的背景颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-color_elements\" target=\"_blank\">设置不同元素的背景颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image\" target=\"_blank\">设置一个图像作为页面的背景</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_bad\" target=\"_blank\">错误的的背景图片</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_gradient2\" target=\"_blank\">如何在水平方向重复背景图像</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-image_position\" target=\"_blank\">如何定位背景图像</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background-attachment\" target=\"_blank\">一个固定的背景图片（这个图片不会随页面的其余部分滚动）</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand\" target=\"_blank\">在一个声明的所有背景属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_background_shorthand2\" target=\"_blank\">高级的背景例子</a>\n\n</p>\n<p><a href=\"css-background.html\"><strong>背景属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS文本</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_color\" target=\"_blank\">设置不同元素的文本颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-align_all\" target=\"_blank\">文本对齐</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration_link\" target=\"_blank\">移除链接下划线</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-decoration\" target=\"_blank\">装饰文字</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-transform\" target=\"_blank\">控制文本中的字母</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-indent\" target=\"_blank\">缩进文本</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_letter-spacing\" target=\"_blank\">指定了字符之间的空间</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_line-height\" target=\"_blank\">指定了行与行之间的空间</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-direction\" target=\"_blank\">设置元素的文本方向</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-word-spacing\" target=\"_blank\">增加单词之间的空格</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_text-white-space\" target=\"_blank\">在一个元素内禁用文字换行</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_vertical-align\" target=\"_blank\">内部文字图像的垂直对齐</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-text.html\" target=\"_blank\"><strong>Text属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS的字体</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-family\" target=\"_blank\">设置文本的字体</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size\" target=\"_blank\">设置字体大小</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_px\" target=\"_blank\">用px设置的字体的大小</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_em\" target=\"_blank\">用em设置的字体的大小</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-size_percent_em\" target=\"_blank\">用百分比和em设置字体的大小</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-style\" target=\"_blank\">设置字体样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-variant\" target=\"_blank\">设置字体的异体</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font-weight\" target=\"_blank\">设置字体的粗细</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_font\" target=\"_blank\">在一个声明的所有字体属性</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-font.html\" target=\"_blank\"><strong>Font属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS链接</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" target=\"_blank\">为访问/未访问链接添加不同的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_decoration\" target=\"_blank\">在链接上使用文本装饰</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_background\" target=\"_blank\">指定链接的背景颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\" target=\"_blank\">超链接添加其他样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_advanced\" target=\"_blank\">高级 - 创建链接框</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-link.html\" target=\"_blank\"><strong>链接属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS列表</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-type_all\" target=\"_blank\">列表中所有不同的列表项标记</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image\" target=\"_blank\">设置作为列表项标记的图像</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style-image_crossbrow\" target=\"_blank\">使用Crossbrowser解决方案设置一个列表项标记的图像</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_list-style\" target=\"_blank\">在一个声明中的所有列表属性</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-list.html\" target=\"_blank\"><strong>列表属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS表格</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border\" target=\"_blank\">指定一个表的Th，TD元素和黑色边框</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_border-collapse\" target=\"_blank\">使用border-collapse</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_width\" target=\"_blank\">指定表格的宽度和高度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_align\" target=\"_blank\">设置内容的水平对齐方式（文本对齐）</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_vertical-align\" target=\"_blank\">设置内容的垂直对齐（垂直对齐）</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_padding\" target=\"_blank\">指定TH和TD元素的填充</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_color\" target=\"_blank\">指定表格边框的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_caption-side\" target=\"_blank\">设置表格标题的位置</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_table_fancy\" target=\"_blank\">创建一个奇特的表</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-table.html\" target=\"_blank\"><strong>表格属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS盒模型</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_boxmodel_width\" target=\"_blank\">指定元素的总宽度为250像素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_boxmodel_width_doctype\" target=\"_blank\">使用Crossbrowser解决方案指定元素的总宽度为250像素的 </a>\n\n</p>\n<p> </p>\n<p><a href=\"css-boxmodel.html\" target=\"_blank\"><strong>盒模型的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS边框</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-width\" target=\"_blank\">设置四个边框的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-width\" target=\"_blank\">设置上边框的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-width\" target=\"_blank\">设置底部边框的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-width\" target=\"_blank\">设置左边框的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-width\" target=\"_blank\">设置右边框的宽度</a>\n\n</p>\n<p> </p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-style\" target=\"_blank\">设置四个边框的样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-style\" target=\"_blank\">设置上边框的样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-style\" target=\"_blank\">设置下边框的样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-style\" target=\"_blank\">设置左边框的样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-style\" target=\"_blank\">设置右边框的样式</a>\n\n</p>\n<p> </p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-color\" target=\"_blank\">设置四个边框的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top-color\" target=\"_blank\">设置上边框的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom-color\" target=\"_blank\">设置下边框的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left-color\" target=\"_blank\">设置左边框的颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right-color\" target=\"_blank\">设置右边框的颜色</a>\n\n</p>\n<p> </p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border\" target=\"_blank\">在一个声明中的所有边框属性</a>\n\n</p>\n<p> </p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-style2\" target=\"_blank\">每边设置不同的边框</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-top\" target=\"_blank\">在一个声明中的所有顶部边框属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-bottom\" target=\"_blank\">在一个声明中的所有下边框属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-left\" target=\"_blank\">在一个声明中的所有左边框属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_border-right\" target=\"_blank\">在一个声明中的所有右边框属性</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-border.html\" target=\"_blank\"><strong>边框属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS轮廓</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline\" target=\"_blank\">围绕一个元素（outline），绘制一条线</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-style\" target=\"_blank\">设置轮廓的样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-color\" target=\"_blank\">设置轮廓颜色</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_outline-width\" target=\"_blank\">设置轮廓的宽度</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-outline.html\" target=\"_blank\"><strong>轮廓属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS边距</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-sides\" target=\"_blank\">指定一个元素的边距</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin_shorthand\" target=\"_blank\">边距缩写属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-top\" target=\"_blank\">文本顶部边距设置的值使用厘米</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-bottom_percent\" target=\"_blank\">使用百分比值设置文本的底部边缘</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_margin-left\" target=\"_blank\">使用厘米值设置文本的左边距</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-margin.html\" target=\"_blank\"><strong>Margin属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS填充</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-left\" target=\"_blank\">设置元素的左部填充</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-right\" target=\"_blank\">设置元素的右部填充</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-top\" target=\"_blank\">设置元素的顶部填充</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding-bottom\" target=\"_blank\">设置元素的底部填充</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_padding\" target=\"_blank\">在一个声明中的所有填充属性</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-padding.html\" target=\"_blank\"><strong>padding属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS分组和嵌套</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_grouping\" target=\"_blank\">组选择器</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_nesting\" target=\"_blank\">嵌套选择器</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-grouping-nesting.html\" target=\"_blank\"><strong>分组和嵌套解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS尺寸</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height\" target=\"_blank\">使用像素值设置图像的高度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_height_percent\" target=\"_blank\">使用百分比设置图像的高度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_width\" target=\"_blank\">使用像素值来设置元素的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_width_percent\" target=\"_blank\">使用百分比来设置元素的宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-height\" target=\"_blank\">设置元素的最大高度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-width\" target=\"_blank\">使用像素值设置元素的最大宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_max-width_percent\" target=\"_blank\">使用百分比来设置元素的最大宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-height\" target=\"_blank\">设置元素的最低高度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-width\" target=\"_blank\">使用像素值来设置元素的最小宽度</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_dim_min-width_percent\" target=\"_blank\">使用百分比来设置元素的最小宽度</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-dimension.html\" target=\"_blank\"><strong>尺寸属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS显示</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_hidden\" target=\"_blank\">如何隐藏一个元素(visibility:hidden)</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_none\" target=\"_blank\">如何不显示元素(display:none)</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display\" target=\"_blank\">如何显示一个元素的内联元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_display_block\" target=\"_blank\">如何显示一个元素的块元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_visibility_collapse\" target=\"_blank\">H如何使用表格的collapse属性</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-display-visibility.html\" target=\"_blank\"><strong>Display属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS定位</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_fixed\" target=\"_blank\">元素相对浏览器窗口的位置</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_relative\" target=\"_blank\">元素的相对定位</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_absolute\" target=\"_blank\">元素的绝对定位</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_zindex\" target=\"_blank\">重叠的元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_clip\" target=\"_blank\">设置元素的形状</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_overflow\" target=\"_blank\">如何使用滚动条来显示元素内溢出的内容</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_pos_overflow_auto\" target=\"_blank\">如何设置浏览器自动溢出处理</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_top\" target=\"_blank\">使用像素值设置图像的顶部</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_bottom\" target=\"_blank\">使用像素值设置图像的底部</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_left\" target=\"_blank\">使用像素值设置图像的左边</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_right\" target=\"_blank\">使用像素值设置图像的右边</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_cursor\" target=\"_blank\">更改光标</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-positioning.html\" target=\"_blank\"><strong>定位属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS浮动</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float\" target=\"_blank\">简单的使用float属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float2\" target=\"_blank\">为图像添加边框和边距并浮动到段落的左侧</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float3\" target=\"_blank\">标题和图片向右侧浮动</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float4\" target=\"_blank\">让段落的第一个字母浮动到左侧</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_elements\" target=\"_blank\">使用float属性创建一个图片廊</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_clear\" target=\"_blank\">开启float - clear属性</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float5\" target=\"_blank\">创建一个水平菜单</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float6\" target=\"_blank\">创建一个没有表格的网页</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-float.html\" target=\"_blank\"><strong>Float属性的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS对齐元素</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_container\" target=\"_blank\">使用margin的中间调整</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_pos\" target=\"_blank\">左/右位置对齐</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_pos_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float\" target=\"_blank\">左/右对齐，浮动</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐，浮动</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-align.html\" target=\"_blank\"><strong>对齐属性解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS生成的内容</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_content\" target=\"_blank\">把括号内的URL用content属性插入到每个链接后面</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_counter-reset\" target=\"_blank\">章节和分节的编号是\"第1节\"，\"1.1\"，\"1.2\"等</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_gen_quotes\" target=\"_blank\">quotes 属性指定了引号</a>\n\n</p>\n <h2 class=\"tutheader\">CSS伪类</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" target=\"_blank\">添加不同颜色的超链接</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\" target=\"_blank\">给超链接添加其他样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_focus\" target=\"_blank\">使用：焦点</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child1\" target=\"_blank\">:first-child - 匹配了第一个p元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child2\" target=\"_blank\">:first-child - 匹配了p元素中的第一个I元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child3\" target=\"_blank\">:first-child - 匹配了第一个p元素中的所有I元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_lang\" target=\"_blank\">使用:lang</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-pseudo-classes.html\" target=\"_blank\"><strong>伪类的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS伪元素</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstletter\" target=\"_blank\">把文本的第一个字母设为特殊的字母</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline\" target=\"_blank\">把第一行文字设置为特殊</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline_letter\" target=\"_blank\">把第一行文字的第一个字母设置为特殊</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_before\" target=\"_blank\">使用：在一个元素之前插入一些内容</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_after\" target=\"_blank\">使用：在一个元素之后插入一些内容</a>\n\n</p>\n<p> </p>\n<p><a href=\"//www.w3cschool.cn/css/css-pseudo-elements.html\"><strong>伪元素的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS导航栏</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_vertical_advanced\" target=\"_blank\">垂直导航栏的全样式</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal_float_advanced\" target=\"_blank\">水平导航栏的全样式</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-navbar.html\" target=\"_blank\"><strong>导航栏的解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS图片廊</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_gallery\" target=\"_blank\">图片廊</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-image-gallery.html\" target=\"_blank\"><strong>图片廊解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS图像的不透明度</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_transparency\" target=\"_blank\">创建透明图像 - 鼠标悬停效果</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_transparency\" target=\"_blank\">创建一个背景图像与文本的透明框</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-image-transparency.html\" target=\"_blank\"><strong>图像的不透明度解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS图像拼合</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_img\" target=\"_blank\">图像拼合</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_nav\" target=\"_blank\">图像拼合-导航列表</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_hover_nav\" target=\"_blank\">悬停效果与图像拼合</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-image-sprites.html\" target=\"_blank\"><strong>图像拼合解释</strong></a>\n\n</p>\n <h2 class=\"tutheader\">CSS属性选择器</h2> \n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_att\" target=\"_blank\">选择具有title属性的元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_value\" target=\"_blank\">选择标题=一个特定值的元素</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_space\" target=\"_blank\">选择标题=一个特定值的元素(使用（~）分隔属性和值)</a>\n\n</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_hyphen\" target=\"_blank\">选择标题=一个特定值的元素(使用（|）分隔属性和值)</a>\n\n</p>\n<p> </p>\n<p><a href=\"css-attribute-selectors.html\" target=\"_blank\"><strong>属性选择器解释</strong></a>\n\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 33,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "aa4795b057c3627eea43c8b4adf29f85",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 总结",
      "chapter_level_two_url": "/css/css-summary.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>你已经学习了CSS,<span class=\"color_h1\">下一步学习什么呢?</span> </h2> <hr> <h2>CSS 总结</h2> <p>本教程已向你讲解了如何创建样式表来同时控制多重页面的样式和布局。 </p> <p>你已经学会如何使用 CSS 来添加背景、格式化文本、以及格式化边框，并定义元素的填充和边距。 </p> <p>同时，你也学会了如何定位元素、控制元素的可见性和尺寸、设置元素的形状、将一个元素置于另一个之后，以及向某些选择器添加特殊的效果，比如链接。 </p> <p>如果需要更多关于 CSS 的信息，请参阅我们的 <a href=\"css-examples.html\">CSS 实例</a>, <a href=\"/cssref/css-reference.html\"> CSS 参考手册</a>, 和 <a href=\"/css3/css3-tutorial.html\">CSS3 教程</a>。</p> <hr> <h2>你已经学习了CSS,下一步学习什么呢?</h2> <p>下一步应该学习 JavaScript 。</p> <p><strong>JavaScript</strong></p> <p>JavaScript 是最流行的语言之一。</p> <p>JavaScript 是属于 web 的语言，它适用于 PC、笔记本电脑、平板电脑和移动电话。</p> <p>JavaScript可以使您的网站更具活力。</p> <p>许多 HTML 开发者都不是程序员，但是 JavaScript 却拥有非常简单的语法。几乎每个人都有能力将小的 JavaScript 片段添加到网页中。 如果您希望</p> <p>如果您希望学习更多关于 JavaScript 的知识，请马上访问我们的<a href=\"/javascript/js-tutorial.html\">JavaScript 教程</a>.</p><p>学完本教程之后，W3Cschool推荐您进行<a href=\"https://www.w3cschool.cn/codecamp/list?pename=html5_and_css_camp\" target=\"_blank\"><b>CSS实战</b></a>来巩固你刚学习的新知识。</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 32,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "8a7bf69a957a2b8794aaf8c8a38f90a8",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 属性选择器",
      "chapter_level_two_url": "/css/css-attribute-selectors.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">属性</span> 选择器</h2>\n\n<p>顾名思义，CSS 属性选择器就是指可以根据元素的属性以及属性值来选择元素。\n    <br>\n</p>\n<hr>\n <h2>具有特定属性的HTML元素样式</h2> \n<p>具有特定属性的 HTML 元素样式不仅仅是 class 和 id。</p>\n<p><strong>注意：</strong>IE7 和 IE8 需声明 !DOCTYPE 才支持属性选择器！IE6 和更低的版本不支持属性选择器。</p>\n<hr>\n <h2>属性选择器</h2> \n<p>下面的例子是把包含标题（title）的所有元素变为蓝色：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">[title]\n        <br>{ color:blue; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_att\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>属性和值选择器</h2> \n<p>下面的实例改变了标题<code> title='w3cschool' </code>元素的边框样式:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">[title=w3cschool]\n        <br>{ border:5px solid green; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_value\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>属性和值的选择器 - 多值</h2> \n<p>下面是包含指定值的 <code>title</code> 属性的元素样式的例子，使用（<code>~</code>）分隔属性和值:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">[title~=hello] { color:blue; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_space\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>下面是包含指定值的 <code>lang</code> 属性的元素样式的例子，使用（<code>|</code>）分隔属性和值:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">[lang|=en] { color:blue; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_valuelist_hyphen\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n <h2>表单样式</h2> \n<p>属性选择器样式无需使用 class 或 id 的形式:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">input[type=\"text\"]\n        <br>{ width:150px;\n        <br>display:block;\n        <br>margin-bottom:10px;\n        <br>background-color:yellow; }\n        <br>input[type=\"button\"]\n        <br>{ width:120px;\n        <br>margin-left:35px;\n        <br>display:block; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_attselector_form\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n\n<h2>相关文章</h2>\n\n<p>CSS 参考手册：<a href=\"https://www.w3cschool.cn/cssref/sel-attribute-value-lang.html\" target=\"_blank\">CSS [attribute|=value] 选择器</a>\n\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 31,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c5884757ea38541890caab2d45f9e38d",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 媒体类型",
      "chapter_level_two_url": "/css/css-mediatypes.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">媒体类型</span> </h2> \n<hr>\n<p class=\"intro\">媒体类型允许你指定文件将如何在不同媒体呈现。该文件可以以不同的方式显示在屏幕上，在纸张上，或听觉浏览器等等。 </p>\n<hr>\n <h2>媒体类型</h2> \n<p class=\"test\"><span>某些 CSS 属性仅仅被设计为针对某些媒介。比方说 <code>voice-family</code> 属性被设计为针对听觉用户终端。</span>其他一些属性可用于不同的媒体类型。例如，<code>font-size</code>属性可用于屏幕和印刷媒体，但有不同的值。屏幕和纸上的文件不同，通常需要一个更大的字体，<code>sans - serif</code>字体比较适合在屏幕上阅读，而 serif 字体更容易在纸上阅读。</p>\n<hr>\n <h2> @media 规则</h2> \n<p>@media 规则允许在相同样式表为不同媒体设置不同的样式。</p>\n<p>在下面的例子告诉我们浏览器屏幕上显示一个14像素的 Verdana 字体样式。但是如果页面打印，将是10个像素的 Times 字体。请注意，<code>font-weight</code>在屏幕上和纸上设置为粗体：</p>\n<blockquote><p>&lt;style&gt;</p><p>@media screen</p><p>{ p.test {font-family:verdana,sans-serif;font-size:14px; } }</p><p>@media print</p><p>{ p.test {font-family:times,serif;font-size:10px;} }</p><p>@media screen,print</p><p>{ p.test {font-weight:bold;}}</p><p>&lt;/style&gt;</p>\n    </blockquote>\n        \n\n        <p><strong>你可以自己尝试看看 !</strong> 如果您使用的是 Mozilla / Firefox 或 IE5+打印此页，你会看到，<code>Media Types</code>将使用另一种比其他文本字体大小小点的字体显示。</p>\n        <p><b>提示：</b>有关 @media 规则的更多信息，请参考CSS参考手册的<a href=\"https://www.w3cschool.cn/cssref/css3-pr-mediaquery.html\" target=\"_blank\">CSS @media 查询</a>部分。</p>\n        <hr>\n         <h2>其他媒体类型</h2> \n        <p><strong>注意：</strong>媒体类型名称不区分大小写。</p>\n        <table class=\"reference       \">\n            <tbody>\n                <tr>\n                    <th>媒体类型</th>\n                    <th>描述</th>\n                </tr>\n                <tr>\n                    <td>all</td>\n                    <td>用于所有的媒体设备。</td>\n                </tr>\n                <tr>\n                    <td>aural</td>\n                    <td>用于语音和音频合成器。</td>\n                </tr>\n                <tr>\n                    <td>braille</td>\n                    <td>用于盲人用点字法触觉回馈设备。</td>\n                </tr>\n                <tr>\n                    <td>embossed</td>\n                    <td>用于分页的盲人用点字法打印机。</td>\n                </tr>\n                <tr>\n                    <td>handheld</td>\n                    <td>用于小的手持的设备。</td>\n                </tr>\n                <tr>\n                    <td>print</td>\n                    <td>用于打印机。</td>\n                </tr>\n                <tr>\n                    <td>projection</td>\n                    <td>用于方案展示，比如幻灯片。</td>\n                </tr>\n                <tr>\n                    <td>screen</td>\n                    <td>用于电脑显示器。</td>\n                </tr>\n                <tr>\n                    <td>tty</td>\n                    <td>用于使用固定密度字母栅格的媒体，比如电传打字机和终端。</td>\n                </tr>\n                <tr>\n                    <td>tv</td>\n                    <td>用于电视机类型的设备。</td>\n                </tr>\n            </tbody>\n        </table>\n        <br>\n        <hr>\n        \n<h2>扩展阅读</h2>\n\n        <p>CSS3教程：<a href=\"https://www.w3cschool.cn/css3/css3-mediaqueries.html\" target=\"_blank\">CSS3 多媒体查询</a>\n\n        </p>\n    \n<p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 30,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f1ab90a463cba2f527c593682be29d0c",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 图像拼合技术",
      "chapter_level_two_url": "/css/css-image-sprites.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">图像拼合技术</span> </h2> \n<hr>\n <h2>图像拼合</h2> \n<p>图像拼合就是单个图像的集合。</p>\n<p>有许多图像的网页可能需要很长的时间来加载和生成多个服务器的请求。</p>\n<p>使用图像拼合会降低服务器的请求数量，并节省带宽。</p>\n<hr>\n <h2>图像拼合 - 简单实例</h2> \n<p>与其使用三个独立的图像，不如我们使用这种单个图像（\"img_navsprites.gif\"）：</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/img_navsprites.gif\" alt=\"navigation images\">\n</p>\n<p>有了CSS，我们可以只显示我们需要的图像的一部分。</p>\n<p>在下面的例子CSS指定显示 \"img_navsprites.gif\" 的图像的一部分：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">img.home\n        <br>{\n        <br>width:46px;\n        <br>height:44px;\n        <br>background:url(img_navsprites.gif) 0 0;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_img\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><strong>实例解析：</strong>\n\n</p>\n<ul>\n    <li><span>&lt;img class=\"home\" src=\"img_trans.gif\" /&gt;</span> -因为不能为空，<code>src</code> 属性只定义了一个小的透明图像。显示的图像将是我们在 CSS 中指定的背景图像</li>\n    <li>宽度：46px;高度：44px; - 定义我们使用的那部分图像</li>\n    <li><code>background:url(img_navsprites.gif) 0 0</code>; - 定义背景图像和它的位置（左 0px，顶部 0px）</li>\n</ul>\n<p>这是使用图像拼合最简单的方法，现在我们使用链接和悬停效果。</p>\n<hr>\n <h2>图像拼合 - 创建一个导航列表</h2> \n<p>我们想使用拼合图像 (<code>\"img_navsprites.gif\"</code>)，以创建一个导航列表。</p>\n<p>我们将使用一个 HTML 列表，因为它可以链接，同时还支持背景图像：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">#navlist{position:relative;}\n        <br>#navlist li{margin:0;padding:0;list-style:none;position:absolute;top:0;}\n        <br>#navlist li, #navlist a{height:44px;display:block;}\n        <br>\n        <br>#home{left:0px;width:46px;}\n        <br>#home{background:url('img_navsprites.gif') 0 0;}\n        <br>\n        <br>#prev{left:63px;width:43px;}\n        <br>#prev{background:url('img_navsprites.gif') -47px 0;}\n        <br>\n        <br>#next{left:129px;width:43px;}\n        <br>#next{background:url('img_navsprites.gif') -91px 0;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_nav\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p class=\"elem_d11\"><strong>实例解析：</strong>\n\n</p>\n<ul class=\"dd\">\n    <li><code>#navlist{position:relative;}</code> - 位置设置相对定位，让里面的绝对定位</li>\n    <li><code>#navlist li{margin:0;padding:0;list-style:none;position:absolute;top:0;} </code>- <code>margin</code>和<code>padding</code> 设置为0，列表样式被删除，所有列表项是绝对定位</li>\n    <li><code>#navlist li, #navlist a{height:44px;display:block;}</code> - 所有图像的高度是 44px</li>\n</ul>\n<p class=\"elem_d11\">现在开始每个具体部分的定位和样式：</p>\n<ul class=\"dd\">\n    <li><code>#home{left:0px;width:46px;}</code> - 定位到最左边的方式，以及图像的宽度是 46px</li>\n    <li><code>#home{background:url(img_navsprites.gif) 0 0;}</code> - 定义背景图像和它的位置（左0px，顶部0px）</li>\n    <li><code>#prev{left:63px;width:43px;}</code> - <span>左外边距</span>定位63px（＃home宽46px+项目之间的一些多余的空间），宽度为43px。</li>\n    <li><code>#prev{background:url('img_navsprites.gif') -47px 0;}</code> - 定义背景图像向右侧定位47px（＃home宽46px+分隔线的1px）</li>\n    <li><code>#next{left:129px;width:43px;}</code>- <span>左外边距</span>定位129px(#prev 63px + #prev宽是43px + 剩余的空间), 宽度是43px.</li>\n    <li><code>&gt;#next{background:url('img_navsprites.gif') no-repeat -91px 0;}</code>\n\n    </li>- 定义背景图像<span>向右侧定位</span>91px（＃home 46px+1px的分割线+＃prev宽43px+1px的分隔线）</ul>\n<hr>\n <h2>图像拼合 - 悬停效果</h2> \n<p>现在，我们希望我们的导航列表中添加一个悬停效果。</p>\n<table class=\"lamp\">\n    <tbody>\n        <tr>\n            <th width=\"34\">\n                <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.jpg\" alt=\"lamp\" width=\"32\" height=\"32\">\n            </th>\n            <td><strong><code>:hover</code> 选择器用于鼠标悬停在元素上的显示的效果<br><br>提示：</strong> <code>:hover</code> 选择器可以运用于所有元素。在本站CSS参考手册的<a href=\"https://www.w3cschool.cn/cssref/sel-hover.html\" target=\"_blank\">CSS:hover选择器</a>一节，你可以更加了解该选择器的用法。</td>\n        </tr>\n    </tbody>\n</table>\n<p>我们的新图像 (\"img_navsprites_hover.gif\") 包含三个导航图像和三幅图像：</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/img_navsprites_hover.gif\" alt=\"navigation images\">\n</p>\n<p>因为这是一个单一的图像，而不是6个单独的图像文件，当用户停留在图像上不会有延迟加载。</p>\n<p>我们添加悬停效果只添加三行代码：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">#home a:hover{background: url('img_navsprites_hover.gif') 0 -45px;}\n        <br>#prev a:hover{background: url('img_navsprites_hover.gif') -47px -45px;}\n        <br>#next a:hover{background: url('img_navsprites_hover.gif') -91px -45px;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sprites_hover_nav\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p class=\"elem_d11\"><strong>实例解析：</strong>\n\n</p>\n<ul class=\"dd\">\n    <li>由于该列表项包含一个链接，我们可以使用<code>：hover</code> 伪类</li>\n    <li><code>#home a:hover{background: transparent url(img_navsprites_hover.gif) 0 -45px;}</code> - 对于所有三个悬停图像，我们指定相同的背景位置，只是每个再向下45px</li>\n</ul>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 29,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "6601304347d14cc6fbe7f10b071952d1",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 图像透明/不透明",
      "chapter_level_two_url": "/css/css-image-transparency.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS 图像<span class=\"color_h1\">透明/不透明</span> </h2> \n<hr>\n<p class=\"intro\">使用 CSS 很容易创建透明的图像。</p>\n<p class=\"intro\"><strong>注意：</strong>CSS Opacity 属性是W3C 的 CSS3 建议的一部分。</p><hr>\n <h2>实例1 - 创建一个透明图像</h2> \n<p>CSS3中属性的透明度是 <strong>opacity</strong>.</p>\n<p>首先，我们将向您展示如何用CSS创建一个透明图像。</p>\n<p>正常的图像</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/klematis.jpg\" alt=\"klematis\" class=\"\" width=\"150\" height=\"113\">\n</p>\n<p>相同的图像带有透明度：</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/klematis.jpg\" alt=\"klematis\" style=\"opacity:0.4;filter:alpha(opacity=40)\" width=\"150\" height=\"113\">\n</p>\n<p>看看下面的CSS：</p>\n<blockquote>img\n    <br>{  opacity:0.4;  filter:alpha(opacity=40);  /*IE8 及更早版本 */  }\n    <br>\n</blockquote>\n<p>IE9，Firefox，Chrome，Opera，和 Safari 浏览器使用透明度属性可以将图像变的不透明。 Opacity 属性值从0.0 - 1.0。值越小，使得元素更加透明。</p>\n<p>IE8和早期版本使用滤镜：alpha（opacity= x）。 x可以采取的值是从0 - 100。较低的值，使得元素更加透明。</p>\n<p><b>提示：</b>在本站的 CSS 参考手册中对 <a href=\"https://www.w3cschool.cn/cssref/pr-opacity.html\" target=\"_blank\">CSS opacity 属性</a>有详细介绍。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>img</p>\n        <p>{  opacity:0.4;  filter:alpha(opacity=40);  /*IE8 及更早版本 */  }</p>\n    </div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_transparency_0\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n <h2>实例2 - 图像的透明度 - 悬停效果</h2> \n<p>将鼠标移到图像上：</p>\n<p>\n    <img id=\"klem1\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis.jpg\" alt=\"klematis\" width=\"150\" height=\"113\">\n</p>\n<p>\n    <img id=\"klem2\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis2.jpg\" alt=\"klematis\" width=\"150\" height=\"113\">\n</p>\n<p>CSS样式：</p>\n<blockquote>\n    img:hover\n    {\n    opacity:1.0;\n    filter:alpha(opacity=100); /*  IE8 及更早版本 */\n    }\n</blockquote>\n\n<p>第一个 CSS 块是和例1中的代码类似。此外，我们还增加了当用户将鼠标悬停在其中一个图像上时发生什么。在这种情况下，当用户将鼠标悬停在图像上时，我们希望图片是清晰的。</p>\n<p>此 CSS 是：<strong>opacity=1</strong>.</p>\n<p>IE8 和更早版本使用： <strong>filter:alpha(opacity=100)</strong>.</p>\n<p>当鼠标指针远离图像时，图像将重新具有透明度。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>img:hover</p><p>{ opacity:1.0;</p><p>filter:alpha(opacity=100); /* For IE8 and earlier */}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_transparency\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n <h2>实例3 - 透明的盒子中的文字</h2> \n<div>\n    <div class=\"transbox\">\n        <p>这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。</p>\n    </div>\n</div>\n\n\n<p>首先，我们创建一个固定的高度和宽度的div元素，带有一个背景图片和边框。然后我们在第一个 div 内部创建一个较小的 div 元素。 这个 div 也有一个固定的宽度，背景颜色，边框 - 而且它是透明的。透明的 div 里面，我们在 P 元素内部添加一些文本。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\"><p>div .background</p><p>{ width:500px;height:250px;border:2px solid black;</p><p>background:url(https://atts.w3cschool.cn/attachments/image/20200818/1597713899949694.jpg) repeat;</p><p>}</p></div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_transparency\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<p>\n    <br>\n</p>\n<p>\n    <br>\n</p></div>\r\n<style>\r\n#klem1,#klem2\r\n{\r\nopacity:0.4;\r\nfilter:alpha(opacity=40); /* For IE8 and earlier */\r\n}\r\n#klem1:hover,#klem2:hover\r\n{\r\nopacity:1.0;\r\nfilter:alpha(opacity=100); /* For IE8 and earlier */\r\n}\r\ndiv.background\r\n  {\r\n  width: 500px;\r\n  height: 250px;\r\n  background: url(klematis.jpg) repeat;\r\n  border: 2px solid black;\r\n  }\r\ndiv.transbox\r\n  {\r\n  width: 400px;\r\n  height: 180px;\r\n  margin: 30px 50px;\r\n  background-color: #ffffff;\r\n  border: 1px solid black;\r\n  /* for IE */\r\n  filter:alpha(opacity=60);\r\n  /* CSS3 standard */\r\n  opacity:0.6;\r\n  }\r\ndiv.transbox p\r\n  {\r\n  margin: 30px 40px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n  }\r\n</style><div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 28,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "d6cd394e56714d7016d5092f155fe09a",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 图片廊",
      "chapter_level_two_url": "/css/css-image-gallery.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">图片廊</span> </h2> <hr> <p class=\"intro\">以下是使用CSS创建图片廊：</p> <div class=\"img\"> <a target=\"_blank\" href=\"#\"><img src=\"https://7n.w3cschool.cn/statics/images/course/klematis_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\"></a> <div class=\"desc\">添加图片描述</div></div><div class=\"img\"> <a target=\"_blank\" href=\"#\"><img src=\"https://7n.w3cschool.cn/statics/images/course/klematis2_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\"></a> <div class=\"desc\">添加图片描述</div></div><div class=\"img\"> <a target=\"_blank\" href=\"#\"><img src=\"https://7n.w3cschool.cn/statics/images/course/klematis3_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\"></a> <div class=\"desc\">添加图片描述</div></div><div class=\"img\"> <a target=\"_blank\" href=\"#\"><img src=\"https://7n.w3cschool.cn/statics/images/course/klematis4_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\"></a> <div class=\"desc\">添加图片描述</div></div><p><br></p><p><br></p><p><br></p><p><br></p><hr><p></p><h2>图片廊</h2> <p>以下是使用CSS创建图片廊：</p> <div class=\"example\"> <h2 class=\"example\">实例</h2><br><div class=\"example_code notranslate\"> &lt;style&gt;<br> div.img<br>   { height:auto;width:auto;float:left;text-align:center;}<br> div.img img<br>   { display:inline;}<br> div.desc<br>   { text-align:center;<br>   font-weight:normal;<br>   width:120px;<br>   margin:2px;<br>   }<br> &lt;/style&gt;<br></div> <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_image_gallery\" class=\"tryitbtn\">尝试一下 »</a> </div></div>\r\n<style>\r\ndiv.img\r\n{\r\n  margin: 2px;\r\n  border: 1px solid #0000ff;\r\n  height: auto;\r\n  width: auto;\r\n  float: left;\r\n  text-align: center;\r\n}\t\r\ndiv.img img\r\n{\r\n  display: inline;\r\n  margin: 3px;\r\n  border: 1px solid #ffffff;\r\n}\r\ndiv.img a:hover img {border: 1px solid #0000ff;}\r\ndiv.desc\r\n{\r\n  text-align: center;\r\n  font-weight: normal;\r\n  width: 120px;\r\n  margin: 2px;\r\n}\r\n</style><div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 27,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "b60f36619006c0eca4c013be7ef92aad",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 下拉菜单",
      "chapter_level_two_url": "/css/xohvqfmc.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS 下拉菜单</h2>\n\n<p>使用 CSS 创建一个鼠标移动上去后显示下拉菜单的效果。</p>\n<hr>\n\n<h2>基本下拉菜单</h2>\n\n<p>当鼠标移动到指定元素上时，会出现下拉菜单。</p>\n<div class=\"example\">\n     <h3>实例<span class=\"highELE\"></span><br><span class=\"highELE\"></span></h3>\n\n    <div class=\"example_code\"><span><span><span></span></span>\n        </span>\n        <div><span>&lt;style&gt;<br>.dropdown </span>{\n            <br>    <span>position:</span><span> relative;</span>\n\n            <br>    <span>display:</span><span> inline-block;</span>\n}\n            <br><span>.dropdown-content </span>{\n            <br>    <span>display:</span><span> none;</span>\n\n            <br>    <span>position:</span><span> absolute;</span> }\n            <br><span>.dropdown:hover .dropdown-content </span>{\n            <br>    <span>display:</span><span> block;</span>\n}\n            <br><span>&lt;/style&gt;<span><span></span></span>\n            </span>\n        </div>\n    </div>\n    <br>\n<a target=\"_blank\" href=\"//www.w3cschool.cn/tryrun/showhtml/trycss_dropdown_text\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n\n<h3>实例解析</h3>\n\n<p><strong>HTML 部分：</strong>\n\n</p>\n<p>我们可以使用任何的 HTML元素来打开下拉菜单，如：&lt;span&gt;, 或 a &lt;button&gt; 元素。</p>\n<p>使用容器元素 (如： &lt;div&gt;) 来创建下拉菜单的内容，并放在任何你想放的位置上。</p>\n<p>使用 &lt;div&gt; 元素来包裹这些元素，并使用 CSS 来设置下拉内容的样式。</p>\n<div></div>\n<div></div>\n<p><strong>CSS 部分：</strong>\n\n</p>\n<p><code>.dropdown</code> 类使用 <code>position:relative</code>, 这将设置下拉菜单的内容放置在下拉按钮 (使用 <code>position:absolute</code>) 的右下角位置。</p>\n<p><code>.dropdown-content</code> 类中是实际的下拉菜单。默认是隐藏的，在鼠标移动到指定元素后会显示。 注意 <code>min-width</code> 的值设置为 160px。你可以随意修改它。 <strong>注意:</strong> 如果你想设置下拉内容与下拉按钮的宽度一致，可设置 <code>width</code> 为 100% ( <code>overflow:auto</code> 设置可以在小尺寸屏幕上滚动)。</p>\n<p>我们使用 <code>box-shadow</code> 属性让下拉菜单看起来像一个\"卡片\"。</p>\n<p><code>:hover</code> 选择器用于在用户将鼠标移动到下拉按钮上时显示下拉菜单。</p>\n<hr>\n\n<h2>下拉菜单</h2>\n\n<p>创建下拉菜单，并允许用户选取列表中的某一项：</p>\n<div class=\"dropdown dropdown2\"></div>\n<div class=\"dropdown dropdown2\"></div>\n<p>这个实例类似前面的实例，当我们在下拉列表中添加了链接，并设置了样式：</p>\n<div class=\"example\">\n     <h3>实例</h3>\n\n    <div class=\"example_code\"><span class=\"highELE\"><span></span></span><span>&lt;style&gt;<br><span>/* 容器 &lt;div&gt; - 需要定位下拉内容 */</span>\n\n        <br><span>.dropdown </span>{\n        <br>    <span>position:</span><span> relative;</span>\n\n        <br>    <span>display:</span><span> inline-block;</span>\n}\n        <br><span>/* 下拉内容 (默认隐藏) */</span>\n\n        <br><span>.dropdown-content </span>{\n        <br>    <span>display:</span><span> none;</span>\n\n        <br>    <span>position:</span><span> absolute;</span>\n}\n        <br><span>/* 下拉菜单的链接 */</span>\n\n        <br><span>.dropdown-content a </span>{\n        <br>    <span>text-decoration:</span><span> none;</span>\n\n        <br>    <span>display:</span><span> block;</span>\n}\n        <br><span>/* 鼠标移上去后修改下拉菜单链接颜色 */</span>\n\n        <br><span>.dropdown-content a:hover </span>{<span>background-color:</span><span> #f1f1f1</span>}\n        <br><span>/* 在鼠标移上去后显示下拉菜单 */</span>\n\n        <br><span>.dropdown:hover .dropdown-content </span>{\n        <br>    <span>display:</span><span> block;</span>\n}\n        <br><span>/* 当下拉内容显示后修改下拉按钮的背景颜色 */</span>\n\n        <br><span>.dropdown:hover .dropbtn </span>{\n        <br>    <span>background-color:</span><span> #3e8e41;</span>\n}\n        <br><span>&lt;/style&gt;</span></span>\n        <br><span class=\"htmlHigh\"><span class=\"highGT\"></span></span>\n    </div>\n    <br><a target=\"_blank\" href=\"//www.w3cschool.cn/tryrun/showhtml/trycss_dropdown_button\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<hr>\n\n<h2>下拉内容对齐方式</h2>\n\n\n<h3>float:left;</h3>\n\n\n<h3>float:right;</h3>\n\n\n<p></p>\n<div class=\"example\">\n     <h3>实例</h3>\n\n    <div class=\"example_code\"><span class=\"highELE\">.dropdown-content </span>{\n        <br><span class=\"highATT\">right:</span><span class=\"highVAL\"> 0;</span>\n}\n        <br>\n    </div><a target=\"_blank\" href=\"//www.w3cschool.cn/tryrun/showhtml/trycss_dropdown_right\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br>\n</div>\n<hr>\n\n<h2>更多实例</h2>\n\n<p><a href=\"//www.w3cschool.cn/tryrun/showhtml/trycss_dropdown_image\" target=\"_blank\">图片下拉</a>\n\n    <br>该实例演示了如何如何在下拉菜单中添加图片。</p>\n<p><a href=\"//www.w3cschool.cn/tryrun/showhtml/trycss_dropdown_navbar\" target=\"_blank\">导航条下拉</a>\n\n    <br>该实例演示了如何在导航条上添加下拉菜单。</p>\n<p>\n    <br>\n</p></div>\r\n<style>\r\n.content-intro .dropbtn {\r\n    background-color: #AE4141;\r\n    color: white;\r\n    padding: 16px;\r\n    font-size: 16px;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\ncontent-intro .dropdown {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.content-intro .dropdown:hover .dropbtn {\r\n    background-color:#ff0000;\r\n}\r\n\r\n.dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f9f9f9;\r\n    min-width: 100%;\r\n    overflow: auto;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1;\r\n}\r\n\r\n.dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    text-decoration: none;\r\n    display: block;\r\n}\r\n\r\n.dropdown-content a:hover {background-color: #f1f1f1}\r\n\r\n.dropdown2:hover .dropdown-content {\r\n    display: block;\r\n}\r\n\r\n.right {\r\n\tright:0;\r\n}\r\n@media only screen and (max-width: 600px) {\r\n.dropdown {\r\n\tdisplay:inline;\r\n}\r\n.dropbtn {\r\n   width: 100%;\r\n   margin-top:55px;\r\n  }\r\n.dropbtn2 {\r\n   margin-top:5px;\r\n  }\r\n.dropspan {\r\n   width: 100%;\r\n   margin-top:5px;\r\n  }\r\n\r\n.dropimg {\r\n   margin-top:55px;\r\n  }\r\n.right {\r\n\tleft:0;\r\n\tmin-width:300px;\r\n}\r\n\r\n}\r\n\r\n@media only screen and (max-width: 346px) {\r\n.right {\r\n\tleft:0;\r\n\tmin-width:252px;\r\n}\r\n\r\n}\r\n.show {display:block;}\r\n</style><div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 26,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "da7712ed82b6db8c015f3454e0bbc31d",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 导航栏",
      "chapter_level_two_url": "/css/31tvyfm8.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><div class=\"article-body\">\n    <div class=\"article-intro\" id=\"content\">\n         <h2>CSS <span class=\"color_h1\">导航栏</span></h2>\n\n        <hr>\n         <h2>导航栏</h2>\n\n        <p>熟练使用导航栏，对于任何网站都非常重要。</p>\n        <p>使用 CSS 你可以转换成好看的导航栏而不是枯燥的 HTML 菜单。</p>\n        <hr>\n         <h2>导航栏=链接列表</h2>\n\n        <p>作为标准的 HTML 基础一个导航栏是必须的。</p>\n        <p>在我们的例子中我们将建立一个标准的 HTML 列表导航栏。</p>\n        <p>导航条基本上是一个链接列表，所以使用 <code>&lt;ul&gt;</code> 和 <code>&lt;li&gt; </code>元素非常有意义：</p>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2>\n\n            <div class=\"example_code notranslate\">&lt;ul&gt;\n                <br> &lt;li&gt;&lt;a href=\"default.asp\"&gt;主页&lt;/a&gt;&lt;/li&gt;\n                <br> &lt;li&gt;&lt;a href=\"news.asp\"&gt;新闻&lt;/a&gt;&lt;/li&gt;\n                <br> &lt;li&gt;&lt;a href=\"contact.asp\"&gt;联系&lt;/a&gt;&lt;/li&gt;\n                <br> &lt;li&gt;&lt;a href=\"about.asp\"&gt;关于&lt;/a&gt;&lt;/li&gt;\n                <br>&lt;/ul&gt;\n                <br>\n            </div>\n            <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_basic_html\">尝试一下 »</a>\n\n        </div>\n        <p>现在，让我们从列表中删除边距和填充：</p>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2>\n\n            <div class=\"example_code notranslate\">ul {\n                <br> list-style-type:none;\n                <br> margin:0;\n                <br> padding:0;\n                <br>}</div>\n            <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_basic_css\">尝试一下 »</a>\n\n        </div>\n        <p>例子解析：</p>\n        <ul class=\" list-paddingleft-2\">\n            <li>\n                <p><code>list-style-type:none</code> - 移除列表前小标志。一个导航栏并不需要列表标记</p>\n            </li>\n            <li>\n                <p>移除浏览器的默认设置将边距和填充设置为 0</p>\n            </li>\n        </ul>\n        <p>上面的例子中的代码是垂直和水平导航栏使用的标准代码。</p>\n        <hr>\n         <h2>垂直导航栏</h2>\n\n        <p>上面的代码，我们只需要 <a>元素的样式，建立一个垂直的导航栏：</a>\n\n        </p>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2>\n\n            <div class=\"example_code notranslate\">a\n                <br>{\n                <br>display:block;\n                <br>width:60px;\n                <br>}</div>\n            <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_vertical\">尝试一下 »</a>\n\n        </div>\n        <p>示例说明：</p>\n        <ul class=\" list-paddingleft-2\">\n            <li>\n                <p>display:block - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度</p>\n            </li>\n            <li>\n                <p>width:60px - 块元素默认情况下是最大宽度。我们要指定一个 60 像素的宽度</p>\n            </li>\n        </ul>\n        <p><strong>提示：</strong>查看<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_vertical_advanced\">完全样式的垂直导航栏的示例</a>.</p>\n        <p><strong>注意：</strong> 请务必指定 <a>元素在垂直导航栏的的宽度。如果省略宽度，IE6可能产生意想不到的效果。</a>\n\n        </p>\n        <hr>\n         <h2>水平导航栏</h2>\n\n        <p>有两种方法创建横向导航栏。使用<strong>内联</strong>或<strong>浮动</strong>的列表项。</p>\n        <p>这两种方法都很好，但如果你想链接到具有相同的大小，你必须使用浮动的方法。</p>\n        <hr>\n         <h2>内嵌列表项</h2>\n\n        <p>建立一个横向导航栏的方法之一是指定</p>\n        <p>元素， 上述代码是标准的内嵌:</p>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2>\n\n            <div class=\"example_code notranslate\">li\n                <br>{ display:inline; }</div>\n            <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal\">尝试一下 »</a>\n\n        </div>\n        <p>实例解析：</p>\n        <ul>\n            <li><code>display:inline</code> - 默认情况下，&lt;li&gt; 元素是块元素。在这里，我们删除换行符之前和之后每个列表项，以显示一行。</li>\n        </ul>\n        <p><strong>提示:</strong> 查看 <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal_advanced\">完全样式的水平导航栏的示例</a>.</p>\n        <hr>\n         <h2>浮动列表项</h2>\n\n        <p>在上面的例子中链接有不同的宽度。</p>\n        <p>对于所有的链接宽度相等，浮动</p>元素，并指定为 <a>元素的宽度：</a>\n\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2>\n\n            <div class=\"example_code notranslate\">li\n                <br>{ float:left; }\n                <br>a\n                <br>{ display:block; width:60px; }</div>\n            <br><a target=\"_blank\" class=\"tryitbtn\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal_float\">尝试一下 »</a>\n\n        </div>\n        <p>实例解析：</p>\n        <ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\">\n            <li>\n                <p><code>float:left</code> - 使用浮动块元素的幻灯片彼此相邻</p>\n            </li>\n            <li>\n                <p><code>display:block</code> - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度</p>\n            </li>\n            <li>\n                <p>width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度</p>\n            </li>\n            <li>\n                <p><code>display:inline;</code> -默认情况下，元素是块元素。在这里，我们删除换行符之前和之后每个列表项，以显示一行 。</p>\n            </li>\n        </ul>\n        <p><strong>Tip:</strong>查看<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_navbar_horizontal_float_advanced\">完全样式的横向导航栏的示例.</a>.</p>\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 25,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f55e15ebb553280d2d126909ee326cf8",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 伪元素",
      "chapter_level_two_url": "/css/css-pseudo-elements.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\"> 伪元素</span> </h2> \n<hr>\n<p class=\"intro\">CSS 伪元素是用来添加一些选择器的特殊效果。</p>\n<p class=\"intro\">CSS 伪元素控制的内容和元素是没有差别的，但是它本身只是基于元素的抽象，并不存在于文档中，所以称为伪元素。\n    <br>\n</p>\n<hr>\n <h2>语法</h2> \n<p>伪元素的语法：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>selector:pseudo-element {property:value;}</p>\n    </div>\n</div>\n<p>CSS类也可以使用伪元素：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>selector.class:pseudo-element {property:value;}</p>\n    </div>\n</div>\n<hr>\n <h2>:first-line 伪元素</h2> \n<p>\"first-line\" 伪元素用于向文本的首行设置特殊样式。</p>\n<p>在下面的例子中，浏览器会根据 \"first-line\" 伪元素中的样式对 p 元素的第一行文本进行格式化：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p:first-line\n        <br>{\n        <br>color:#ff0000;\n        <br>font-variant:small-caps;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><strong>注意：</strong>\"first-line\" 伪元素只能用于块级元素。</p>\n<p><strong>注意：</strong> 下面的属性可应用于 \"first-line\" 伪元素：</p>\n<ul>\n    <li>font properties</li>\n    <li>color properties </li>\n    <li>background properties</li>\n    <li>word-spacing</li>\n    <li>letter-spacing</li>\n    <li>text-decoration</li>\n    <li>vertical-align</li>\n    <li>text-transform</li>\n    <li>line-height</li>\n    <li>clear</li>\n</ul>\n<hr>\n <h2>:first-letter 伪元素</h2> \n<p>\"first-letter\" 伪元素用于向文本的首字母设置特殊样式：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p:first-letter\n        <br>{\n        <br>color:#ff0000;\n        <br>font-size:xx-large;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstletter\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><strong>注意：</strong> \"first-letter\" 伪元素只能用于块级元素。</p>\n<p><strong>注意：</strong> 下面的属性可应用于 \"first-letter\" 伪元素： </p>\n<ul>\n    <li>font properties</li>\n    <li>color properties </li>\n    <li>background properties</li>\n    <li>margin properties</li>\n    <li>padding properties</li>\n    <li>border properties</li>\n    <li>text-decoration</li>\n    <li>vertical-align (only if \"float\" is \"none\")</li>\n    <li>text-transform</li>\n    <li>line-height</li>\n    <li>float</li>\n    <li>clear</li>\n</ul>\n<p><b>提示：</b>有关 first-letter 伪元素的相关描述，你可以参考本站的 <a href=\"https://www.w3cschool.cn/cssref/sel-firstletter.html\" target=\"_blank\">CSS :first-letter 伪元素</a> 一节。</p>\n<hr>\n <h2>伪元素和 CSS 类</h2> \n<p>伪元素可以结合 CSS 类： </p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>p.article:first-letter {color:#ff0000;}       </p>\n        <p>&lt;p class=\"article\"&gt;A paragraph in an article&lt;/p&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_elements_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br>点击“尝试一下”按钮查看在线实例</div>\n<p>上面的例子会使所有 class 为 article 的段落的首字母变为红色。</p>\n<hr>\n <h2>Multiple Pseudo-elements</h2> \n<p>可以结合多个伪元素来使用。</p>\n<p>在下面的例子中，段落的第一个字母将显示为红色，其字体大小为 xx-large。第一行中的其余文本将为蓝色，并以小型大写字母显示。</p>\n<p>段落中的其余文本将以默认字体大小和颜色来显示：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p:first-letter\n        <br>{\n        <br>color:#ff0000;\n        <br>font-size:xx-large;\n        <br>}\n        <br>p:first-line\n        <br>{\n        <br>color:#0000ff;\n        <br>font-variant:small-caps;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_firstline_letter\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>CSS - :before 伪元素</h2> \n<p>\":before\" 伪元素可以在元素的内容前面插入新内容。</p>\n<p>下面的例子在每个 &lt;h1&gt;元素前面插入一幅图片：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h1:before\n        <br>{\n        <br>content:url(smiley.gif);\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_before\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>CSS - :after 伪元素</h2> \n<p>\":after\" 伪元素可以在元素的内容之后插入新内容。</p>\n<p>下面的例子在每个 &lt;h1&gt; 元素后面插入一幅图片：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h1:after\n        <br>{\n        <br>content:url(smiley.gif);\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_after\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>所有CSS伪类/元素</h2> \n<table id=\"table13\" class=\"reference\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" width=\"100%\">\n    <tbody>\n        <tr>\n            <th align=\"left\" width=\"20%\">选择器</th>\n            <th align=\"left\" width=\"17%\">示例</th>\n            <th align=\"left\" width=\"63%\">示例说明</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-link.html\">:link</a>\n\n            </td>\n            <td class=\"notranslate\">a:link</td>\n            <td>选择所有未访问链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-visited.html\">:visited</a>\n\n            </td>\n            <td class=\"notranslate\">a:visited</td>\n            <td>选择所有访问过的链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-active.html\">:active</a>\n\n            </td>\n            <td class=\"notranslate\">a:active</td>\n            <td>选择正在活动链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-hover.html\">:hover</a>\n\n            </td>\n            <td class=\"notranslate\">a:hover</td>\n            <td>把鼠标放在链接上的状态</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-focus.html\">:focus</a>\n\n            </td>\n            <td class=\"notranslate\">input:focus</td>\n            <td>选择元素输入后具有焦点</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstletter.html\">:first-letter</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-letter</td>\n            <td>选择每个&lt;p&gt; 元素的第一个字母</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstline.html\">:first-line</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-line</td>\n            <td>选择每个&lt;p&gt; 元素的第一行</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstchild.html\">:first-child</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-child</td>\n            <td>选择器匹配属于任意元素的第一个子元素的 &lt;]p&gt; 元素</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-before.html\">:before</a>\n\n            </td>\n            <td class=\"notranslate\">p:before</td>\n            <td>在每个&lt;p&gt;元素之前插入内容</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-after.html\">:after</a>\n\n            </td>\n            <td class=\"notranslate\">p:after</td>\n            <td>在每个&lt;p&gt;元素之后插入内容</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-lang.html\">:lang(<em>language</em>)</a>\n\n            </td>\n            <td class=\"notranslate\">p:lang(it)</td>\n            <td>为&lt;p&gt;元素的lang属性选择一个开始值</td>\n        </tr>\n    </tbody>\n</table>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 24,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "455f300cb9a1a7ee9a9c24d88f20a94a",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 伪类",
      "chapter_level_two_url": "/css/css-pseudo-classes.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><p><span style=\"font-family: inherit; font-size: 16px; font-weight: 600;\">CSS </span><span class=\"color_h1\" style=\"font-family: inherit; font-size: 16px; font-weight: 600;\">伪类 (Pseudo-classes)</span>\n\n</p>\n<hr>\n<p class=\"intro\">CSS 伪类是用来添加一些选择器的特殊效果。</p>\n<p class=\"intro\">由于状态的变化是非静态的，所以元素达到一个特定状态时，它可能得到一个伪类的样式；当状态改变时，它又会失去这个样式。由此可以看出，它的功能和 class 有些类似，但它是基于文档之外的抽象，所以叫伪类。\n    <br>\n</p>\n<hr>\n <h2>语法</h2> \n<p>伪类的语法：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>selector:pseudo-class {property:value;}</p>\n    </div>\n</div>\n<p>CSS 类也可以使用伪类：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>selector.class:pseudo-class {property:value;}</p>\n    </div>\n</div>\n<hr>\n <h2>anchor 伪类</h2> \n<p>在支持 CSS 的浏览器中，链接的不同状态都可以以不同的方式显示</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">a:link {color:#FF0000;} /* 未访问的链接 */\n        <br>a:visited {color:#00FF00;} /* 已访问的链接 */\n        <br>a:hover {color:#FF00FF;} /* 鼠标划过链接 */\n        <br>a:active {color:#0000FF;} /* 已选中的链接 */</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link\" class=\"tryitbtn\">尝试一下 »</a> \n    <br>\n</div>\n<p><strong>注意：</strong> 在 CSS 定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。</p>\n<p><strong>注意：</strong> 在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。</p>\n<p><strong>注意：</strong>伪类的名称不区分大小写。</p>\n<hr>\n <h2>伪类和 CSS 类</h2> \n<p>伪类可以与 CSS 类配合使用：</p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\"><p>a.red:visited {color:#FF0000;}       </p><p>&lt;a class=\"red\" href=\"css-syntax.html\"&gt;CSS Syntax&lt;/a&gt;</p></div></div>\n<p>如果在上面的例子的链接已被访问，它会显示为红色。</p>\n<hr>\n <h2>CSS - :first - child 伪类</h2> \n<p>您可以使用 :first-child 伪类来选择元素的第一个子元素</p>\n<p><strong>注意：</strong>在 IE8 的之前版本必须声明 <a href=\"/htmltags/tag-doctype.html\">&lt;!DOCTYPE&gt;</a> ，这样 :first-child 才能生效。</p>\n <h2>匹配第一个 &lt;p&gt; 元素</h2> \n<p>在下面的例子中，选择器匹配作为任何元素的第一个子元素的 &lt;p&gt; 元素：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">&lt;html&gt;\n        <br>&lt;head&gt;\n        <br>&lt;style&gt;\n        <br>p:first-child\n        <br>{\n        <br>color:blue;\n        <br>}\n        <br>&lt;/style&gt;\n        <br>&lt;/head&gt;\n        <br>\n        <br>&lt;body&gt;\n        <br>&lt;p&gt;我是一个强壮的男人.&lt;/p&gt;\n        <br>&lt;p&gt;我是一个强壮的男人.&lt;/p&gt;\n        <br>&lt;/body&gt;\n        <br>&lt;/html&gt;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child1\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n <h2>匹配所有 &lt;p&gt; 元素中的第一个 &lt;i&gt; 元素</h2> \n<p>在下面的例子中，选择相匹配的所有 &lt;p&gt; 元素的第一个 &lt;i&gt; 元素：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">&lt;html&gt;\n        <br>&lt;head&gt;\n        <br>&lt;style&gt;\n        <br>p &gt; i:first-child\n        <br>{\n        <br>color:blue;\n        <br>}\n        <br>&lt;/style&gt;\n        <br>&lt;/head&gt;\n        <br>\n        <br>&lt;body&gt;\n        <br>&lt;p&gt;我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人. 我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人.&lt;/p&gt; <br>&lt;p&gt;我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人. 我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人.&lt;/p&gt; <br>&lt;/body&gt;\n        <br>&lt;/html&gt;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child2\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n\n<h2>匹配所有作为第一个子元素的 &lt;p&gt; 元素中的所有 &lt;i&gt; 元素</h2>\n\n<p>在下面的例子中，选择器匹配所有作为元素的第一个子元素的 &lt;p&gt; 元素中的所有 &lt;i&gt; 元素：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">&lt;html&gt;\n        <br>&lt;head&gt;\n        <br>&lt;style&gt;\n        <br>p:first-child i\n        <br>{\n        <br>color:blue;\n        <br>}\n        <br>&lt;/style&gt;\n        <br>&lt;/head&gt;\n        <br>\n        <br>&lt;body&gt;\n        <br>&lt;p&gt;我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人. 我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人.&lt;/p&gt;\n        <br>&lt;p&gt;我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人. 我是一个 &lt;i&gt;强壮&lt;/i&gt; 的男人.&lt;/p&gt;\n        <br>&lt;/body&gt;\n        <br>&lt;/html&gt;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_first-child3\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<hr>\n <h2>CSS - :lang 伪类</h2> \n<p>:lang 伪类使你有能力为不同的语言定义特殊的规则</p>\n<p><strong>注意：</strong>IE8 必须声明 <a href=\"/htmltags/tag-doctype.html\">&lt;!DOCTYPE&gt;</a> 才能支持; lang 伪类。</p>\n<p>在下面的例子中，:lang 类为属性值为 no 的 q 元素定义引号的类型：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">&lt;html&gt;\n        <br>&lt;head&gt;\n        <br>&lt;style&gt;\n        <br>q:lang(no) {quotes: \"~\" \"~\";}\n        <br>&lt;/style&gt;\n        <br>&lt;/head&gt;\n        <br>\n        <br>&lt;body&gt;\n        <br>&lt;p&gt;一些文字 &lt;q lang=\"no\"&gt;段落中的引用&lt;/q&gt; 一些文字。&lt;/p&gt;\n        <br>&lt;/body&gt;\n        <br>&lt;/html&gt;</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_lang\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<br>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" alt=\"Examples\" height=\"46px\" width=\"40\">\n     <h2>更多实例</h2> \n</div>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link2\">为超链接添加不同样式</a>\n\n    <br>这个例子演示了如何为超链接添加其他样式。</p>\n<p><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_link_focus\">使用 :focus</a>\n\n    <br>这个例子演示了如何使用 :focus 伪类。</p>\n<hr>\n <h2>所有CSS伪类/元素</h2> \n<table id=\"table13\" class=\"reference\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" width=\"100%\">\n    <tbody>\n        <tr>\n            <th align=\"left\" width=\"20%\">选择器</th>\n            <th align=\"left\" width=\"17%\">示例</th>\n            <th align=\"left\" width=\"63%\">示例说明</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-link.html\">:link</a>\n\n            </td>\n            <td class=\"notranslate\">a:link</td>\n            <td>选择所有未访问链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-visited.html\">:visited</a>\n\n            </td>\n            <td class=\"notranslate\">a:visited</td>\n            <td>选择所有访问过的链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-active.html\">:active</a>\n\n            </td>\n            <td class=\"notranslate\">a:active</td>\n            <td>选择正在活动链接</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-hover.html\">:hover</a>\n\n            </td>\n            <td class=\"notranslate\">a:hover</td>\n            <td>把鼠标放在链接上的状态</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-focus.html\">:focus</a>\n\n            </td>\n            <td class=\"notranslate\">input:focus</td>\n            <td>选择元素输入后具有焦点</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstletter.html\">:first-letter</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-letter</td>\n            <td>选择每个&lt;p&gt; 元素的第一个字母</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstline.html\">:first-line</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-line</td>\n            <td>选择每个&lt;p&gt; 元素的第一行</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-firstchild.html\">:first-child</a>\n\n            </td>\n            <td class=\"notranslate\">p:first-child</td>\n            <td>选择器匹配属于任意元素的第一个子元素的 &lt;]p&gt; 元素</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-before.html\">:before</a>\n\n            </td>\n            <td class=\"notranslate\">p:before</td>\n            <td>在每个&lt;p&gt;元素之前插入内容</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-after.html\">:after</a>\n\n            </td>\n            <td class=\"notranslate\">p:after</td>\n            <td>在每个&lt;p&gt;元素之后插入内容</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/sel-lang.html\">:lang(<em>language</em>)</a>\n\n            </td>\n            <td class=\"notranslate\">p:lang(it)</td>\n            <td>为&lt;p&gt;元素的lang属性选择一个开始值</td>\n        </tr>\n    </tbody>\n</table>\n<hr>\n\n<h2>扩展阅读</h2>\n\n<p>CSS 拾遗系列：<a href=\"https://www.w3cschool.cn/css_series/css_series-pwkt24q2.html\" target=\"_blank\">浅谈CSS中的伪元素和伪类</a>\n\n</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 23,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "bfd89e23c9c62736db8265deda5bb443",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 组合选择符",
      "chapter_level_two_url": "/css/css-combinators.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">组合选择符</span> </h2> \nCSS 组合选择符可以让你直观的明白选择器与选择器之间的关系。<br>\n<hr>\n <h2>CSS 组合选择符</h2>\n\n<table class=\"lamp \">\n    <tbody>\n        <tr>\n            <td>\n                <img src=\"https://atts.w3cschool.cn/attachments/day_160721/201607212138039416.jpg\" alt=\"\">组合选择符说明了两个选择器直接的关系。</td>\n        </tr>\n    </tbody>\n</table>\n<p>CSS组合选择符包括各种简单选择符的组合方式。</p>\n<p>在 CSS3 中包含了四种组合方式:</p>\n<ul>\n    <li>后代选取器(以空格分隔)</li>\n    <li>子元素选择器(以大于号分隔）</li>\n    <li>相邻兄弟选择器（以加号分隔）</li>\n    <li>普通兄弟选择器（以波浪号分隔）</li>\n</ul>\n<hr>\n <h2>后代选取器</h2> \n<p>后代选取器匹配所有指定元素的后代元素。</p>\n<p>以下实例选取所有 &lt;p&gt; 元素插入到 &lt;div&gt; 元素中: </p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">div p\n        <br>{\n        <br>background-color:yellow;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sel_element_element\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>子元素选择器</h2> \n<p>与后代选择器相比，子元素选择器（Child selectors）只能选择作为某元素子元素的元素。</p>\n<p>以下实例选择了&lt;div&gt;元素中所有直接子元素 &lt;p&gt; ：</p>\n<div>\n    <div class=\"example\">\n         <h2 class=\"example\">实例</h2> \n        <div class=\"example_code notranslate\">div&gt;p\n            <br>{\n            <br>background-color:yellow;\n            <br>}</div>\n        <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sel_element_gt\" class=\"tryitbtn\">尝试一下 »</a></div>\n    <hr>\n     <h2>相邻兄弟选择器</h2> \n    <p>相邻兄弟选择器（Adjacent sibling selector）可选择紧接在另一元素后的元素，且二者有相同父元素。</p>\n    <p>如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。</p>\n    <p>以下实例选取了所有位于 &lt;div&gt; 元素后的第一个 &lt;p&gt; 元素:</p>\n    <div>\n        <div class=\"example\">\n             <h2 class=\"example\">实例</h2> \n            <div class=\"example_code notranslate\">div+p\n                <br>{\n                <br>background-color:yellow;\n                <br>}</div>\n            <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sel_element_pluss\" class=\"tryitbtn\">尝试一下 »</a> \n        </div>\n        <br>\n        <hr>\n         <h2>普通相邻兄弟选择器</h2> \n        <p>普通兄弟选择器选取所有指定元素的相邻兄弟元素。</p>\n        <p>以下实例选取了所有 &lt;div&gt; 元素之后的所有相邻兄弟元素 &lt;p&gt; : </p>\n        <div>\n            <div class=\"example\">\n                 <h2 class=\"example\">实例</h2> \n                <div class=\"example_code notranslate\">div~p\n                    <br>{\n                    <br>background-color:yellow;\n                    <br>}</div>\n                <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_sel_element_tilde\" class=\"tryitbtn\">尝试一下 »</a></div></div></div></div></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 22,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "e1433c452b51939c981e9c5b91ec78c3",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 水平对齐 (Horizontal Align)",
      "chapter_level_two_url": "/css/css-align.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">水平对齐 (Horizontal Align)</span> </h2>\n\n<p>关于 CSS 中元素的水平对齐 (Horizontal Align)，你可以使用多种属性来进行设置。</p>\n<hr>\n<div style=\"text-align:center\">\n    <div style=\"border:1px solid gray;padding:2px 14px;margin-left:auto;margin-right:auto;width:45%;background-color:#e5eecc;text-align:left\">\n         <h2>在CSS中，有几个属性用于元素水平对齐。</h2> \n    </div>\n</div>\n<hr>\n <h2>块元素对齐</h2> \n<p>块元素是一个元素，占用了全宽，前后都是换行符。</p>\n<p>块元素的例子：</p>\n<ul>\n    <li>&lt;h1&gt;</li>\n    <li>&lt;p&gt;</li>\n    <li>&lt;div&gt;</li>\n</ul>\n<p>文本对齐，请参阅 <a href=\"css-text.html\"> CSS文本</a> 章节。.</p>\n<p>在这一章中，我们会告诉你块元素如何水平对齐布局。</p>\n<hr>\n <h2>中心对齐,使用margin属性</h2> \n<p>块元素可以把左，右页边距设置为\"自动\"对齐。</p>\n<p><strong>Note: </strong>在IE8中使用margin:auto属性无法正常工作，除非声明 <strong> !DOCTYPE </strong>\n\n</p>\n<p>margin属性可任意拆分为左，右页边距设置自动指定，结果都是出现居中元素：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">.center\n        <br>{\n        <br>margin-left:auto;\n        <br>margin-right:auto;\n        <br>width:70%;\n        <br>background-color:#b0e0e6;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_container\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><strong>提示:</strong> 如果宽度是 100％，对齐是没有效果的。</p>\n<p><strong>注意：</strong>IE5 中块元素有一个 margin 处理 BUG。为了使上述例子能工作，在 IE5 中，需要添加一些额外的代码。 </p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;style&gt;</p>\n        <p>        .container</p>\n        <p>        {</p>\n        <p>            text-align:center;</p>\n        <p>        }</p>\n        <p>        .center</p>\n        <p>        {</p>\n        <p>            margin-left:auto;</p>\n        <p>            margin-right:auto;</p>\n        <p>            width:70%;</p>\n        <p>            background-color:#b0e0e6;</p>\n        <p>            text-align:left;</p>\n        <p>        }</p>\n        <p>&lt;/style&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_align_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br>点击“尝试一下”按钮查看在线实例</div>\n<hr>\n <h2>使用 position 属性设置左，右对齐</h2> \n<p>元素对齐的方法之一是使用绝对定位：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">.right\n        <br>{\n        <br>position:absolute;\n        <br>right:0px;\n        <br>width:300px;\n        <br>background-color:#b0e0e6;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_pos\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><strong>注意：</strong>绝对定位与文档流无关，所以它们可以覆盖页面上的其它元素。</p>\n<hr>\n <h2>使用 float 属性设置左，右对齐</h2> \n<p>使用 float 属性是对齐元素的方法之一：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">.right\n        <br>{\n        <br>float:right;\n        <br>width:300px;\n        <br>background-color:#b0e0e6;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<div>\n    <br>\n</div>\n<hr>\n\n<h2>使用 Padding 设置垂直居中对齐</h2>\n\n<p>CSS 中一个简单的设置垂直居中对齐的方式就是头部顶部使用 padding:</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>.center { padding: 70px 0; border: 3px solid green; }</p>\n    </div>\n</div>\n<p>如果要水平和垂直都居中，可以使用 padding 和 text-align: center:\n    <br>\n</p>\n\n<div class=\"example\">\n    <div class=\"example_code notranslate\"><p>.center { padding: 70px 0; border: 3px solid green; text-align: center; }</p></div></div>\n<hr>\n <h2>Crossbrowser 兼容性问题</h2> \n<p>类似这样的元素对齐时，预先确定 margin 和元素的填充，始终是一个好主意。这是为了避免在不同的浏览器中的可视化差异。</p>\n<p>IE8 和早期有一个问题，当使用 float 属性时。如果一个容器元素（在本例中&lt;div class=\"container\"&gt;<span style=\"line-height: 1.7;\">）指定的宽度，!DOCTYPE 声明缺失，IE8 和早期版本会在右边增添 17px 的 margin。这似乎是一个滚动的预留空间。使用 float 属性始终设置在 DOCTYPE 声明中！</span>\n\n</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">body\n        <br>{\n        <br>margin:0;\n        <br>padding:0;\n        <br>}\n        <br>.right\n        <br>{\n        <br>float:right;\n        <br>width:300px;\n        <br>background-color:#b0e0e6;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_align_float_crossbrowser\" class=\"tryitbtn\">尝试一下 »</a>\n\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 21,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "c969e706e37bd24dec92907a5a8fcba9",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Float（浮动）",
      "chapter_level_two_url": "/css/css-float.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Float(浮动)</span> </h2> \n<p>CSS float 属性定义元素在哪个方向浮动，浮动元素会生成一个块级框，直到该块级框的外边缘碰到包含框或者其他的浮动框为止。</p>\n<hr>\n <h2>什么是 CSS Float（浮动）？</h2> \n<div class=\"imgbox\" id=\"imgbox1\">\n    <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis_small.jpg\" width=\"107\" height=\"90\" alt=\"\">\n    <br>\n</div>\n<div class=\"imgbox\" id=\"imgbox2\">\n    <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis2_small.jpg\" width=\"107\" height=\"80\" alt=\"\">\n</div>\n<div class=\"imgbox\" id=\"imgbox3\">\n    <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis3_small.jpg\" width=\"116\" height=\"90\" alt=\"\">\n</div>\n<div class=\"imgbox\" id=\"imgbox4\">\n    <img class=\"thumbnail\" src=\"https://7n.w3cschool.cn/statics/images/course/klematis4_small.jpg\" width=\"107\" height=\"90\" alt=\"\">\n    <br>\n</div>\n<p style=\"clear:both\">CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。</p>\n<p>Float（浮动），往往是用于图像，但它在布局时一样非常有用。</p>\n<hr>\n <h2>元素怎样浮动</h2> \n<p>元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。</p>\n<p>一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</p>\n<p>浮动元素之后的元素将围绕它。</p>\n<p>浮动元素之前的元素将不会受到影响。</p>\n<p>如果图像是右浮动，下面的文本流将环绕在它左边：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">img\n        <br>{\n        <br>float:right;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_float\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>彼此相邻的浮动元素</h2> \n<p>如果你把几个浮动的元素放到一起，如果有空间的话，它们将彼此相邻。</p>\n<p>在这里，我们对图片廊使用 float 属性：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code\">.thumbnail\n        <br>{\n        <br>float:left;\n        <br>width:110px;\n        <br>height:90px;\n        <br>margin:5px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_elements\" class=\"tryitbtn\">尝试一下 »</a></div>\n<hr>\n <h2>清除浮动 - 使用 clear</h2> \n<p>元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用 clear 属性。</p>\n<p>clear 属性指定元素两侧不能出现浮动元素。</p>\n<p>使用 clear 属性往文本中添加图片廊：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">.text_line\n        <br>{\n        <br>clear:both;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_float_clear\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b>\n提示：</b>如果您想要了解更多有关 clear 属性的知识，请访问本站的CSS参考手册：<span style=\"background-color: rgb(255, 255, 255);\"><a href=\"https://www.w3cschool.cn/cssref/pr-class-clear.html\" target=\"_blank\">CSS clear 属性</a></span>。</p>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\">\n     <h2>更多实例</h2> \n</div>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float2\" target=\"_blank\">为图像添加边框和边距并浮动到段落的右侧</a>\n\n</p>\n<p>让我们为图像添加边框和边距并浮动到段落的右侧</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float3\" target=\"_blank\">标题和图片向右侧浮动</a>\n\n</p>\n<p>让标题和图片向右侧浮动。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float4\" target=\"_blank\">让段落的第一个字母浮动到左侧</a>\n\n</p>\n<p>改变样式，让段落的第一个字母浮动到左侧。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_float6\" target=\"_blank\">创建一个没有表格的网页</a>\n\n</p>\n<p>使用 float 创建一个网页页眉、页脚、左边的内容和主要内容。</p>\n<hr>\n <h2>CSS 中所有的浮动属性</h2> \n<p>\"CSS\" 列中的数字表示不同的 CSS 版本（CSS1 或 CSS2）定义了该属性。</p>\n<table class=\"reference notranslate \">\n    <tbody>\n        <tr>\n            <th width=\"25%\" align=\"left\">属性</th>\n            <th width=\"43%\" align=\"left\">描述</th>\n            <th width=\"27%\" align=\"left\">值</th>\n            <th width=\"5%\" align=\"left\">CSS</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-class-clear.html\">clear</a>\n\n            </td>\n            <td>指定不允许元素周围有浮动元素。</td>\n            <td>left\n                <br>right\n                <br>both\n                <br>none\n                <br>inherit</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-class-float.html\">float</a>\n\n            </td>\n            <td>指定一个盒子（元素）是否可以浮动。</td>\n            <td>left\n                <br>right\n                <br>none\n                <br>inherit</td>\n            <td>1</td>\n        </tr>\n    </tbody>\n</table><hr>\n<h2>相关文章</h2>\n<p>CSS 参考手册：<a href=\"https://www.w3cschool.cn/css/html-css-float.html\" target=\"_blank\">CSS float 属性</a> </p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 20,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "f3fa14878e56833dc8618beb5257f127",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Positioning (定位)",
      "chapter_level_two_url": "/css/css-positioning.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Positioning (定位)</span> </h2><p> CSS position 属性，允许您将布局的一部分与另一部分重叠，还可以完成多年来通常需要使用多个表格才能完成的任务。</p>\n<hr>\n<div style=\"width:98%;height:100px;position:relative\">\n    <p style=\"position:absolute;top:0px;right:0px\">定位有时很棘手！</p>\n    <div style=\"width:55%;height:60%;position:absolute;top:0px;left:0px;border:1px solid #c3c3c3;background-color:#e5eecc;padding:0px 10px;z-index:1;\">\n         <h2>决定显示在前面的元素！</h2>\n    </div>\n    <div style=\"width:55%;height:60%;position:absolute;bottom:0px;right:0px;border:1px solid #c3c3c3;background-color:#e5eecc;padding:0px 10px;\">\n         <h2 style=\"margin-top:25px\">元素可以重叠！</h2>\n    </div>\n</div>\n<hr>\n <h2>Positioning (定位)</h2> \n<p>CSS 定位属性允许你为一个元素定位。它也可以将一个元素放在另一个元素后面，并指定一个元素的内容太大时，应该发生什么。</p>\n<p>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非事先设定 position 属性。他们也有不同的工作方式，这取决于定位方法.</p>\n<p>有四种不同的定位方法。</p>\n<hr>\n <h2>Static 定位</h2> \n<p>HTML 元素的默认值，即没有定位，元素出现在正常的流中。</p>\n<p>静态定位的元素不会受到 top, bottom, left, right 影响。</p>\n<hr>\n <h2>Fixed 定位</h2> \n<p>元素的位置相对于浏览器窗口是固定位置。</p>\n<p>即使窗口是滚动的它也不会移动：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p.pos_fixed\n        <br>{\n        <br>position:fixed;\n        <br>top:30px;\n        <br>right:5px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_fixed\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p><b>注意：</b> Fixed 定位在 IE7 和 IE8 下需要描述 !DOCTYPE 才能支持.</p>\n<p>Fixed 定位使元素的位置与文档流无关，因此不占据空间。</p>\n<p>Fixed 定位的元素和其他元素重叠。</p>\n<hr>\n <h2>Relative 定位</h2> \n<p>相对定位元素的定位是相对其正常位置。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h2.pos_left\n        <br>{\n        <br>position:relative;\n        <br>left:-20px;\n        <br>}\n        <br>h2.pos_right\n        <br>{\n        <br>position:relative;\n        <br>left:20px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_relative\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>可以移动的相对定位元素的内容和相互重叠的元素，它原本所占的空间不会改变。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h2.pos_top\n        <br>{\n        <br>position:relative;\n        <br>top:-50px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_relative2\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>相对定位元素经常被用来作为绝对定位元素的容器块。</p>\n<hr>\n <h2>Absolute 定位</h2> \n<p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于 &lt;html&gt;:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">h2\n        <br>{\n        <br>position:absolute;\n        <br>left:100px;\n        <br>top:150px;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_position_absolute\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>Absolutely 定位使元素的位置与文档流无关，因此不占据空间。</p>\n<p>Absolutely 定位的元素和其他元素重叠。</p>\n<hr>\n <h2>重叠的元素</h2> \n<p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素</p>\n<p>z-index 属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）</p>\n<p>一个元素可以有正数或负数的堆叠顺序：</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">img\n        <br>{\n        <br>position:absolute;\n        <br>left:0px;\n        <br>top:0px;\n        <br>z-index:-1;\n        <br>}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_zindex\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>具有更高堆叠顺序的元素总是在较低的堆叠顺序元素的前面。</p>\n<p><strong>注意：</strong> 如果两个定位元素重叠，没有指定 z - index，最后定位在 HTML 代码中的元素将被显示在最前面。</p>\n<hr>\n<div class=\"tryit_ex\">\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\">\n    <h2>更多实例</h2> \n</div>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_clip\" target=\"_blank\">裁剪元素的外形</a>\n</p>\n<p>此示例演示如何设置元素的外形。该元素被剪裁成这种形状，并显示出来。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_overflow\" target=\"_blank\">如何使用滚动条来显示元素内溢出的内容</a>\n</p>\n<p>这个例子演示了overflow属性创建一个滚动条，当一个元素的内容在指定的区域过大时如何设置以适应。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_pos_overflow_auto\" target=\"_blank\">如何设置浏览器自动溢出处理</a>\n</p>\n<p>这个例子演示了如何设置浏览器来自动处理溢出。</p>\n<p><a showtry=\"1\" href=\"/tryrun/showhtml/trycss_cursor\" target=\"_blank\">更改光标</a>\n</p>\n<p>这个例子演示了如何改变光标。</p>\n<hr>\n <h2>所有的CSS定位属性</h2> \n<p>\"CSS\" 列中的数字表示哪个CSS(CSS1 或者CSS2)版本定义了该属性。</p>\n<table class=\"reference\">\n    <tbody>\n        <tr>\n            <th width=\"25%\" align=\"left\">属性</th>\n            <th width=\"43%\" align=\"left\">说明</th>\n            <th width=\"27%\" align=\"left\">值</th>\n            <th width=\"5%\" align=\"left\">CSS</th>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-bottom.html\">bottom</a>\n            </td>\n            <td>定义了定位元素下外边距边界与其包含块下边界之间的偏移。</td>\n            <td>auto\n                <br> <i>length<br> %<br> </i>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-clip.html\">clip</a>\n            </td>\n            <td>剪辑一个绝对定位的元素</td>\n            <td><i>shape<br> </i>auto\n                <br>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-class-cursor.html\">cursor</a>\n            </td>\n            <td>显示光标移动到指定的类型</td>\n            <td><span class=\"value-inst-uri noxref\"><i>url</i><br> </span>auto\n                <br>crosshair\n                <br>default\n                <br>pointer\n                <br>move\n                <br>e-resize\n                <br>ne-resize\n                <br>nw-resize\n                <br>n-resize\n                <br>se-resize\n                <br>sw-resize\n                <br>s-resize\n                <br>w-resize\n                <br>text\n                <br>wait\n                <br>help</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-left.html\">left</a>\n            </td>\n            <td>定义了定位元素左外边距边界与其包含块左边界之间的偏移。</td>\n            <td>auto\n                <br> <i>length<br> %<br> </i>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-overflow.html\">overflow</a>\n                <br>\n            </td>\n            <td>设置当元素的内容溢出其区域时发生的事情。</td>\n            <td>auto\n                <br>hidden\n                <br>scroll\n                <br>visible\n                <br>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-class-position.html\">position</a>\n            </td>\n            <td>指定元素的定位类型</td>\n            <td>absolute\n                <br>fixed\n                <br>relative\n                <br>static\n                <br>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-right.html\">right</a>\n            </td>\n            <td>定义了定位元素右外边距边界与其包含块右边界之间的偏移。</td>\n            <td>auto\n                <br> <i>length<br> %<br> </i>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-top.html\">top</a>\n            </td>\n            <td>定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。</td>\n            <td>auto\n                <br> <i>length<br> %<br> </i>inherit</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td><a href=\"/cssref/pr-pos-z-index.html\">z-index</a>\n            </td>\n            <td>设置元素的堆叠顺序</td>\n            <td> <i>number<br> </i>auto\n                <br>inherit</td>\n            <td>2</td>\n        </tr>\n    </tbody>\n</table><h2>相关文章</h2><p>CSS 参考手册：<a href=\"https://www.w3cschool.cn/cssref/pr-class-position.html\" target=\"_blank\">CSS position 属性</a></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 4,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "5c2fbe2e993e5788d6e50eba885f359e",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS Id 和 Class选择器",
      "chapter_level_two_url": "/css/css-id-class.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">Id</span> 和 <span class=\"color_h1\">Class</span> </h2> \n<hr>\n <h2>id 和 class 选择器</h2> \n<p>如果你要在 HTML 元素中设置 CSS 样式，你需要在元素中设置 \"id\" 和 \"class\" 选择器。</p>\n<hr>\n <h2>id 选择器</h2> \n<p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p>\n<p>HTML 元素以 id 属性来设置 id 选择器,CSS 中 id 选择器以 <code># </code> 来定义。</p>\n<p>以下的样式规则应用于元素属性 id = \"para1\":</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">#para1\n        <br>{ text-align:center;\n        <br>color:red; }</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_syntax_id\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\" class=\"\"> ID 属性不要以数字开头，数字开头的 ID 在 Mozilla/Firefox 浏览器中不起作用。</p>\n<p>\n    <img src=\"https://www.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> ID 属性只能在每个 HTML 文档中出现一次。具体的解释，请参阅<a href=\"https://www.w3cschool.cn/xhtml/xhtml-structural01.html\" target=\"_blank\"> XHTML:网站重构</a>。\n    <br>\n</p>\n<hr>\n <h2>class 类选择器</h2> \n<p>class 选择器用于描述一组元素的样式，class 选择器有别于 id 选择器，class 可以在多个元素中使用。</p>\n<p>class 选择器在 HTML 中以 class 属性表示, 在 CSS 中，类选择器以一个点\"<code>.</code>\"号显示：</p>\n<p>在以下的例子中，所有拥有 center 类的 HTML 元素均为居中。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">.center {text-align:center;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_syntax_class\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>你也可以指定特定的 HTML 元素使用 class。</p>\n<p>在以下实例中, 所有的 p 元素使用 class=\"center\" 让该元素的文本居中:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p.center {text-align:center;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_syntax_element_class\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/lamp.gif\" alt=\"Remark\"> 类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。</p><br><h2>标签选择器<br></h2><p>除了提到的 id 和 class 选择器外，第三种选择器为标签选择器，即以 HTML 标签作为 CSS 修饰所用的选择器。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;style&gt;</p>\n        <p>h3{color:red;}\n        </p><p>&lt;/style&gt;</p>\n        <p>&lt;h3&gt;W3cschool教程&lt;/h3&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_id_class_1\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br></div>\n<h2>内联选择器<br></h2><p>第四种内联选择器即直接在标签内部写 CSS 代码。</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">\n        <p>&lt;h3 style=\"color:red;\"&gt;W3cschool教程&lt;/h3&gt;</p>\n    </div>\n    <br>\n<a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/try_css_id_class_2\" class=\"tryitbtn\">尝试一下 »</a>\n\n    <br></div>\n<p>这四种 CS 选择器有修饰上的优先级，即：</p>\n<p>内联选择器 &gt; id选择器 &gt; 类选择器 &gt; 标签选择器\n    <br>\n</p>\n<h2>扩展阅读</h2><p>在 HTML 标签中设置 CSS 样式时，有多种 CSS 选择器可供选择，你可以参考本站的<a href=\"https://www.w3cschool.cn/css3/css3-selector.html\" target=\"_blank\">CSS3选择器归类整理</a>（包含了CSS3中新增的选择器）来了解更多有关CSS选择器的内容。</p><p><br></p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 3,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "4b18bb7d8a0cdaa38cf227bc5ee9484d",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 语法",
      "chapter_level_two_url": "/css/css-syntax.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">语法</span> </h2> \n<hr>\n <h2>实例</h2> \n<ul>\n    <li>查看 <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/ex1\">实例 1</a> \n    </li>\n    <li>查看 <a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/ex2\">实例 2</a> \n    </li>\n</ul>\n<hr>\n <h2>CSS 实例</h2> \n<p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:</p>\n<p>\n    <img src=\"https://7n.w3cschool.cn/statics/images/course/selector.gif\" style=\"margin:0px\" alt=\"\">\n</p>\n<p>选择器通常是您需要改变样式的 HTML 元素。</p>\n<p>每条声明由一个属性和一个值组成。</p>\n<p>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p>\n<hr>\n <h2>CSS 实例</h2> \n<p>CSS 声明总是以分号 (<code> ;</code> ) 结束，声明组以大括号 (<code>{ }</code>) 括起来:</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p {color:red;text-align:center;}</p>\n    </div>\n</div>\n<p>为了让 CSS 可读性更强，你可以每行只描述一个属性:</p>\n<div class=\"example\">\n     <h2 class=\"example\">实例</h2> \n    <div class=\"example_code notranslate\">p\n        <br>{color:red;\n        <br>text-align:center;}</div>\n    <br><a target=\"_blank\" showtry=\"1\" href=\"/tryrun/showhtml/trycss_syntax1\" class=\"tryitbtn\">尝试一下 »</a> \n</div>\n <h3>CSS 颜色值的写法</h3>\n\n<p>在描述颜色的时候，除了使用英文单词 red，我们还可以使用十六进制的颜色值 #ff0000： </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">p { color: #ff0000; }</div>\n</div>\n<p>为了节约字节，我们可以使用 CSS 的缩写形式： </p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">p { color: #f00; }</div>\n</div>\n<p>我们还可以通过两种方法使用 RGB 值：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>p { color: rgb(255,0,0); } p { color: rgb(100%,0%,0%); }</p>\n    </div>\n</div>\n<p><b>提示：</b>当使用 RGB 百分比时，即使当值为 0 时也要写百分比符号。但是在其他的情况下就不需要这么做了。比如说，当尺寸为 0 像素时，0 之后不需要使用 px 单位。\n    <br>\n</p>\n<p>在本站的编程实战部分中，介绍了<a href=\"https://www.w3cschool.cn/codecamp/use-hex-code-for-specific-colors.html\" target=\"_blank\">CSS使用十六进制代码设置颜色</a>，以及<a href=\"https://www.w3cschool.cn/codecamp/use-rgb-values-to-color-elements.html\" target=\"_blank\">CSS使用rgb属性设置颜色</a>，你可以参考该部分的内容进行更多了解。</p>\n<hr>\n <h2>CSS 注释</h2> \n<p>注释是用来解释你的代码，并且可以随意编辑它，浏览器会忽略它。</p>\n<p>CSS注释以 \"<code>/*</code>\" 开始, 以 \"<code>*/</code>\" 结束, 实例如下:</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>/*这是个注释*/        </p>\n        <p>p        </p>\n        <p>{       </p>\n        <p>text-align:center;       </p>\n        <p>/*这是另一个注释*/     </p>\n        <p>color:black;     </p>\n        <p>font-family:arial;       </p>\n        <p>}</p>\n    </div>\n</div>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    },
    {
      "teach_name": "CSS 教程",
      "teach_introduction": "CSS 指层叠样式表（Cascading Style Sheets）。\r\n在我们的 CSS 教程中，您将学习如何使用 CSS 同时控制整个站点的样式和布局。\r\n通过与 XHTML 结合，CSS 可以帮助我们实行表现与结构分离的开发模式。\r\n通过使用 CSS 来提升工作效率！",
      "sort_index": 2,
      "parent_sort_index": 1,
      "chapter_level_one_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_one_parent_id": "0",
      "chapter_level_one_name": "CSS 教程",
      "chapter_level_one_url": "",
      "chapter_level_two_id": "a1a360bce6b4f7f0ef40c530b775b39e",
      "chapter_level_two_parent_id": "b5e667133e2a105292cd37be3a21c6c4",
      "chapter_level_two_name": "CSS 简介",
      "chapter_level_two_url": "/css/css-intro.html",
      "book_content": "<div class=\"content-bg\">\n<div class=\"content-intro view-box \"><h2>CSS <span class=\"color_h1\">简介</span> </h2>\n\n<hr>\n\n<h2>你需要具备的知识</h2>\n\n<p>在继续学习之前，你需要对下面的知识有基本的了解：</p>\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>HTML / XHTML</p>\n    </li>\n</ul>\n<p>如果你希望首先学习这些项目，请在 <a href=\"//www.w3cschool.cn/tutorial\" target=\"_blank\" textvalue=\"发现页\">入门教程</a> 访问相关教程。</p>\n<hr>\n\n<h2>什么是 CSS?</h2>\n\n<ul class=\" list-paddingleft-2\">\n    <li>\n        <p>CSS 指层叠样式表 ( <strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets )</p>\n    </li>\n    <li>\n        <p>样式定义<strong>如何显示</strong> HTML 元素</p>\n    </li>\n    <li>\n        <p>样式通常存储在<strong>样式表</strong>中</p>\n    </li>\n    <li>\n        <p>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong>\n\n        </p>\n    </li>\n    <li>\n        <p><strong>外部样式表</strong>可以极大提高工作效率</p>\n    </li>\n    <li>\n        <p>外部样式表通常存储在 <strong>CSS 文件</strong>中</p>\n    </li>\n    <li>\n        <p>多个样式定义可<strong>层叠</strong>为一</p>\n    </li>\n    <li>\n        <p>样式对网页中元素位置的排版进行像素级精确控制\n            <br>\n        </p>\n    </li>\n</ul>\n<hr>\n\n<h2>CSS 实例</h2>\n\n<p>一个 HTML 文档可以显示不同的样式: <a href=\"/statics/demosource/demo_default.htm\" target=\"_blank\">查看CSS是如何工作的</a>\n\n</p>\n<hr>\n\n<h2>CSS样式</h2>\n\n<p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p>\n<div class=\"example\">\n    <div class=\"example_code notranslate\">\n        <p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p>\n        <p>&lt;p&gt;这是一个段落。&lt;/p&gt;</p>\n    </div>\n</div>\n<p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .CSS 文件中。CSS 样式表极大的提高了工作效率，通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>\n<p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p>\n<p>当代浏览器都支持 CSS 。</p>\n\n<h2>多页面应用同一个样式</h2>\n\n<p>通常保存在外部的独立的 .CSS 文件（该文件不属于任何页面文件）可以在多个页面中使用同一个 CSS 样式表。通过在任何的页面文件中引用 .CSS 文件，你可以设置具有一致风格的多个页面。</p>\n\n<h2>样式层叠</h2>\n\n<p>样式层叠就是对一个元素多次设置同一个样式，这将使用最后一次设置的属性值。\n    <br>\n</p>\n\n<h3>样式层叠次序</h3>\n\n<p>当同一个 HTML 元素定义了多个样式时，应该使用哪个样式？</p>\n<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>\n<ol>\n    <li>浏览器缺省设置</li>\n    <li>外部样式表</li>\n    <li>内部样式表（位于 <code>&lt;head&gt;</code> 标签内部）</li>\n    <li>内联样式（在 HTML 元素内部）</li>\n</ol>\n<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p>\n<p>\n    <br>\n</p></div>\r\n<div style=\"clear:both\"></div>\n</div>"
    }
  ]
}
